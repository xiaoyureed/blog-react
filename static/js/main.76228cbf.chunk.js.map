{"version":3,"sources":["comp/Sider/Sider.module.css","comp/Head/Head.module.css","comp/Main/Main.module.css","assets/avatar.jpeg","comp/route/Link/Link.module.css","assets/head.png","comp/MdxContent/MdxContent.module.css","comp/items/About/About.module.css","../node_modules/markdown-toc/lib sync","assets/md sync /^/.*/.md$","serviceWorker.js","configs/itemConfig.js","comp/Sider/Sider.js","assets/md/index.js","comp/route/Link/Link.js","comp/Head/Head.js","comp/MdxContent/MdxContent.js","assets/mdx/hello/Hello.js","assets/mdx/hello/hello.md","assets/mdx/linux-note/linux-note.md","assets/mdx/db-design-note/db-design-note.md","assets/mdx/index.js","comp/items/About/About.js","comp/items/Book/Book.js","comp/items/Movie/Movie.js","comp/items/Music/Music.js","comp/items/Tool/Tool.js","comp/Main/Main.js","index.js"],"names":["module","exports","container","head","avatar","item","item-hover","items","main","table","__webpack_require__","p","link","webpackEmptyContext","req","e","Error","code","keys","resolve","id","Boolean","window","location","hostname","match","name","hash","React","Component","namePathMapping","map","path","require","Link","handleClick","ev","history","pushState","_this","props","to","react_default","a","createElement","style","Object","objectSpread2","this","className","css","onClick","Children","children","child","PureComponent","Head","state","hoverItemIndex","handleMouseOver","setState","target","closest","dataset","key","handleMouseOut","_this2","hoverStyle","backgroundColor","color","src","alt","onMouseOver","onMouseOut","index","data-key","parseInt","route_Link_Link","concat","MdxContent","HelloComp","layoutProps","MDXLayout","MDXContent","_ref","components","objectWithoutProperties","index_es","assign","mdxType","parentName","href","Hello","isMDXComponent","linux_note_MDXLayout","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","db_design_note_MDXLayout","align","articleRouteMap","hello","linux-note","LinuxNote","db-design-note","DbDesignNote","About","Book","Movie","Music","Tool","md","fetch","then","resp","text","mdContent","Main","addEventListener","Current","articleHash","replace","Article","comp_MdxContent_MdxContent","itemHash","comp_Head_Head","_wr","type","orig","rv","apply","arguments","Event","dispatchEvent","replaceState","ReactDOM","render","comp_Main_Main","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76228cbf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Sider_container__R3TX_\",\"head\":\"Sider_head__1mjba\",\"avatar\":\"Sider_avatar__367Em\",\"item\":\"Sider_item__11DsA\",\"item-hover\":\"Sider_item-hover__2Iz4N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Head_container__11OLk\",\"avatar\":\"Head_avatar__3K35n\",\"items\":\"Head_items__2iQEJ\",\"item\":\"Head_item__2LY5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__1qs6N\",\"table\":\"Main_table__2pQai\",\"item\":\"Main_item__1LTJ5\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.5cae69e3.jpeg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Link_link__3lNw2\"};","module.exports = __webpack_public_path__ + \"static/media/head.fd0a5a14.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MdxContent_container__2os_6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"About_container__37Laj\"};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 33;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 38;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const items = [\n  {name: '书', hash: 'books',},\n  {name: '乐', hash: 'musics',},\n  {name: '影', hash: 'movies',},\n  {name: '工具', hash: 'tools',},\n  {name: '我', hash: 'me',},\n];\n\nexport default items;\n","import React from 'react';\nimport css from './Sider.module.css';\nimport avatar from '../../assets/avatar.jpeg';\nimport items from \"../../configs/itemConfig\";\n\nclass Sider extends React.Component {\n  state = {\n      hoverItemIndex: '',\n  };\n\n  handleMouseOver = ev => {\n      this.setState({\n          hoverItemIndex: ev.target.dataset.key,// ev.target.dataset.key is a string\n      })\n  };\n\n  handleMouseOut = ev => {\n      this.setState({\n          hoverItemIndex: '',\n      })\n  };\n\n  render() {\n    const hoverStyle = {\n      backgroundColor: 'white',\n    };\n\n    return (\n        <div className={css.container}>\n          <div className={css.head}>\n              <img className={css.avatar} src={avatar} alt=\"\"/>\n          </div>\n          <div onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut}>\n              {items.map((item, index) => {\n                  return (\n                      <div data-key={index} key={index} className={css.item}\n                           style={parseInt(this.state.hoverItemIndex) === index ? hoverStyle : null}>\n                          {item}\n                      </div>\n                  );\n              })}\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default Sider;\n","const names = [\n    'hello',\n    // 'linux-note',\n];\n\nconst namePathMapping = names.map(name => {\n    return {\n        name,\n        // mds is an array, contains packed paths\n        path: name => require('./' + name + '/' + name + '.md'),\n    };\n});\n\nexport default namePathMapping;\n\n// todo: react 动态加载 - https://www.jianshu.com/p/27cc69eb4556","import React from 'react';\nimport css from './Link.module.css';\n\nclass Link extends React.PureComponent {\n\n    handleClick = ev => {\n        window.history.pushState(null, '', this.props.to);// trigger 'pushState' event\n    };\n\n    render() {\n        return (\n            <span style={{...this.props.style}} className={css.link} onClick={this.handleClick}>\n                {React.Children.map(this.props.children, child => child)}\n            </span>\n        );\n    }\n\n}\n\nexport default Link;","import React from 'react';\nimport css from './Head.module.css';\nimport avatar from \"../../assets/head.png\";\nimport items from \"../../configs/itemConfig\";\nimport Link from \"../route/Link\";\n\nclass Head extends React.PureComponent {\n  state = {\n    hoverItemIndex: '',\n  };\n\n  handleMouseOver = ev => {\n    this.setState({\n      hoverItemIndex: ev.target.closest('div').dataset.key,// ev.target.dataset.key is a string\n    })\n  };\n\n  handleMouseOut = ev => {\n    this.setState({\n      hoverItemIndex: '',\n    })\n  };\n\n  render() {\n    const hoverStyle = {\n      backgroundColor: 'white',\n      color: '#2e2e2e',\n    };\n\n    return (\n        <div className={css.container}>\n          <img className={css.avatar} src={avatar} alt=\"\"/>\n          <div className={css.items} onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut}>\n            {items.map((item, index) => {\n              return (\n                  <div data-key={index} key={index} className={css.item}\n                       style={parseInt(this.state.hoverItemIndex) === index ? hoverStyle : null}>\n                    <Link to={`#/items/${item.hash}`}>{item.name}</Link>\n                  </div>\n              );\n            })}\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default Head;\n","import React, {lazy, Component, Suspense} from 'react';\nimport css from './MdxContent.module.css';\n\nclass MdxContent extends React.PureComponent {\n  render() {\n    return (\n        <div className={css.container}>\n          {React.Children.map(this.props.children, child => child)}\n        </div>\n    );\n  }\n}\n\nexport default MdxContent;","import React from 'react';\n\nconst HelloComp = () => (\n    <div style={{\n      color: 'red',\n    }}>hello comp</div>\n);\n\nexport default HelloComp;\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.61,\"time\":36600,\"words\":122}\n/* @jsx mdx */\nimport HelloComp from './Hello';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"hello-world\"\n    }}>{`Hello, world!`}</h1>\n    <h2 {...{\n      \"id\": \"诞生记录\"\n    }}>{`诞生记录`}</h2>\n    <p>{`👉 俺原来的博客地址在这里 `}<a parentName=\"p\" {...{\n        \"href\": \"https://xiaoyureed.github.io\"\n      }}>{`XiaoYu’s Blog`}</a></p>\n    <p>{`👉 这个博客使用 create-react-app + mdx 完成, 主要是为了 react 练练手 (手里有锤子, 就想到处找钉子 😂)`}</p>\n    <p>{`👉 记录实现过程如下:`}</p>\n    <p>{`页面的布局是怎么简单怎么来, 就分了两大块, 用到了 `}<a parentName=\"p\" {...{\n        \"href\": \"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html\"\n      }}>{`Flex 布局`}</a></p>\n    <p>{`其次是 markdown 到 页面的渲染, 有很多不错的类库 像 `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/showdownjs/showdown\"\n      }}>{`showdownjs`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/jonschlinkert/remarkable\"\n      }}>{`remarkable`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/jonschlinkert/markdown-toc\"\n      }}>{`markdown-toc`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/markdown-it/markdown-it\"\n      }}>{`markdown-it`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"https://mdxjs.com/\"\n      }}>{`MDX`}</a>{`, 都可以选用, 由于看重 mdx 可以在 md 中插入 react 组件的特性, 最终选择了 `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/frontarm/create-react-blog\"\n      }}>{`mdx`}</a></p>\n    <p>{`在整合 create-react-app 和 mdx 时碰到问题, 参考 `}<a parentName=\"p\" {...{\n        \"href\": \"https://frontarm.com/james-k-nelson/mdx-with-create-react-app/\"\n      }}>{`https://frontarm.com/james-k-nelson/mdx-with-create-react-app/`}</a></p>\n    <p>{`试试插入 react component:`}</p>\n    <p>{`编写组件 HelloComp.js`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import React from 'react';\n\nconst HelloComp = () => (\n    <div style={{\n      color: 'red',\n    }}>hello comp</div>\n);\n\nexport default HelloComp;\n`}</code></pre>\n    <p>{`在 md 中使用`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import HelloComp from './Hello';\n\n...\n....\n\n<HelloComp/>\n`}</code></pre>\n    <p>{`呈现效果如下👇👇👇`}</p>\n    <HelloComp mdxType=\"HelloComp\" />\n    <h2 {...{\n      \"id\": \"tips\"\n    }}>{`Tips`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`# 本地预览调试\nyarn start\n\n# 新建文章: mdx 目录下\n# 完成后, 需要在 mdx/index.js 中导入\n\n# 部署\nyarn deploy\n\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"诞生记录\",\n    level: 2,\n    title: \"诞生记录\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"tips\",\n    level: 2,\n    title: \"Tips\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"36 min read\",\"minutes\":35.415,\"time\":2124900,\"words\":7083}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Linux Note | references: `}<a parentName=\"p\" {...{\n        \"href\": \"http://linux.vbird.org/\"\n      }}>{`1`}</a>{`; 各种命令使用实例: `}<a parentName=\"p\" {...{\n        \"href\": \"https://linuxtools-rst.readthedocs.io/zh_CN/latest/\"\n      }}>{`https://linuxtools-rst.readthedocs.io/zh_CN/latest/`}</a>{` ; 50个常用命令: `}<a parentName=\"p\" {...{\n        \"href\": \"https://gywbd.github.io/posts/2014/8/50-linux-commands.html\"\n      }}>{`https://gywbd.github.io/posts/2014/8/50-linux-commands.html`}</a>{` ; `}</p>\n    {\n      /*more*/\n    }\n    <h1 {...{\n      \"id\": \"常用命令\"\n    }}>{`常用命令`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\",\n        \"data-language\": \"sh\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"# system version info\\ncat /proc/version\\nuname -a\\n\\n# 是否安装\\n# Ubuntu\\ndpkg --get-selections | grep xxx\\n\\n\\n\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"通用\"\n    }}>{`通用`}</h2>\n    <h3 {...{\n      \"id\": \"vim-常用快捷键\"\n    }}>{`vim 常用快捷键`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`\n移动\n\nctrl+d    \"向下\"移动 【半页】\nctrl+u    “向上”移动 【半页】\npageup/pagedown 向上/向下整页\nG         移动到【最后一行】\ngg        移动到【第一行】\nn+enter   向下移动n行\n\n搜寻\n\n/keyword    向下搜寻keyword， 按下【n】后， 继续向下搜寻下一个， 【N】表示向上搜寻; 找到目标后回车光标到达目标位置\n\n复制/删除\n\ndd          删除整行\nyy          复制整行， 【p】在光标下一行粘贴\n:1,.d       删除第一行到当前行 (\".\"当前行 ，\"1,.\"表示从第一行到当前行 ，\"d\"删除)\n\n行号\n\n:set nu     显示行号\n:set nonu   取消显示行号\n\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"常用命令-1\"\n    }}>{`常用命令`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\",\n        \"data-language\": \"sh\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"\\n\\n\\n# 查看文本文件\\n\\nless -N &lt;file name&gt; # [b] 上一页，[d] 下一页\\n\\n# 网络状态, 端口号\\n\\nps -aux | grep &lt;httpd&gt;          # 查看各个进程的资源占用, 顺便可以看看是否正在运行\\nlsof -i:&lt;port&gt;                  #查看端口占用情况\\nnetstat -tunlp | grep &lt;xxx&gt;     # 查看端口号\\n\\n# 查服务是否启动\\npidof mysqld                    # 返回进程id\\n\\n\\n# 下载文件\\n\\ncurl -L &lt;source_url&gt; &gt; &lt;target_file_name&gt;\\nwget -O wordpress.zip http://www.jsdig.com/download.aspx?id=1080\\n\\n# 启动程序\\n\\n# nohub是保证后台启动, 默认将日志打印到nohup, 这里指定打印日志到 xxx.file\\n# 后台运行 正确和错误 output 输出到 xxx.file, 默认是前目录的 nohup.out 文件中, 当前目录的 nohup.out 文件不可写，输出重定向到$HOME/nohup.out文件中\\n# &amp;产生作业编号就是那个 [1] 19649,nohup要和&amp;一起用才能保证关闭窗口程序任然在运行\\nnohup &lt;cmd&gt; xxx.file 2&gt;&amp;1 &amp;\\n# 用jobs命令查看后台运行，fg + 编号调到前段来\\njobs\\nfg 1\\n\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"ubuntu下\"\n    }}>{`Ubuntu下`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\",\n        \"data-language\": \"sh\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"dpkg -l | grep &lt;httpd&gt;          # 查看程序是否安装\\ndpkg -L | grep &lt;httpd&gt;          # 查看程序安装路径\\naptitude show &lt;httpd&gt;           # 查看软件版本\\n\\n# 搜索\\n\\napt-cache search package        # 搜索包\\napt-cache show package          # 获取包的相关信息，如说明、大小、版本等\\n\\n# 安装\\n\\napt-get install package [-y]        # 安装包[ 默认yes ]\\n\\n# 卸载\\n\\napt-get remove package [--purge]          # 删除包[同时删除配置文件]\\napt-get autoremove              # 自动删除不需要的包\\n\\n\"\n        }\n      }}></code></pre>\n    <h1 {...{\n      \"id\": \"介绍\"\n    }}>{`介绍`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`Linux是 GNU GPL授权, 参考posix设计规范, 所以兼容于Unix`}</li>\n      <li parentName=\"ul\">{`Linux kernel 版本: 主次版本为奇数(如2.5.xx)表示发展中版本(development), 主次版本为偶数(如2.6.xx)表示稳定版(stable)`}</li>\n      <li parentName=\"ul\">{`Linux释出版本(distribution):如centos, 是我们常用的版本, 表示主次版本架构不变的情况下, 新增的功能积累到一定的程度新释出的核心版本; 所以碰到问题正确的提问方式是: 我的Linux是centos这个distribution, 版本为5.x, 请问…..`}</li>\n      <li parentName=\"ul\">{`著名的distribution: red hat的rhel(服务器), suse(服务器), ubuntu(桌面), fedora(桌面), debian(桌面), openSuse(桌面)`}</li>\n      <li parentName=\"ul\">{`套件管理方式: dpkg, rpm`}</li>\n    </ul>\n    <h1 {...{\n      \"id\": \"主机规划-磁盘分区\"\n    }}>{`主机规划-磁盘分区`}</h1>\n    <h2 {...{\n      \"id\": \"系统开机过程\"\n    }}>{`系统开机过程`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`BIOS：开机主动执行, 找到可开机的设备(如硬盘)`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`MBR：主要启动记录区(Master Boot Record, MBR)：可以安装开机管理程序(boot loader)的地方`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`开机管理程序(boot loader)：一支可读核心档案来执行的软件, 可以安装在MBR 和 每个分区的 boot sector(启动扇区), 这是一个重要的设计, 这样就可以制作多重引导的环境(多系统), 因为我们可以将不同的boot loader安装到不同的分区的最前端(boot sector)而不用覆盖整个磁盘唯一的MBR; boot loader可以有这些作用:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`提供选单：用户可以选择不同的开机项目，这也是多重引导的重要功能`}</li>\n          <li parentName=\"ul\">{`载入核心档案`}</li>\n          <li parentName=\"ul\">{`转交其他 loader：将开机管理功能转交给其他 loader 负责`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`核心档案：开始操作系统的功能`}</p>\n      </li>\n    </ol>\n    <p>{`BIOS 和 MBR 都是硬件本身会支持的功能,  Boot loader 则是操作系统安装在 MBR 上面的一套软件`}</p>\n    <h2 {...{\n      \"id\": \"硬件设备在linux中的文件名称\"\n    }}>{`硬件设备在Linux中的文件名称`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_1.png\",\n        \"alt\": null\n      }}></img></p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_2.png\",\n        \"alt\": null\n      }}></img></p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_8.png\",\n        \"alt\": null\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"磁盘组成\"\n    }}>{`磁盘组成`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_3.png\",\n        \"alt\": null\n      }}></img></p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_4.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`磁柱是磁盘分区的最小单位\n整个磁盘的第一个扇区特别重要, 记录了整个磁盘的元信息, 记录2点信息:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`主要启动记录区(Master Boot Record, MBR)：可以安装开机管理程序的地方，有 446 bytes`}</li>\n      <li parentName=\"ol\">{`分割表(partition table)：记录整颗硬盘分割癿状态，有 64 bytes`}</li>\n    </ol>\n    <p>{`下面着重谈谈磁盘分区表(partition table)`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_5.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\">{`其实所谓癿『分割』叧是针对那个 64 bytes 癿分割表迚行设定而已`}</li>\n      <li parentName=\"ul\">{`硬盘默讣分割表仅能写入四组分割信息`}</li>\n      <li parentName=\"ul\">{`这四组分割信息我们称为主要(Primary) or 延伸(Extended)分割槽`}</li>\n      <li parentName=\"ul\">{`当系统要写入磁盘时，一定会参考磁盘分区表，才能针对某个分割槽迚行数据处理`}</li>\n      <li parentName=\"ul\">{`延伸分割最多只能有1个, 这1个继续分割出多个逻辑分区`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"磁盘分割\"\n    }}>{`磁盘分割`}</h2>\n    <p>{`为什么要分割?`}</p>\n    <ul>\n      <li parentName=\"ul\">{`数据安全`}</li>\n      <li parentName=\"ul\">{`提高系统性能(如: 当有数据需要读取自分割后的分区时, 磁盘只会搜寻1–100磁柱而不会搜寻全部磁盘)`}</li>\n    </ul>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_6.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`硬盘四个分割记录区仅使用到两个，P1 为主要分割，而 P2 则为延伸分割, 延伸分割可以继续分割多个逻辑分区\n上述分区在Linux中文件名为 /dev/hda`}{`[1–2]`}{`, /dev/hda`}{`[5–9]`}</p>\n    <p>{`怎举装置文件名没有/dev/hda3 , /dev/hda4 呢？因为前面四个号码都是保留给 Primary 和 Extended 用的, 所以逻辑分割槽装置名称号码就由 5 号开始`}</p>\n    <ul>\n      <li parentName=\"ul\">{`简单自定义分割, 适合新手:分割`}{`[/(根目录)]`}{`和`}{`[swap(内存置换空间)]`}{`即可, `}{`[/]`}{`对应的磁盘要容量最大; 此外如果可以, 预留一个备用的剩余磁盘容量供练习分区or 备份之用`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`如: 20G硬盘, 15G的分区给`}{`[/]`}{`, 512M的分区给`}{`[swap]`}{`, 剩下的作为预留备份磁盘`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`最好的分割: 根据用途不同, 为 /, /boot, /usr, /home, /var, /Swap 分配合适的磁盘空间; 如: 希望邮件主机大点, 则 /var 分配大点. 开放samba服务, 给其他人存放资料, /home 分配大点. `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"挂载mount文件系统磁盘和目录树结合\"\n    }}>{`挂载(mount):文件系统(磁盘)和目录树结合`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_7.png\",\n        \"alt\": null\n      }}></img></p>\n    <h1 {...{\n      \"id\": \"linux系统目录规范filesystem-hierarchy-standard-fhs\"\n    }}>{`linux系统目录规范/Filesystem Hierarchy Standard (FHS)`}</h1>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_26.png\",\n        \"alt\": null\n      }}></img></p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_27.png\",\n        \"alt\": null\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"一份linux目录的详细说明\"\n    }}>{`一份linux目录的详细说明`}</h2>\n    <p>{`简单版本:`}</p>\n    <p>{`/ 根目录下`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`- opt/ 安装的自定义软件包, tomcat, node, redis...\n\n- etc/ 程序的全局配置文件 (系统密码)\n- etc/passwd 用户数据库\n- etc/shadow 影子口令文件。就是密码文件, 只对root可读。这使破译口令更困难\n- etc/group 用户组\n- etc/init.d 启动脚本\n- etc/rc 启动脚本\n- etc/rc.d\n\n- usr/ (unix system resource) 安装发行版官方软件包的位置\n- usr/bin 大部分软件的命令\n- usr/sbin root用户才能执行的命令\n- usr/share 程序资源文件(MySQL配置文件模板)\n- usr/local 用户自己安装的程序的快捷方式 (下载到 /opt/ 下的程序会在这里配置软链接)\n\n- var/ 动态数据。这个目录的内容是经常变动的\n- var/www apache服务器网站内容\n- var/log 日志文件, 需要定期删除\n- var/lib 会动态改变的数据文件 (MySQL的数据文件)\n\n- bin/ 开机, 进入单人维护模式 相关的命令, 系统程序相关命令(ls , mkdir)\n- sbin/ 开机, 进入单人维护模式 相关命令, root的命令\n\n`}</code></pre>\n    <p>{`详细版本:`}</p>\n    <p>{`/ 根目录    (/必须和如下目录在一个分区: /bin, /sbin, /etc, /dev, /lib; 而/home, /usr, /var, /tmp最好和/在不同分区)  - 下面的目录都在根目录下`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`boot/    启动文件`}{`[开机配置文件]`}{`。Linux的内核及引导系统程序所需要的文件目录，比如 vmlinuz initrd.img 文件都位于这个目录中。在一般情况下，GRUB或LILO系统引导管理器也位于这个目录；`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`grub/             Grub引导器相关的文件`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`dev/      设备文件。设备文件在安装是产生，以后可以用 /dev/MAKEDEV 描述。 /dev/MAKEDEV.local 是系统管理员为本地设备文件(或连接)写的描述文稿 (即如一些非标准设备驱动不是标准MAKEDEV 的一部分)。`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`opt/      表示的是可选择的， 额外的意思，比如自定义软件包，额外安装的可选应用程序包所放置的位置。一般情况下，我们可以把tomcat等都安装到这里；。有些我们自己编译的软件包，就可以安装在这个目录中；通过源码包安装的软件，可以通过 ./configure —prefix=/opt/目录 。`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`proc/    是一个假的文件系统。它不存在在磁盘某个磁盘上。而是由核心在内存中产生。用于提供关于系统的信息(originally about processes, hence the name)。 虚拟文件系统目录，是系统内存的映射。可直接访问这个目录来获取系统信息。 /proc 文件系统在proc man页中有更详细的说明。`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`1/                   关于进程1的信息目录。每个进程在/proc 下有一个名为其进程号的目录。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`cpuinfo          处理器信息，如类型、制造商、型号和性能。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`devices         当前运行的核心配置的设备驱动的列表。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`dma               显示当前使用的DMA通道。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`filesystems核心配置的文件系统。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`interrupts    显示使用的中断，and how many of each there have been.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`ioports 当前使用的I/O端口。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`kcore             系统物理内存映象。与物理内存大小完全一样，但不实际占用这么多内存；it is generated on the fly as programs access it. (记住：除非你把它拷贝到什么地方，/proc 下没有任何东西占用任何磁盘空间。)`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`kmsg             核心输出的消息。也被送到syslog 。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`ksyms            核心符号表。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`loadavg         系统\"平均负载\"；3个没有意义的指示器指出系统当前的工作量。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`meminfo       存储器使用信息，包括物理内存和swap。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`modules       当前加载了哪些核心模块。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`net                 网络协议状态信息。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`self                 到查看/proc 的程序的进程目录的符号连接。当2个进程查看/proc 时，是不同的连接。这主要便于程序得到它自己的进程目录。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`stat                系统的不同状态，such as the number of page faults since the system was booted.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`uptime          系统启动的时间长度。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`version          核心版本。`}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`mnt/     临时挂载另外的文件系统。这个目录一般是用于存放挂载储存设备的挂载目录的，比如有cdrom 等目录。可以参看/etc/fstab的定义。有时我们可以把让系统开机自动挂载文件系统，把挂载点放在这里也是可以的。`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`cdrom           光驱。`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`media/ 挂载媒体设备`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`root/    root用户的$HOME目录`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`home/  普通用户的$HOME目录`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`user/             用户`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`bin/       系统程序。存放二进制可执行文件(ls,cat,mkdir等)，常用命令一般都在这里；`}</p>\n        <p parentName=\"li\">{`  功能和/usr/bin类似，区别是/bin主要放置在开机时用到的以及进入单人维护模式还能够被使用的命令;而/usr/bin放置的是大部分软件提供的指令。`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`sbin/     管理员系统程序, /bin和/sbin都和开机/单人维护模式有关。`}</p>\n        <p parentName=\"li\">{`  大多是涉及系统管理的命令的存放，是超级权限用户root的可执行命令存放地，普通用户无权限执行这个目录下的命令，`}</p>\n        <p parentName=\"li\">{`  这个目录和/usr/sbin; /usr/X11R6/sbin或/usr/local/sbin目录是相似的；`}</p>\n        <p parentName=\"li\">{`  凡是目录sbin中包含的都是root权限才能执行的。`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`lib/        程序所需的共享库 （库文件）。可能还有 lib64/`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`- modules       核心可加载模块，特别是那些恢复损坏系统时引导所需的(例如网络和文件系统驱动)。\n`}</code></pre>\n        <p parentName=\"li\">{`│`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`etc/      系统程序和大部分应用程序的`}<inlineCode parentName=\"p\">{`全局配置文件`}</inlineCode>{`,尤其passwd, shadow`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`init.d/   SystemV风格的启动脚本`}{`[系统开机时候加载服务的scripts的摆放地点]`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`rcX.d/    启动脚本的链接，定义运行级别`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`network/      网络配置文件`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`X11/               图形界面配置文件`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`rc or rc.d or rc?.d         启动、或改变运行级时运行的scripts或scripts的目录。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`passwd                  用户数据库，其中的域给出了用户名、真实姓名、家目录、加密的口令和用户的其他信息。格式见passwd 的man页。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`fdprm            软盘参数表。说明不同的软盘格式。用setfdprm 设置。更多的信息见setfdprm 的man页。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`fstab              启动时mount -a命令(在/etc/rc 或等效的启动文件中)自动mount的文件系统列表。 Linux下，也包括用swapon -a启用的swap区的信息。见4.8.5节和mount 的man页。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`group            类似/etc/passwd ，但说明的不是用户而是组。见group 的man页。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`inittab  init 的配置文件。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`issuegetty 在登录提示符前的输出信息。通常包括系统的一段短说明或欢迎信息。内容由系统管理员确定。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`magicfile      的配置文件。包含不同文件格式的说明，file 基于它猜测文件类型。见magic 和file 的man页。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`motd             Message Of The Day，成功登录后自动输出。内容由系统管理员确定。经常用于通告信息，如计划关机时间的警告。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`mtab             当前安装的文件系统列表。由scripts初始化，并由mount 命令自动更新。需要一个当前安装的文件系统的列表时使用，例如df 命令。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`shadow                  在安装了影子口令软件的系统上的影子口令文件。影子口令文件将/etc/passwd 文件中的加密口令移动到/etc/shadow 中，而后者只对root可读。这使破译口令更困难。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`login              defslogin 命令的配置文件。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`printcap        类似/etc/termcap ，但针对打印机。语法不同。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`profile,csh.login,csh.cshrc  登录或启动时Bourne或C shells执行的文件。这允许系统管理员为所有用户建立全局缺省环境。各shell见man页。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`securetty     确认安全终端，即哪个终端允许root登录。一般只列出虚拟控制台，这样就不可能(至少很困难)通过modem或网络闯入系统并得到超级用户特权。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`shells             列出可信任的shell。chsh 命令允许用户在本文件指定范围内改变登录shell。提供一台机器FTP服务的服务进程ftpd 检查用户shell是否列在 /etc/shells 文件中，如果不是将不允许该用户登录。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`termcap       终端性能数据库。说明不同的终端用什么\"转义序列\"控制。写程序时不直接输出转义序列(这样只能工作于特定品牌的终端)，而是从 /etc/termcap 中查找要做的工作的正确序列。这样，多数的程序可以在多数终端上运行。见termcap 、 curs_termcap 和terminfo 的man页。`}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`usr/      这个是系统存放程序的目录 （Unix system resource），比如命令、帮助文件等。这个目录下有很多的文件和目录。当我们`}<inlineCode parentName=\"p\">{`安装一个Linux发行版官方提供的软件包时，大多安装在这里`}</inlineCode>{`。如果有涉及服务器配置文件的，会把配置文件安装在/etc目录中。`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`bin/                几乎所有用户命令。有些命令在/bin 或/usr/local/bin 中。`}{`[一般用户指令]`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`sbin/              根文件系统不必要的系统管理命令，例如多数服务程序。`}{`[系统管理员指令]`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`lib/                 应用程序库文件，程序或子系统的不变的数据文件`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`share/           应用程序资源文件`}</p>\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">\n                <p parentName=\"li\">{`fonts              字体目录`}</p>\n              </li>\n              <li parentName=\"ul\">\n                <p parentName=\"li\">{`man 或 doc        帮助目录`}</p>\n              </li>\n            </ul>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`src/                应用程序源代码`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`local/             本地安装的软件和其他文件放在这里。`}</p>\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`soft/              用户程序      ， 下面还有单独文件夹， 通常使用单独文件夹`}</li>\n            </ul>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`X11R6/                   图形界面系统`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`include/        C编程语言的头文件。为了一致性这实际上应该在/usr/lib 下，但传统上支持这个名字。`}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`var/      动态数据。这个目录的内容是经常变动的；`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`www/            目录是定义Apache服务器站点存放目录；`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`catman/       当要求格式化时的man页的cache。man页的源文件一般存在/usr/man/man`}<em parentName=\"p\">{` 中；有些man页可能有预格式化的版本，存在/usr/man/cat`}</em>{` 中。而其他的man页在第一次看时需要格式化，格式化完的版本存在/var/man 中，这样其他人再看相同的页时就无须等待格式化了。 (/var/catman 经常被清除，就象清除临时目录一样。)`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`lib/                 `}<inlineCode parentName=\"p\">{`系统正常运行时要改变的一些库文件，比如MySQL`}</inlineCode>{`的，以及MySQL数据库的的存放地`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`local/             安装的程序的可变数据(即系统管理员安装的程序)。注意，如果必要，即使本地安装的程序也会使用其他/var 目录，例如/var/lock 。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`lock/              锁定文件。许多程序遵循在/var/lock 中产生一个锁定文件的约定，以支持他们正在使用某个特定的设备或文件。其他程序注意到这个锁定文件，将不试图使用这个设备或文件。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`log/                各种程序的Log文件,`}{`[摆放系统注册表档案的地方]`}{`，特别是login (/var/log/wtmp log所有到系统的登录和注销) 和syslog (/var/log/messages 里存储所有核心和系统程序信息。 /var/log 里的文件经常不确定地增长，应该定期清除。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`run/               保存到下次引导前有效的关于系统的信息文件。例如， /var/run/utmp 包含当前登录的用户的信息。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`spool/            mail, news, 打印队列和其他队列工作的目录。每个不同的spool在/var/spool 下有自己的子目录，例如，用户的邮箱在/var/spool/mail 中。`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`tmp/              比/tmp 允许的大或需要存在较长时间的临时文件。 (虽然系统管理员可能不允许/var/tmp 有很旧的文件。)`}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`temp/                     临时文件目录，有时用户运行程序的时候，会产生临时文件。/tmp就用来存放临时文件的。/var/tmp目录和这个目录相似。`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`lost+found/  在ext2或ext3文件系统中，当系统意外崩溃或机器意外关机，而产生一些文件碎片放在这里。当系统启动的过程中fsck工具会检查这里，并修复已经损坏的文件系统。 有时系统发生问题，有很多的文件被移到这个目录中，可能会用手工的方式来修复，或移到文件到原来的位置上。`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"不能和分开到不同分区的目录\"\n    }}>{`不能和`}{`[/]`}{`分开到不同分区的目录`}</h2>\n    <p>{`另外要注意的是，因为`}{`[/]`}{`和开机有关，开机过程中仅有`}{`[/]`}{`会被挂载, 其他分割槽则是在开机完成后才会持续的挂载。就是因为如此，因此`}{`[/]`}{`下和开机过程有关的目录就不能够和`}{`[/]`}{`放到不同的分割槽去, 哪些目彔不可与`}{`[/]`}{`分开呢？有底下这些：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`/etc：配置文件 `}</li>\n      <li parentName=\"ul\">{`/bin：重要执行档 `}</li>\n      <li parentName=\"ul\">{`/dev：所需要的装置档案 `}</li>\n      <li parentName=\"ul\">{`/lib：执行档所需的函式库/核心所需的模块 `}</li>\n      <li parentName=\"ul\">{`/sbin：重要的系统执行文件 `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"fhs推荐的目录规范\"\n    }}>{`FHS推荐的目录规范`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_33.png\",\n        \"alt\": null\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"的内容和意义\"\n    }}>{`[/]`}{`的内容和意义`}</h3>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_34.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_28.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_29.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_30.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_31.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_32.png\",\n        \"alt\": null\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"usr的内容和意义\"\n    }}>{`[/usr]`}{`的内容和意义`}</h3>\n    <p>{`其实 usr 是 Unix Software Resource 的缩写， 也就是『Unix操作系统软件资源』所放置的目录，而不是用户的数据`}</p>\n    <p>{`依据 FHS 的基本定义，/usr 里面放置的数据属于可分享的不可变动的(shareable, static)`}</p>\n    <p>{`类似 Windows 系统的『C:\\\\Windows\\\\ + C:\\\\Program files\\\\』这两个目录的综合体，系统刚安装完毕时，这个目录会占用最多的硬盘容量。 一般来说，/usr 的次目录建议有底下这些:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_35.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_36.png\",\n        \"alt\": null\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"var的内容和意义\"\n    }}>{`[/var]`}{`的内容和意义`}</h3>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_37.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_38.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_39.png\",\n        \"alt\": null\n      }}></img></p>\n    <h1 {...{\n      \"id\": \"quickstart\"\n    }}>{`quickstart`}</h1>\n    <h2 {...{\n      \"id\": \"命令帮助\"\n    }}>{`命令帮助`}</h2>\n    <h3 {...{\n      \"id\": \"whatis\"\n    }}>{`whatis`}</h3>\n    <p><inlineCode parentName=\"p\">{`whatis command`}</inlineCode>{` 命令简述 , 显示命令所在的具体的文档类别`}</p>\n    <p><inlineCode parentName=\"p\">{`whatis -w \"loca*\"`}</inlineCode>{` 正则匹配`}</p>\n    <h3 {...{\n      \"id\": \"info\"\n    }}>{`info`}</h3>\n    <p><inlineCode parentName=\"p\">{`info command`}</inlineCode>{` 更加详细的说明文档:类似于man, 只支持info格式的说明文件`}</p>\n    <h3 {...{\n      \"id\": \"man\"\n    }}>{`man`}</h3>\n    <p>{`帮助文档分为了如下9个类别( 一般我们查询bash命令，归类在1类中 )`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`(1)、用户可以操作的命令或者是可执行文件\n(2)、系统核心可调用的函数与工具等\n(3)、一些常用的函数与数据库\n(4)、设备文件的说明\n(5)、设置文件或者某些文件的格式\n(6)、游戏\n(7)、惯例与协议等。例如Linux标准文件系统、网络协议、ASCⅡ，码等说明内容\n(8)、系统管理员可用的管理条令\n(9)、与内核有关的文件\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`man 3 printf`}</inlineCode>{` 查看第三类帮助文档`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`man -k keyword`}</inlineCode>{` 关键字查询命令`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`man command`}</inlineCode>{` 查看指令, 例如: man date, 空格翻页, q退出, `}<inlineCode parentName=\"p\">{`/keyword`}</inlineCode>{`回车键搜索, n跳到下一个搜索目标, N跳到上一个目标`}</p>\n        <p parentName=\"li\">{`  `}<img parentName=\"p\" {...{\n            \"src\": \"Screenshot_14.png\",\n            \"alt\": null\n          }}></img></p>\n        <p parentName=\"li\">{`  其中 DATE(1)中的\"1\"表示什么呢?`}</p>\n        <p parentName=\"li\">{`  `}<img parentName=\"p\" {...{\n            \"src\": \"Screenshot_15.png\",\n            \"alt\": null\n          }}></img></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`man -f command`}</inlineCode>{`(等同于`}<inlineCode parentName=\"p\">{`whatis command`}</inlineCode>{`, 前提是建立命令数据库:`}<inlineCode parentName=\"p\">{`makewhatis`}</inlineCode>{`) 查看更多命令相关信息, 严格匹配下图左边的命令名称, 如果需要更具关键字匹配 `}<inlineCode parentName=\"p\">{`man -k command`}</inlineCode>{`(等同于`}<inlineCode parentName=\"p\">{`apropos command`}</inlineCode>{`)`}</p>\n        <p parentName=\"li\">{`  `}<img parentName=\"p\" {...{\n            \"src\": \"Screenshot_16.png\",\n            \"alt\": null\n          }}></img></p>\n        <p parentName=\"li\">{`  有两个相关命令: man(1), man(7), 查看指定命令 `}<inlineCode parentName=\"p\">{`man 1 man`}</inlineCode>{`or `}<inlineCode parentName=\"p\">{`man 7 man`}</inlineCode>{`;\n如果仅仅使用 `}<inlineCode parentName=\"p\">{`man man`}</inlineCode>{` 到底使用哪个描述文件呢? 在/etc/man.conf里配置`}</p>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"which\"\n    }}>{`which`}</h3>\n    <p><inlineCode parentName=\"p\">{`which command`}</inlineCode>{` 查看程序的binary文件(可直接执行的文件)所在路径`}</p>\n    <p><inlineCode parentName=\"p\">{`whereis command`}</inlineCode>{` 查看程序的搜索路径(一般是压缩文件)`}</p>\n    <h2 {...{\n      \"id\": \"命令行进入xwindow\"\n    }}>{`命令行进入xwindow`}</h2>\n    <p>{`如果你是以纯文本环境启动 Linux 的， tty7 是没有的！万一如此的话，那要怎举启劢 X 窗口画面呢？ — `}<inlineCode parentName=\"p\">{`startx`}</inlineCode>{`, 前提是安装了x window system`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_9.png\",\n        \"alt\": null\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"命令行提示符\"\n    }}>{`命令行提示符`}</h2>\n    <p>{`root登录 提示符号\"#\", 普通的则是\"$\"`}</p>\n    <h2 {...{\n      \"id\": \"指令格式\"\n    }}>{`指令格式`}</h2>\n    <p>{` `}<inlineCode parentName=\"p\">{`command [-opts] [--options] param1 param2`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"跳脱enter键换行\"\n    }}>{`跳脱enter键换行`}</h2>\n    <p>{`使用`}{`[`}<inlineCode parentName=\"p\">{`\\\\`}</inlineCode>{`]`}{`来跳脱enter, 使指令换行`}</p>\n    <h2 {...{\n      \"id\": \"命令行中文乱码设置语系\"\n    }}>{`命令行中文乱码,设置语系`}</h2>\n    <p>{`中文乱码:需要切换语系, `}<inlineCode parentName=\"p\">{`echo $LANG`}</inlineCode>{`显示当前语系. `}<inlineCode parentName=\"p\">{`LANG=en_US`}</inlineCode>{`设置语系(暂时的, 再次登录会失效)`}</p>\n    <h2 {...{\n      \"id\": \"tab键\"\n    }}>{`tab键`}</h2>\n    <p>{`Tab键: 智能补全`}</p>\n    <h2 {...{\n      \"id\": \"命令终止\"\n    }}>{`命令终止`}</h2>\n    <p>{`Ctrl+c: 指令终止`}</p>\n    <h2 {...{\n      \"id\": \"输入结束\"\n    }}>{`输入结束`}</h2>\n    <p>{`Ctrl+d: 键盘输入结束 or 离开`}</p>\n    <h2 {...{\n      \"id\": \"系统文档信息\"\n    }}>{`系统文档,信息`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`/usr/share/doc 其他的一些文档, 比如需要利用一系列软件来达成一个功能等等, 可以查阅这里的文档`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`查看系统版本: `}<inlineCode parentName=\"p\">{`uname -r`}</inlineCode>{`查看实际kernel版本; `}<inlineCode parentName=\"p\">{`lsb_release -a`}</inlineCode>{`查看distribution版本;`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"环境变量\"\n    }}>{`环境变量`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`环境变量`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`echo $PATH`}</inlineCode>{` 查看环境变量(每个目录使用冒号分割, 有顺序之分)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`PATH=\"$PATH\":/root`}</inlineCode>{` 修改环境变量`}</li>\n          <li parentName=\"ul\">{`为了安全起见，不建议将『.』加入 PATH 的搜寻目录中;`}</li>\n          <li parentName=\"ul\">{`不同身份使用者预设置的 PATH 不同，默认能够随意执行的命令也不同(如 root 和 vbird)`}</li>\n          <li parentName=\"ul\">{`PATH 可以修改，所以一般使用者还是可以透过修改 PATH 来执行某些位亍/sbin 或/usr/sbin 下的指令；`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"日期时间日历计算器\"\n    }}>{`日期时间日历计算器`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`日期时间(date),日历(cal),计算器(bc)`}</li>\n    </ul>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_10.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_11.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_12.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_13.png\",\n        \"alt\": null\n      }}></img></p>\n    <h1 {...{\n      \"id\": \"关机\"\n    }}>{`关机`}</h1>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`首先查看系统使用状态, `}<inlineCode parentName=\"p\">{`who`}</inlineCode>{`看看有谁在线, `}<inlineCode parentName=\"p\">{`netstat -a`}</inlineCode>{`看看网络的联机状态, `}<inlineCode parentName=\"p\">{`ps -aux`}</inlineCode>{`看看后台执行的程序`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`通知在线的使用者关机时间`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`关机, shutdown/reboot`}</p>\n      </li>\n    </ol>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_18.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`模拟一个关机过程:`}</p>\n    <p>{`首先 `}<inlineCode parentName=\"p\">{`sync`}</inlineCode>{`内存数据同步到磁盘;\n知道shutdown但是不知道具体用法, `}<inlineCode parentName=\"p\">{`man shutdown`}</inlineCode>{`查看; 用法为: shutdown `}{`[-t 秒][-arkhncfF]`}{` 时间 `}{`[警告讯息]`}{` `}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_19.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`看几个例子:`}</p>\n    <p><inlineCode parentName=\"p\">{`shutdown -h 10 'I will shutdown after 10 min'`}</inlineCode>{` 10 min后关机, 并发送警告信息出去\n`}<inlineCode parentName=\"p\">{`shutdown -h +10`}</inlineCode>{`10 min后关机\n`}<inlineCode parentName=\"p\">{`shutdown -h now`}</inlineCode>{`立马关机\n`}<inlineCode parentName=\"p\">{`shutdown -h 10:15`}</inlineCode>{` 今天的10:15分会关机, 如果命令键入时间晚于这个时间, 会第二天的这个时间点执行关机\n`}<inlineCode parentName=\"p\">{`shutdown -r now`}</inlineCode>{` 马上重启\n`}<inlineCode parentName=\"p\">{`shutdown -r +30 'The system will reboot after 30 min'`}</inlineCode>{`30 min后reboot, 并发送信息\n`}<inlineCode parentName=\"p\">{`shutdown -k now 'some message'`}</inlineCode>{` 给所有在线者发送信息, 不会真的关机`}</p>\n    <p><inlineCode parentName=\"p\">{`sync;sync;sync;reboot`}</inlineCode>{`同步数据重启`}</p>\n    <p>{`关机还有另一种方式: `}<inlineCode parentName=\"p\">{`init 0`}</inlineCode>{`, 解释如下`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_20.png\",\n        \"alt\": null\n      }}></img></p>\n    <h1 {...{\n      \"id\": \"root密码丢失了\"\n    }}>{`root密码丢失了`}</h1>\n    <p>{`进入单人维护模式:\n先将系统重新启劢，在读秒的时候按下任意键, 摁下『e』就能够进入 grub 的编辑模式了, 此时，请将光标移到 kernel 那一行，再按一次『 e 』进入 kernel 所在的这行的编辑画面中,  然后在出现的画面当中的最后方输入 single , 再按下『 Enter 』确定后，按下 b 就可以开机进入单人维护模式了. 在这个模式底下，你会在 tty1 下无需要输入密码即可取得终端机的控制权(而且是使用 root 的身份)。 之后就能够修改 root\n的密码了(使用`}<inlineCode parentName=\"p\">{`passwd`}</inlineCode>{`)`}</p>\n    <h1 {...{\n      \"id\": \"文件系统错误的问题\"\n    }}>{`文件系统错误的问题`}</h1>\n    <p>{`在开机的过程中最容易遇到的问题就是硬盘可能有坏轨or文件系统发生错误(数据损毁)的情况; `}</p>\n    <ul>\n      <li parentName=\"ul\">{`如果你的根目录『/』没有损毁，那就径容易解决: `}<inlineCode parentName=\"li\">{`fsck 某个分区文件名`}</inlineCode>{`进行文件系统检查,  这时屏幕会显示开始修理硬盘的讯息，如果有发现任何的错时，屏幕会显示： clear `}{`[Y/N]`}{`？ 的询问讯息，就直接输入 Y 吧, 最后reboot即可`}</li>\n      <li parentName=\"ul\">{`如果根目录毁坏了, 这时你可以将硬盘拔掉，接到另一台 Linux 系统的计算机上， 且不要挂载(mount)该硬盘，然后以 root 的身份执行『fsck /dev/sdb1 』(/dev/sdb1 是你的硬盘装置文件名，你要依你的实际状况来定)`}</li>\n    </ul>\n    <h1 {...{\n      \"id\": \"nano使用\"\n    }}>{`nano使用`}</h1>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_17.png\",\n        \"alt\": null\n      }}></img></p>\n    <h1 {...{\n      \"id\": \"vi和vim使用\"\n    }}>{`vi和vim使用`}</h1>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_145.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\">{`一般模式: 默认模式, 可移动光标, 删除, 复制粘贴; 无法编辑内容`}</li>\n      <li parentName=\"ul\">{`编辑模式: 一般模式中, 按下`}{`[i, o, a, r]`}{` 进入, 按下`}{`[Esc]`}{`退出`}</li>\n      <li parentName=\"ul\">{`命令模式: 一般模式中, 按下`}{`[:, /, ?]`}{`三个中的任何一个, 即可进入, 可 搜索, 保存, 离开vim/vi, 大量取代字符`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"快捷键\"\n    }}>{`快捷键`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_146.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_147.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_148.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_149.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_150.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_151.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_152.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_153.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_154.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_155.png\",\n        \"alt\": null\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"常用指令示意图\"\n    }}>{`常用指令示意图`}</h2>\n    <h2 {...{\n      \"id\": \"几个常见的例子\"\n    }}>{`几个常见的例子`}</h2>\n    <h2 {...{\n      \"id\": \"暂存档和数据恢复\"\n    }}>{`暂存档和数据恢复`}</h2>\n    <h2 {...{\n      \"id\": \"区块选择\"\n    }}>{`区块选择`}</h2>\n    <h2 {...{\n      \"id\": \"多档案编辑和多窗口功能\"\n    }}>{`多档案编辑和多窗口功能`}</h2>\n    <h2 {...{\n      \"id\": \"vim环境参数设定\"\n    }}>{`vim环境参数设定`}</h2>\n    <h2 {...{\n      \"id\": \"dos和linux下的换行符\"\n    }}>{`dos和linux下的换行符`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_156.png\",\n        \"alt\": null\n      }}></img></p>\n    <h1 {...{\n      \"id\": \"文件和目录的权限\"\n    }}>{`文件和目录的权限`}</h1>\n    <h2 {...{\n      \"id\": \"3个身份3种权限\"\n    }}>{`3个身份3种权限`}</h2>\n    <p>{`linux中有3种身份, owner/group/others, 且各有read/write/execute权限`}</p>\n    <p>{`帐号信息—/etc/passwd\n密码信息—/etc/shadow\n群组信息—/etc/group`}</p>\n    <h2 {...{\n      \"id\": \"文件的属性ls\"\n    }}>{`文件的属性,ls`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_21.png\",\n        \"alt\": null\n      }}></img></p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`第一栏的文件权限属性的详细解释:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`第一个字符表示这个数据是 `}<inlineCode parentName=\"li\">{`目录(d)`}</inlineCode>{`or `}<inlineCode parentName=\"li\">{`文件(-)`}</inlineCode>{`or `}<inlineCode parentName=\"li\">{`连接档link file(l)`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`可存取设备(b)`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`鼠标/键盘串行端口设备(c)`}</inlineCode></li>\n          <li parentName=\"ul\">{`接着的3个字符: owner的权限`}</li>\n          <li parentName=\"ul\">{`接着的3个字符: 同group的人的权限`}</li>\n          <li parentName=\"ul\">{`接着的3个字符: other身份的权限`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`第二栏的连接数表示有多少文件名连接到这个节点(i-node); 这个属性记录的，就是有多少不同的档名连结到相同的一个 i-node 号码去了.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`第三栏表示拥有者是谁`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`第四栏表示属于哪一个分组`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`第五栏表示file size ,单位默认bytes, 如果希望显示完整的时间`}<inlineCode parentName=\"p\">{`ls -l --full-time`}</inlineCode></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`第六栏表示更新日期/创建日期`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`第七栏为这个档案的档名, 如果以`}{`[.]`}{`开头, 表示为隐藏文件, 也就是`}<inlineCode parentName=\"p\">{`ls`}</inlineCode>{`和`}<inlineCode parentName=\"p\">{`ls -a`}</inlineCode>{`的区分`}</p>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"改变文件属性权限\"\n    }}>{`改变文件属性&权限`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_22.png\",\n        \"alt\": null\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"改变群组chgrp\"\n    }}>{`改变群组chgrp`}</h3>\n    <p>{`被改变的组名必项要在/etc/group 档案内存在才行，否则就会显示错误`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_23.png\",\n        \"alt\": null\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"改变拥有者chown\"\n    }}>{`改变拥有者chown`}</h3>\n    <p>{`在/etc/passwd 这个档案中有记录的用户名称才能改变`}</p>\n    <p>{`chown 用处很多, 比如同时修改owner和group,仅修改owner, 仅修改group `}</p>\n    <p><inlineCode parentName=\"p\">{`chown <owner>:<group> <file>`}</inlineCode>{` 同时修改\n`}<inlineCode parentName=\"p\">{`chown <owner> <file>`}</inlineCode>{` 仅修改owner\n`}<inlineCode parentName=\"p\">{`chown .<group> <file>`}</inlineCode>{` 仅修改group`}</p>\n    <p>{`在哪里使用呢? 最常见的例子就是在复制档案(`}<inlineCode parentName=\"p\">{`cp <source file> <target file>`}</inlineCode>{`)给你之外的其他人, 复制后需要修改文件属性/权限`}</p>\n    <h3 {...{\n      \"id\": \"改变权限chmod\"\n    }}>{`改变权限chmod`}</h3>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_24.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`使用数字表示权限`}</p>\n        <p parentName=\"li\">{`  r: 4, w: 2, x: 1`}</p>\n        <p parentName=\"li\">{`  例如: -rwxrwx—-, 分数为\nowner: rwx=4+2+1=7\ngroup: rwx=7\nother: —-=0+0+0=0\n所以命令为 `}<inlineCode parentName=\"p\">{`chmod 770 <file>`}</inlineCode></p>\n        <p parentName=\"li\">{`  再比如: 编写一个shell文件, 希望给别人执行, 不能修改, 需要 -rwxr-xr-x, 键入命令 `}<inlineCode parentName=\"p\">{`chmod 755 <file>`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`使用符号表示权限`}</p>\n        <p parentName=\"li\">{`  基本上九个权限分别是(1)user (2)group (3)others 三种身份, 那我们就可以由 u, g, o 来代表三种身份的权限！此外, a 则代表 all 亦即全部的身份.`}</p>\n        <p parentName=\"li\">{`  `}<img parentName=\"p\" {...{\n            \"src\": \"Screenshot_25.png\",\n            \"alt\": null\n          }}></img></p>\n        <p parentName=\"li\">{`  例如: 设定 -rwxr-xr-x,\nuser(u): rwx\ngroup(g): rx\nother(o): rx\n所以命令为 `}<inlineCode parentName=\"p\">{`chmod u=rwx,go=rx <file>`}</inlineCode></p>\n        <p parentName=\"li\">{`  再比如: 不知道原先文件权限, 只是希望给其增加每个人的`}{`[w]`}{`权限, `}<inlineCode parentName=\"p\">{`chmod a+w <file>`}</inlineCode>{`\n再比如: 不知道原先文件权限, 只是希望拿掉每个人对文件的`}{`[x]`}{`权限, `}<inlineCode parentName=\"p\">{`chmod a-x <file>`}</inlineCode></p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"文件和目录的权限区别\"\n    }}>{`文件和目录的权限区别`}</h2>\n    <p>{`文件是实际存放数据的地方，包括一般文本文件、数据库内容文件、二进制可执行文件(binary program)等等, rwx对文件的意义是这样的:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`r (read)：可读取此一档案的实际内容，如读取文本文件的文字内容等； `}</li>\n      <li parentName=\"ul\">{`w (write)：可以编辑、新增or修改该档案的内容(但不能删除该档案)； `}</li>\n      <li parentName=\"ul\">{`x (execute)：该档案具有可以被系统执行的权限`}</li>\n    </ul>\n    <p>{`目彔是记录文件名列表，文件名与目录有强烈的联系, rwx对于目录的意义:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`r (read contents in directory)： `}</p>\n        <p parentName=\"li\">{`  表示具有读取目录结构列表的权限，所以当你具有读取(r)一个目录的权限时，表示你可以查询该目录下的文件名数据。 所以你就可以利用 `}<inlineCode parentName=\"p\">{`ls`}</inlineCode>{` 这个指令将该目录的文件名列表显示出来`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`w (modify contents of directory)： `}</p>\n        <p parentName=\"li\">{`  这个可写入的权限对目录来说，是很大的权限. 因为他表示你具有改动该目录文件名列表的权限，也就是底下这些权限： `}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`建立新的文件/目录； `}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`删除已经存在的文件/目录(不管该文件的权限为何) `}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`将已存在的文件/目录更名； `}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`改变该目录内的文件、目录位置。 `}</p>\n            <p parentName=\"li\">{`总之, 目录的 w 权限就和该目录底下的文件名异动有关.`}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`x (access directory)`}</p>\n        <p parentName=\"li\">{`  目录的 x 权限代表的是用户能否进入该目录成为工作目录, 也就是`}<inlineCode parentName=\"p\">{`cd <dir>`}</inlineCode>{`能否顺利进入. 所谓的工作目录(work directory)就是你目前所在的目录.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"文件目录的默认权限umask\"\n    }}>{`文件/目录的默认权限umask`}</h2>\n    <p>{`文件新增时, 如果不指定权限, 会有默认权限, umask设定`}</p>\n    <p>{`如何查看默认权限呢?`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_54.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`可以看出umask的结果表示owner, group, other `}<inlineCode parentName=\"p\">{`被拿掉的权限`}</inlineCode></p>\n    <p>{`比如图中 0`}<inlineCode parentName=\"p\">{`022`}</inlineCode>{`: 第一个\"0\"表示特殊权限暂时不看, 第二个\"0\"表示owner没有被拿掉任何权限(rwx), 第一\"2\"表示group被拿掉了w权限, 第二个\"2\"表示other被拿掉了w权限`}</p>\n    <p>{`新建的文件和目录的默认权限设置是不同的:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`新建文件, 默认任何人都没有\"x\"权限,都有\"rw\", 也就是文件没有被\"umask设定的排除权限\"处理之前, 权限属性为 -rw-rw-rw-`}</li>\n      <li parentName=\"ul\">{`新建目录, 默认所有权限对任何人都开放, 也就是目录没有被\"umask设定的排除权限\"处理之前, 权限属性为 drwxrwxrwx`}</li>\n    </ul>\n    <p>{`所以上图中如果新建文件, 最终权限为 (-rw-rw-rw-) 减去 (——-w—w-) ==> -rw-r—r— . 如果新建目录, 最终权限为 (drwxrwxrwx) 减去(d——w—w-) ==> drwxr-xr-x `}</p>\n    <p>{`修改文件/目录的默认权限: `}<inlineCode parentName=\"p\">{`umask <xxx>`}</inlineCode>{` 如: `}<inlineCode parentName=\"p\">{`umask 002`}</inlineCode>{`新建的文件自己和同group的人都可以r和w`}</p>\n    <p>{`root用户的umask比较严格, 会拿掉比较多的权限, 一般为’022’, 这时为了安全考虑;\n普通用户的umask就比较宽松, 拿掉的权限比较少, '002’, 同组的人可以读写`}</p>\n    <h2 {...{\n      \"id\": \"文件目录的隐藏属性chattr\"\n    }}>{`文件/目录的隐藏属性chattr`}</h2>\n    <p>{`隐藏属性在系统文件安全方面作用很大, chattr只能在 Ext2/Ext3 的文件系统上面生效， 其它文件系统可能就无法支持这个指令了`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_55.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_56.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_57.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`chattr +i <file>`}</inlineCode>{` 使得文件无法增删改, 更名, root才能设定该权限`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`chattr -i <file>`}</inlineCode>{` i属性取消`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`chattr -a <file>`}</inlineCode>{` 文件只能增加数据, 其他均不能, root才能设定该权限`}</li>\n    </ul>\n    <p>{`如何显示隐藏属性?`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_58.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"Screenshot_59.png\",\n        \"alt\": null\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"文件目录的特殊权限suidsgidsbit\"\n    }}>{`文件/目录的特殊权限SUID,SGID,SBIT`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_60.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`上图中s, t 就是特殊权限`}</p>\n    <p>{`如何设定呢?借助chmod命令的两种使用方式`}</p>\n    <p>{`第一种方式`}</p>\n    <p>{`4 为 SUID , 二进制文件的owner上的x权限位为s\n2 为 SGID , 二进制文件or目录的group上的x权限位为s\n1 为 SBIT , 目录的other上的x权限位为t`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{` chmod 4755 filename`}</inlineCode>{` 设定file权限为 -rwsr-xr-x, 具有suid`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`chmod 6755 <file>`}</inlineCode>{` 具有suid和sgid`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`chmod 1755 <file>`}</inlineCode>{` 具有sbit`}</li>\n    </ul>\n    <p>{`第二种方式`}</p>\n    <p>{`其中 SUID 为 u+s ，而 SGID 为 g+s ，SBIT 则是 o+t `}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{` chmod u=rwxs,go=x <file>`}</inlineCode>{` 设定权限为  -rws—x—x`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{` chmod g+s,o+t <file>`}</inlineCode>{` 加上 SGID 和 SBIT  `}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"set-uid\"\n    }}>{`Set Uid`}</h3>\n    <p>{`当 s 这个标志出现在档案拥有者的 x 权限上时(如: -rwsr-xr-x), 就称为Set UID, 简称为具有SUID特殊权限(suid重点在于\"u\"表示暂时性的获得user的身份, 不是group/other身份)`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_61.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`以上就是说: 如果一个二进制程序有SUID,任何用户在执行该程序时, 身份将暂时转变为该二进制文件的owner身份`}</p>\n    <p>{`此外, suid对于shell script, 目录 均无效`}</p>\n    <p>{`这里有个例子:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_62.png\",\n        \"alt\": null\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"set-gid\"\n    }}>{`Set Gid`}</h3>\n    <p>{`当s符号在owner的x权限位上则表示该二进制文件具有suid, 那么, 当s符号位于group的x权限位上则表示该二进制文件具有sgid; 和suid不同, sgid可以针对二进制文件和目录设定:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_64.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"Screenshot_65.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`如果一个二进制程序有SGID, 则任何一个用户执行时,将暂时获得该程序所属群组的权限;\n如果一个目录有SGID, 则任何可以进入该目录(具备rx权限)的用户在进入后, 其有效群组暂时变为该目录的所属群组`}</p>\n    <h3 {...{\n      \"id\": \"sticky-bit\"\n    }}>{`Sticky Bit`}</h3>\n    <p>{`相应的, 如果t符号位于other的x位上则表示目录具有sbit, 目前只针对目录有效, 对于文件已经失效了, sbit对于目录的作用是:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_63.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`如果目录具有SBIT, 则如果一个用户可以在该目录中写入(具有wx权限),该用户在写入后,只有自己和root能够删除写入的目录or档案`}</p>\n    <h2 {...{\n      \"id\": \"几个场景对应的权限分配\"\n    }}>{`几个场景对应的权限分配`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`用户能够进入该目录, 成为工作目录(即能够使用cd xxx)`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`用户对该目录至少需要有`}<inlineCode parentName=\"li\">{`x`}</inlineCode>{`权限`}</li>\n          <li parentName=\"ul\">{`如果进一步希望能够 ls 查阅目录下的文件, 还需要`}<inlineCode parentName=\"li\">{`r`}</inlineCode>{`权限`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`进一步用户能够读取该目录下一个文件(也就是能够使用cat, more, less)`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`用户对当前目录至少需要`}<inlineCode parentName=\"li\">{`x`}</inlineCode>{`权限`}</li>\n          <li parentName=\"ul\">{`用户对文件至少需要`}<inlineCode parentName=\"li\">{`r`}</inlineCode>{`权限`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`能够执行一个文件`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`目录具有`}<inlineCode parentName=\"li\">{`x`}</inlineCode>{`\n文件具有`}<inlineCode parentName=\"li\">{`x`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`进一步, 能够修改一个文件内容`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`对当前目录具有`}<inlineCode parentName=\"li\">{`x`}</inlineCode></li>\n          <li parentName=\"ul\">{`对文件具有`}<inlineCode parentName=\"li\">{`rw`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`能够创建一个文件`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`对当前目录具有`}<inlineCode parentName=\"li\">{`wx`}</inlineCode></li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"几个场景实例\"\n    }}>{`几个场景实例`}</h2>\n    <p>{`情景是这样的`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_80.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`数据准备`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_81.png\",\n        \"alt\": null\n      }}></img></p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`mkdir /srv/ahome`}</inlineCode>{`建立工作目录`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`ll -d /srv/ahome`}</inlineCode>{` 检视刚才创建的目录, 这里的`}<inlineCode parentName=\"p\">{`-d`}</inlineCode>{`表示后面接的是要检视的目录`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`发现需要修改目录所属群组, 权限也需要相应变化`}<inlineCode parentName=\"p\">{`chown .project /srv/ahome`}</inlineCode>{`or`}<inlineCode parentName=\"p\">{`chgrp project /srv/ahome`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`chmod 770 /srv/ahome`}</inlineCode></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`现在看貌似没问题了, 切换身份, 创建一个文件看看能否实现共同编辑.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`但是问题来了, 新创建的文件, 群组为创建者, 而不是希望的project, 同组人无法编辑`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`考虑为工作目录加上 `}<inlineCode parentName=\"p\">{`sgid`}</inlineCode>{`特殊权限—`}<inlineCode parentName=\"p\">{`如果一个目录有SGID, 则任何可以进入该目录(具备rx权限)的用户在进入后, 其有效群组暂时变为该目录的所属群组`}</inlineCode></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`chmod 2770 /srv/ahome`}</inlineCode>{` 给工作目录加上sgid权限`}</li>\n        </ul>\n      </li>\n    </ol>\n    <h1 {...{\n      \"id\": \"文件和目录的管理\"\n    }}>{`文件和目录的管理`}</h1>\n    <h2 {...{\n      \"id\": \"路径问题\"\n    }}>{`路径问题`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`绝对路径: 以\"/\"开头, 如 /root/test`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`相对路径: 不是以\"/\"开头, 如 ../test; 相对于当前工作目录的路径`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`特殊符号代表的目录`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.       `}</inlineCode>{`  代表此层目录(在所有的目录中都存在)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`..      `}</inlineCode>{`  代表上一层目录 (在所有的目录中都存在)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`-       `}</inlineCode>{`  代表前一个工作目录 `}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`~       `}</inlineCode>{`  代表『目前用户身份』所在的家目录 `}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`~account`}</inlineCode>{`  代表 account 这个用户的家目录(account 是个账号名称) `}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"处理目录的指令\"\n    }}>{`处理目录的指令`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_40.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`pwd`}</inlineCode>{`显示当前工作目录; `}<inlineCode parentName=\"li\">{`pwd -P`}</inlineCode>{`显示确切路径而非连接档路径`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`mkdir -p <dir1>/<dir2>/<dir3>`}</inlineCode>{` 递归创建多层目录`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`mkdir -m 771 test1`}</inlineCode>{` 建立dir的同时设置权限(这时不用管预设权限umask)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`rmdir <dir>`}</inlineCode>{` 只能删除空目录; `}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`rmdir -p <dir1>/<dir2>/<dir3>`}</inlineCode>{`递归删除空目录`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`rmdir -r <dir>`}</inlineCode>{` 强制删除目录及其下所有数据`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"文件查看复制删除移动\"\n    }}>{`文件查看/复制/删除/移动`}</h2>\n    <h3 {...{\n      \"id\": \"文件检视\"\n    }}>{`文件检视`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ls -al <dir>`}</inlineCode>{` 详细列出所有文件(包括隐藏文件)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ls --color=never`}</inlineCode>{` 不带颜色显示`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ls --full-time`}</inlineCode>{` 显示详细时间`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"文件复制建立连接档快捷方式\"\n    }}>{`文件复制/建立连接档(快捷方式)`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`cp <source1> <source2> <dir>`}</inlineCode>{` 复制多处数据到一个目录`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`cp -i <source> <target>`}</inlineCode>{` 如果有数据覆盖, 会需要确认; 带确认的复制`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`cp -a <source> <target>`}</inlineCode>{` 完全复制(属性完全一样, 包括创建时间, 是`}<inlineCode parentName=\"p\">{`-a`}</inlineCode>{`中的`}<inlineCode parentName=\"p\">{`-p`}</inlineCode>{`的作用)`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`-a 包括 -pdr`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cp -r <source> <target>`}</inlineCode>{` 递归复制目录`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`cp -u <source> <target>`}</inlineCode>{` 是在目标档案和源档案有差异时，才会复制; 常用于数据备份`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`快捷方式: -l 建立实体链接(hard link); -s 建立符号链接(symbolic link); 属性第二栏会变`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cp -l <source> <target>`}</inlineCode>{`建立实体链接(hard link)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cp -s <source> <target>`}</inlineCode>{`建立符号链接(symbolic link)`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"删除文件目录\"\n    }}>{`删除文件/目录`}</h3>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_41.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`rm -i test*`}</inlineCode>{` 以互动模式删除所有以’test’开头的文件`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`\\\\rm -r <xxx>`}</inlineCode>{` 直接删除, 不要询问(`}<inlineCode parentName=\"li\">{`\\\\`}</inlineCode>{`表示忽略alias的指定选项)`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"移动or重命名\"\n    }}>{`移动or重命名`}</h3>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_42.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`mv <old name> <new name>`}</inlineCode>{` 更名 ; 和`}<inlineCode parentName=\"li\">{`rename`}</inlineCode>{` 类似`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`mv <source1> <source2> <target dir>`}</inlineCode>{` 移动多个数据到一个目录`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"获取路径的文件名目录名\"\n    }}>{`获取路径的文件名/目录名`}</h3>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_43.png\",\n        \"alt\": null\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"文件内容查看\"\n    }}>{`文件内容查看`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_44.png\",\n        \"alt\": null\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"cat和tac\"\n    }}>{`cat和tac`}</h3>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_45.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cat -n <file>`}</inlineCode>{` 带行号显示`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cat -A <file>`}</inlineCode>{` 完整显示内容(包括换行符,空格, tab)`}</li>\n      <li parentName=\"ul\">{`tac和cat 类似, 只是会从最后一行开始反向显示`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"nl设计行号\"\n    }}>{`nl设计行号`}</h3>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_46.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"Screenshot_47.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{` nl -b a <file>`}</inlineCode>{` 带行号打印(空行也有行号)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{` nl -b a -n rz <file>`}</inlineCode>{` 行号前自动补0, 默认行号是6位, 如果希望改为3位 `}<inlineCode parentName=\"li\">{` nl -b a -n rz -w 3 <file>`}</inlineCode></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"翻页检视moreless\"\n    }}>{`翻页检视more/less`}</h3>\n    <p>{`对于more: `}<inlineCode parentName=\"p\">{`more <file>`}</inlineCode>{`会进入more视图`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_48.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\">{`进入more视图后, `}<inlineCode parentName=\"li\">{`/<keyword>`}</inlineCode>{`搜寻, 按`}<inlineCode parentName=\"li\">{`n`}</inlineCode>{`跳到下一处`}</li>\n    </ul>\n    <p>{`less 是 more的加强版; 进入 less视图后有更多的选项`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_49.png\",\n        \"alt\": null\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"行级别的数据过滤headtail\"\n    }}>{`\"行级别\"的数据过滤head/tail`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`head <file>`}</inlineCode>{` 默认显示前10行`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`head -n 20 <file>`}</inlineCode>{` 显示前20行`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`head -n -100 <file>`}</inlineCode>{` 不要显示后100行(只显示剩下的前xx行, 如总共110行, 则只显示前10行, 后100行都不显示)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`tail <file>`}</inlineCode>{` 默认显示后10行`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`tail -n 20 <file>`}</inlineCode>{` 显示后20行`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`tail -n +100 <file>`}</inlineCode>{` 不知道file有多少行, 只想显示100行(包括第100行)以后的数据;`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`tail -f <file>`}</inlineCode>{`持续侦测, 直到ctrl+c终止;`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`这个排查bug的时候很好用, 实际操作时, 怎么找到正确的日志文件? `}<inlineCode parentName=\"p\">{`find . -mmin -1`}</inlineCode>{`查看当前文件夹下1min之内变动的日志文件`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`可能有中文乱码, 在xshell中设置即可`}</p>\n            <p parentName=\"li\"><img parentName=\"p\" {...{\n                \"src\": \"./Screenshot_157.png\",\n                \"alt\": null\n              }}></img></p>\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"读取非文本数据od\"\n    }}>{`读取非文本数据od`}</h3>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_50.png\",\n        \"alt\": null\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"创建文件修改文件时间\"\n    }}>{`创建文件/修改文件时间`}</h2>\n    <p>{`每个文件都有3个时间属性;\nls 默认显示的是mtime`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_51.png\",\n        \"alt\": null\n      }}></img></p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_52.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`touch <file>`}</inlineCode>{` 将mtime和atime时间修改为目前时间(如果不存在则创建文件)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{` touch -d \"2 days ago\" <file>`}</inlineCode>{` 修改mtime和atime为2天前, ctime不变(ctime记录文件权限属性变化, 无法自定义)`}</p>\n        <p parentName=\"li\">{`  `}<img parentName=\"p\" {...{\n            \"src\": \"Screenshot_53.png\",\n            \"alt\": null\n          }}></img></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`touch -t 0709150202 <file>`}</inlineCode>{`日期改为 2007/09/15 2:02 (同样是修改mtime和atime, ctime无法修改)`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"搜寻文件和指令\"\n    }}>{`搜寻文件和指令`}</h2>\n    <h3 {...{\n      \"id\": \"whichwhereislocate\"\n    }}>{`which,whereis,locate`}</h3>\n    <p>{`搜寻指令`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_66.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`which ifconfig`}</inlineCode>{` 搜寻指令`}</p>\n        <p parentName=\"li\">{`  `}<img parentName=\"p\" {...{\n            \"src\": \"Screenshot_67.png\",\n            \"alt\": null\n          }}></img></p>\n      </li>\n    </ul>\n    <p>{`搜寻文件, 通常会先使用whereis和locate利用数据库来搜寻, 如果没有结果再使用find`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_69.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"Screenshot_71.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`whereis和locate区别:\n`}<img parentName=\"p\" {...{\n        \"src\": \"Screenshot_70.png\",\n        \"alt\": null\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"find\"\n    }}>{`find`}</h3>\n    <p>{`最后考虑使用find:`}</p>\n    <p>{`语法比较复杂, 先看跟时间有关的`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_72.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`find / -mtime 0`}</inlineCode>{` 搜寻0天之前的24h(从现在开始到24h之前)的改动过的文件`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`find / -mtime 3`}</inlineCode>{` 是三天前的 24 小时内`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`find / -mtime -4`}</inlineCode>{` 4天内被更动过的文件`}</li>\n    </ul>\n    <p>{`关于正负号的用法, `}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_73.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"Screenshot_74.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`再看跟使用者和group有关的语法`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_75.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`find /home -user <someone> `}</inlineCode>{` 找出任何一个用户在系统中的所有档案`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`find / -nouser`}</inlineCode>{` 搜寻系统中不属于任何人的档案`}</li>\n    </ul>\n    <p>{`和文件权限/名称有关的语法:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_76.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_77.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`find / -name passwd`}</inlineCode>{` 找出档名为 passwd 这个档案`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`find /var -type s `}</inlineCode>{` 找出 /var 下，文件类型为 Socket 的文件`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`find / -perm +7000`}</inlineCode>{` ：搜寻档案中有 SGID 或 SUID 或 SBIT 等属性`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`find / -perm +4000 -print `}</inlineCode>{` 找出系统中所有具有suid的文件`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`find / -perm -7000`}</inlineCode>{` 表示要有 —-s—s—t 所有三个权限`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`find / -size +1000k`}</inlineCode>{` 找出大于1M的文件`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`find /etc -size +50k -a -size -60k -exec ls -l {} \\\\;`}</inlineCode>{` 档案大小介于50–60k之间的文件, 并列出来(`}<inlineCode parentName=\"li\">{`-a`}</inlineCode>{`表示and, 符合两个条件才行)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`find /etc -size +50k -a ! -user root -exec ls -ld {} \\\\; `}</inlineCode>{` 找出 /etc 底下，档案容量大亍 50K 且档案所属人员是 root 的档名，将权限完整列出 (ls -l)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`find /etc -size +1500k -o -size 0`}</inlineCode>{` 找出容量大于 1500K 以及容量等于 0 的档案(`}<inlineCode parentName=\"li\">{`-o`}</inlineCode>{`表示或)`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`最后有一个很有用的选项: `}<inlineCode parentName=\"p\">{`-exec`}</inlineCode>{`, 语法为:  -exec command ：command 为其他指令，-exec 后面可再接额外的指令处理搜寻到的结果`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{` find / -perm +7000 -exec ls -l {} \\\\`}</inlineCode>{`将结果使用ls -l 列出(不支持别名) `}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`解释如下:\n`}<img parentName=\"li\" {...{\n              \"src\": \"Screenshot_78.png\",\n              \"alt\": null\n            }}></img>\n            <img parentName=\"li\" {...{\n              \"src\": \"Screenshot_79.png\",\n              \"alt\": null\n            }}></img></li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"光盘写入工具和iso文件\"\n    }}>{`光盘写入工具和iso文件`}</h2>\n    <p>{`mkisofs：建立映像档`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_140.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_141.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`cdrecord：光盘刻录工具`}</p>\n    <h1 {...{\n      \"id\": \"硬盘和文件系统管理\"\n    }}>{`硬盘和文件系统管理`}</h1>\n    <p>{`fs的基本组成:inode, block, superblock`}</p>\n    <h2 {...{\n      \"id\": \"ext2文件系统\"\n    }}>{`ext2文件系统`}</h2>\n    <h3 {...{\n      \"id\": \"inodeblocksuperblock\"\n    }}>{`inode,block,superblock`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`inode: 存放文件的权限, 属性(owner/group/time等); 一个文件占用一个inode, 同时记录该文件的数据所在的block号码; 带编号`}</li>\n      <li parentName=\"ul\">{`data block: 存放实际数据; 一个文件可能有多个block; 带编号`}</li>\n      <li parentName=\"ul\">{`superblock: 记录整个fs的元信息(如inode/block的总量, 使用量, 剩余以及fs支持的格式等);大小1024bytes, superblock前面还需要保留1024bytes以供开机管理程序的安装`}</li>\n    </ul>\n    <p>{`ext2属于 索引式文件系统(indexed allocation), 数据读取方法类似于下图:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_82.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`os先找到代表文件的inode, 然后读取出存放实际数据的一个或多个block;`}</p>\n    <p>{`与之相对的还有另外一种类型的fs—闪存, 一般是FAT格式的; 没有 inode 存在，所以 FAT 没有办法将这个档案的所有 block 在一开始就读出来。每个 block 号码都记在前一个 block 当中, 读取过程类似这样:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_83.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`如果同一个档案数据写入的 block 分散的太过厉害，则磁盘头将无法在磁盘转一圈就读到所有的数据， 因此磁盘就会多转好几圈才能完整的读到这个档案的内容, fat格式的文件系统需要 磁盘碎片整理 就是由此而来`}</p>\n    <p>{`ext2文件系统的格式化会将分区区分为多个block group, 每个block group 都会有自己的独立的 inode/block/superblock 系统`}</p>\n    <h3 {...{\n      \"id\": \"fs格式化后的结构图\"\n    }}>{`fs格式化后的结构图`}</h3>\n    <p>{`ext2格式化后, 类似下图:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_90.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`boot sector: 文件系统最前面有一个启动扇区(boot sector)，可以安装开机管理程序(boot loader)， 这是个重要的设计，因为如此一来我们就能够将不同的开机管理程序安装到不同的文件系统的最前端，而不用覆盖整颗硬盘唯一的 MBR, 这样才能够制作出多重引寻环境(多系统).`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`data block (资料区块): 用来放置档案内容数据地方. 在 Ext2 文件系统中所支持的 block 大小有 1K, 2K 及 4K 三种, 而这会导致磁盘支持的最大容量和最大单文件容量的差异, 看下图:`}</p>\n        <p parentName=\"li\">{`  `}<img parentName=\"p\" {...{\n            \"src\": \"Screenshot_84.png\",\n            \"alt\": null\n          }}></img></p>\n        <p parentName=\"li\">{`  此外block还有如下限制:`}</p>\n        <p parentName=\"li\">{`  `}<img parentName=\"p\" {...{\n            \"src\": \"Screenshot_85.png\",\n            \"alt\": null\n          }}></img></p>\n        <p parentName=\"li\">{`  因此如果档案都非帯小，但是你的block 在格式化时却选用最大的 4K 时，可能会产生一些容量的浪费. 那么block是否选定最小的1k就行了呢? 显然不是, 如果block统一定为1k, 那么大文件会占用更多的block, 对应的inode会需要记录非常多的data block 编号, 导致读写性能下降.所以格式化时选定block大小需要考虑使用场景.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`inode table (inode 表格) : 记录档案的属性以及该档案实际数据是放置在哪几号 block 内. 具体记录哪些内容看下图`}</p>\n        <p parentName=\"li\">{`  `}<img parentName=\"p\" {...{\n            \"src\": \"Screenshot_86.png\",\n            \"alt\": null\n          }}></img></p>\n        <p parentName=\"li\">{`  此外inode还有如下限制:`}</p>\n        <p parentName=\"li\">{`  `}<img parentName=\"p\" {...{\n            \"src\": \"Screenshot_87.png\",\n            \"alt\": null\n          }}></img></p>\n        <p parentName=\"li\">{`  因为inode大小只有128bytes, 系统将 inode 记录 block 号码的区域定为 12 个直接，一个间接, 一个双间接和一个三间接记录区, 见下图:`}</p>\n        <p parentName=\"li\">{`  `}<img parentName=\"p\" {...{\n            \"src\": \"Screenshot_88.png\",\n            \"alt\": null\n          }}></img></p>\n        <p parentName=\"li\">{`  这样, 1k类型的block就支持最大16G的单文件容量`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Superblock (赸级区块): 记录整个 filesystem 相关信息的地方， 没有 Superblock ，就没有这个 filesystem 了. 具体记录哪些见下图`}</p>\n        <p parentName=\"li\">{`  `}<img parentName=\"p\" {...{\n            \"src\": \"Screenshot_89.png\",\n            \"alt\": null\n          }}></img></p>\n        <p parentName=\"li\">{`  一般整个磁盘仅有第一个block group有一个superblock, 但是有时候我们为了安全会备份这个superblock到多个group block中方便救援`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Filesystem Description (文件系统描述说明) :这个区段可以描述每个 block group 开始和结束的 block 号码，以及说明每个区段的superblock, bitmap, inodemap, data block) 分别介于哪一个 block 号码间。这部分能够用 dumpe2fs 来观察.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`block bitmap (区块对照表): 从block bitmap 当中可以知道哪些 block 是空的，因此系统就能够快速找到可使用的空间来新增档案, 同样的, 如果删除某些档案时, 需要block bitmap 需要更新哪些block恢复为空了.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`inode bitmap (inode 对照表) : 和 block bitmap 类似, 只是记录的是inode使用或者是空的情况.`}</p>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"目录文件和inodeblock关系\"\n    }}>{`目录/文件和inode,block关系`}</h3>\n    <p>{`创建一个目录, 系统会分配一个inode(记录目录的`}<inlineCode parentName=\"p\">{`权限`}</inlineCode>{`和`}<inlineCode parentName=\"p\">{`属性`}</inlineCode>{` 和 `}<inlineCode parentName=\"p\">{`block号码`}</inlineCode>{`)和至少一个block(记录目录下`}<inlineCode parentName=\"p\">{`文件的名称`}</inlineCode>{`和`}<inlineCode parentName=\"p\">{`文件inode号码`}</inlineCode>{`); `}<inlineCode parentName=\"p\">{`ls -li`}</inlineCode>{` 查看所有文件的inode号码`}</p>\n    <p>{`建立一个文件时, 系统会分配一个inode和若干个block; 注意inode仅有12个直接指向, 可能需要专门的block记录其他block编号;`}</p>\n    <p>{`文件读取过程和inode,block, 以读取  /etc/passwd  为例:`}</p>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`\"/\" 的 inode`}</inlineCode>{`： 透过挂载点信息找到 /dev/hdc2 的 inode 号码为 2 的根目录 inode，且 inode 记录的权限让root可以读该 block的内容(有 r 和 x) ；`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`\"/\" 的 block`}</inlineCode>{`:根据inode获取block, 在block中找\"etc/\"目录的inode`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`etc/ 的 inode`}</inlineCode>{`: 找到\"etc/\"目录的inode, 进而找到ect/ 的block`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`passwd的inode`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`passwd的block`}</inlineCode></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"ext2ext3文件存取和日志式文件系统\"\n    }}>{`ext2/ext3文件存取和日志式文件系统`}</h2>\n    <p>{`一般来说，我们将 inode table 和 data block 称为数据存放区域，其他例如 superblock、 block bitmap 和 inode bitmap 等区段就被称为 metadata (元信息) ，因为 superblock, inode bitmap 及 block bitmap 的数据经常变化, 比如每次新增、移除、编辑时都可能会影响到这三个部分的数据.`}</p>\n    <p>{`新增文件时, 这些数据区域是怎么运作的?`}</p>\n    <ol>\n      <li parentName=\"ol\">{`确定工作目录对于当前用户的权限`}</li>\n      <li parentName=\"ol\">{`根据 inode bitmap 找到空闲的inode, 写入新文件的权限, 属性`}</li>\n      <li parentName=\"ol\">{`根据 block bitmap 找到空闲的block, 写入实际数据, 并更新步骤2中的inode中的block编号`}</li>\n      <li parentName=\"ol\">{`将以上步骤的inode, block信息同步到 inode bitmap, block bitmap, 并更新superblock内容; (更新metadata)`}</li>\n    </ol>\n    <p>{`如果进行到步骤3, 这时突然关机了, metadata无法同步更新———这就是`}<inlineCode parentName=\"p\">{`数据的不一致状态(Inconsistent)`}</inlineCode></p>\n    <p>{`再次重启会需要进行 数据一致性检查, 相当耗时, 由此 日志式文件系统(代表: ext3) 出现`}</p>\n    <p>{`![`}<a parentName=\"p\" {...{\n        \"href\": \"Screenshot_93.png\"\n      }}></a>{`]`}</p>\n    <p>{`日志式文件系统会在磁盘中划出专门的一个区域记录准备编辑/新增的文件信息, 这样, 如果写入的过程过程中发生宕机, 再次开机可以简化一致性检查的步骤: `}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_91.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`linux fs 的运作:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_92.png\",\n        \"alt\": null\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"磁盘目录容量查看\"\n    }}>{`磁盘/目录容量查看`}</h2>\n    <p>{`默认单位都是 kb`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_94.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_95.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_96.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`df -h`}</inlineCode>{` 打印系统所有的fs, 结果以易读的形式(容量不是默认的kb, 而是G/M)展示出来; 包括分区文件名, 挂载点, 用量等`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`df -h <dir>`}</inlineCode>{` 将指定目录下的磁盘容量显示出来`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`du`}</inlineCode>{` 列出当前目录下的所有目录(默认只列出目录, 不会列出文件)的容量, \".\"表示当前目录占用的总容量`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`du -a`}</inlineCode>{` 列出档案和文件的容量`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`du -sm /*`}</inlineCode>{` 检视根目录下的一级目录容量; -s表示列出匹配的一级目录(次目录),下级目录不要; -m表示容量以Mb表示`}</li>\n    </ul>\n    <p>{`df 展示出来的表头的意义:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_97.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`此外, 如果发现某个目录占用的硬盘资源为0, 不必要奇怪, 可能这个目录挂载的不是硬盘, 而是内存, 当然不占硬盘资源了`}</p>\n    <h2 {...{\n      \"id\": \"实体链接和符号链接\"\n    }}>{`实体链接和符号链接`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_104.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ln -s <s> <t>`}</inlineCode>{`符号链接: 类似于windows的快捷方式， 常用`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ln <source> <target>`}</inlineCode>{` 建立实体链接: 通过文件系统的inode产生新的文件名(不是产生新文件)`}</li>\n    </ul>\n    <p>{`先看`}<strong parentName=\"p\">{`实体链接`}</strong></p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_98.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_99.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`文件系统的读取过程看下图:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_100.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`hard link优点:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`安全(删除一个还有一个), `}</li>\n      <li parentName=\"ol\">{`不占空间(某个目录的block中多写入一个关联inode而已)`}</li>\n    </ol>\n    <p>{`hard link缺点:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`无法跨filesystem`}</li>\n      <li parentName=\"ol\">{`不能link目录(因为会造成复杂对的大提升, 原因如下)`}</li>\n    </ol>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_101.png\",\n        \"alt\": null\n      }}></img></p>\n    <p><strong parentName=\"p\">{`符号链接`}</strong></p>\n    <p>{`Symbolic link 就是在建立一个独立的文件，而这个文件会将数据的读取指向它 link 的那个文件的文件名`}</p>\n    <p>{`读取过程如图:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_102.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_103.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`这种方式最大的缺点就是, 如果删掉源文件, 那么整个环节就断了`}</p>\n    <h2 {...{\n      \"id\": \"磁盘管理fdisk\"\n    }}>{`磁盘管理fdisk`}</h2>\n    <h3 {...{\n      \"id\": \"分区删除\"\n    }}>{`分区/删除`}</h3>\n    <p>{`一个典型的分区场景:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`df /`}</inlineCode>{` 主要目的是找到指定目录对应的磁盘的文件名`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`fdisk -l`}</inlineCode>{` 查看系统内所有磁盘的分区信息, 也可以看到磁盘文件名, 以及每个磁盘的分区信息. 效果类似fdisk <设备名>中的p命令, 不同的是这个命令可以查看所有磁盘的分区信息.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`fdisk <设备文件名>`}</inlineCode>{` 进入分区视图( 使用『设备文件名』不要加上数字，因为partition 是针对『整个硬盘』而不是某个 partition )`}</li>\n    </ul>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_106.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_105.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`此时如果按p, 出现该磁盘的分区表, 如下图`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_108.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`另外, 大于2T的硬盘分区就要借助 `}<inlineCode parentName=\"p\">{`parted `}</inlineCode>{`命令了`}</p>\n    <h3 {...{\n      \"id\": \"格式化mkfs\"\n    }}>{`格式化mkfs`}</h3>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_109.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`mkfs -t ext3 <device name>`}</inlineCode>{` 格式化指定分区为ext3格式`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`mkfs 连按2下tab`}</inlineCode>{` 出现供选择的文件系统`}</li>\n    </ul>\n    <p>{`如果希望指定更详细的信息, 使用 `}<inlineCode parentName=\"p\">{`mke2fs`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"检验fschbadblocks\"\n    }}>{`检验fsch,badblocks`}</h3>\n    <p>{`fsch主要检视文件系统是否出错;`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_110.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{` fsck -C -f -t ext3 /dev/hdc6`}</inlineCode>{` 指定格式, 指定分区进行检视(主要检视文件系统是否出错); 如果没有`}<inlineCode parentName=\"li\">{`-f`}</inlineCode>{`, 由于分区没有问题, 检视结果会非常快, 加上后, 会强制详细检查.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`fsch 连按2下tab`}</inlineCode>{` 列出所有支持的文件系统`}</li>\n    </ul>\n    <p>{`需要注意的是, 被检视的磁盘不能被挂载; `}</p>\n    <p>{`fsch背后调用  e2fsck软件, 同样后者可以设定详细信息`}</p>\n    <p>{`badblocks主要查看磁盘是否有坏轨`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_111.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`badblocks -sv /dev/hdc6`}</inlineCode>{` 检视是否有坏轨`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"挂载mountunmount\"\n    }}>{`挂载mount/unmount`}</h3>\n    <p>{`挂载有这些问题需要注意`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_112.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`语法规范是这样的`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_113.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_114.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_115.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`mount <device> <dir>`}</inlineCode>{` 将指定设备挂载到指定目录`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`mount -t <文件系统类型,如ext3/iso9660等> <device> <dir> `}</inlineCode>{` 指定fs type 挂载(可以指定, 也可以不指定让系统自动测试进行挂载)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`df`}</inlineCode>{` 查看是否挂载上了; 也可以用 `}<inlineCode parentName=\"p\">{`mount -l`}</inlineCode>{`查看挂载情况`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`mount -o remount,rw,auto /`}</inlineCode>{` 重新挂载根目录(如果根目录出现只读情况很实用)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{` mount --bind <source dir> <target dir>`}</inlineCode>{` 将source dir 暂时挂载到target dir下( 和 symbolic link功能类似)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`mount -o loop /root/centos5.2_x86_64.iso /mnt/centos_dvd`}</inlineCode>{` loop挂载, 可以挂载ios镜像文件; 使用完后记得卸载掉`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`loop挂载有个重要的用途: 建立大文件以制作loop设备文件(可以代替分区)\n`}<inlineCode parentName=\"p\">{` dd if=/dev/zero of=/home/loopdev bs=1M count=512`}</inlineCode>{`建立大文件\n`}<inlineCode parentName=\"p\">{`mkfs -t ext3 /home/loopdev`}</inlineCode>{` 格式化目标文件\n`}<inlineCode parentName=\"p\">{`mount -o loop /home/loopdev /media/cdrom/`}</inlineCode>{`挂载到指定目录`}</p>\n            <p parentName=\"li\"><img parentName=\"p\" {...{\n                \"src\": \"Screenshot_131.png\",\n                \"alt\": null\n              }}></img><img parentName=\"p\" {...{\n                \"src\": \"Screenshot_132.png\",\n                \"alt\": null\n              }}></img><img parentName=\"p\" {...{\n                \"src\": \"Screenshot_133.png\",\n                \"alt\": null\n              }}></img></p>\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`相应的卸载语法:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_116.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`unmount <device/dir>`}</inlineCode>{` 卸载`}</li>\n    </ul>\n    <p>{`此外, 来由一种使用`}<inlineCode parentName=\"p\">{`文件系统标头(label)`}</inlineCode>{`来挂载的方法:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_117.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`详细可查阅`}<inlineCode parentName=\"p\">{`e2label`}</inlineCode>{`, 见 `}<a parentName=\"p\" {...{\n        \"href\": \"#%E8%AE%BE%E5%AE%9A%E7%A3%81%E7%9B%98%E5%8F%82%E6%95%B0\"\n      }}>{`设定磁盘参数`}</a></p>\n    <h3 {...{\n      \"id\": \"设定开机挂载\"\n    }}>{`设定开机挂载`}</h3>\n    <p>{`需要修改文件 `}<inlineCode parentName=\"p\">{`/etc/fstab`}</inlineCode>{` (filesystem table), 看下图:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_124.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_125.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`这个文件会在`}<inlineCode parentName=\"p\">{`mount`}</inlineCode>{`时被更新, 此外还记录了备份相关(dump), 开机自检(fsck)相关信息`}</p>\n    <p>{`具体有哪些信息呢?`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`设备文件名 or label name`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`挂载点`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`磁盘分区的文件系统类型`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`文件系统参数`}</p>\n        <p parentName=\"li\"><img parentName=\"p\" {...{\n            \"src\": \"Screenshot_126.png\",\n            \"alt\": null\n          }}></img><img parentName=\"p\" {...{\n            \"src\": \"Screenshot_127.png\",\n            \"alt\": null\n          }}></img></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`能否被备份指令`}<inlineCode parentName=\"p\">{`dump`}</inlineCode>{`作用`}</p>\n        <p parentName=\"li\"><img parentName=\"p\" {...{\n            \"src\": \"Screenshot_128.png\",\n            \"alt\": null\n          }}></img></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`是否以`}<inlineCode parentName=\"p\">{`fsch`}</inlineCode>{`检验扇区`}</p>\n        <p parentName=\"li\"><img parentName=\"p\" {...{\n            \"src\": \"Screenshot_129.png\",\n            \"alt\": null\n          }}></img></p>\n      </li>\n    </ol>\n    <p>{`看一个情景: 要将 /dev/hdc6 每次开机都自动挂载到 /mnt/hdc6 ，该如何进行?`}</p>\n    <ul>\n      <li parentName=\"ul\">{`编辑 `}<inlineCode parentName=\"li\">{`/etc/fstab`}</inlineCode>{` 新增一行 `}<inlineCode parentName=\"li\">{`/dev/hdc6  /mnt/hdc6    ext3    defaults   1 2 `}</inlineCode></li>\n      <li parentName=\"ul\">{`接下来需要检测文件编写的语法是否错误: `}<inlineCode parentName=\"li\">{`mount -a`}</inlineCode>{`(依照fstab内容挂载), `}<inlineCode parentName=\"li\">{`df`}</inlineCode>{`(查看是否成功挂载), 如果看到成功挂载, 那么证明以后每次开机都会自动挂载`}</li>\n    </ul>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_130.png\",\n        \"alt\": null\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"设定磁盘参数\"\n    }}>{`设定磁盘参数`}</h3>\n    <p>{`比如设定Label name, journal参数`}</p>\n    <p><inlineCode parentName=\"p\">{`mknod`}</inlineCode>{`可以用来设定主/次设备编号`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_118.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`什么是主/次设备编号?`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_119.png\",\n        \"alt\": null\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_120.png\",\n        \"alt\": null\n      }}></img></p>\n    <p><inlineCode parentName=\"p\">{`e2label`}</inlineCode>{` 设定文件系统标头, 类似windows系统的自定义磁盘名称`}</p>\n    <p>{`磁盘挂载就可以使用它, 这种挂载方式相比于传统有什么优缺点?`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_121.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`使用比较简单:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_122.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{` dumpe2fs -h <device>`}</inlineCode>{` 查看设备原先的label name`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`e2label <device> \"label name\"`}</inlineCode>{` 修改label name; 修改完成后可以`}<inlineCode parentName=\"li\">{`dumpe2fs -h <device>`}</inlineCode>{`查看是否修改成功`}</li>\n    </ul>\n    <p>{`与之相关的还有一个命令: `}<inlineCode parentName=\"p\">{`tune2fs`}</inlineCode>{`—-查看设备superblock内容`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_123.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`tune2fs -l /dev/hdc6`}</inlineCode>{` 列出设备的superblock内容`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"内存置换空间swap\"\n    }}>{`内存置换空间(swap)`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_135.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`可以通过2种方式:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`直接增加分区`}</li>\n      <li parentName=\"ul\">{`通过`}<inlineCode parentName=\"li\">{`dd`}</inlineCode>{`建立一个大文件, 通过loop挂载`}</li>\n    </ul>\n    <p>{`先看第一种`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_134.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`第二种`}</p>\n    <p>{`类似第一种方式, 只是将分区操作替换为使用`}<inlineCode parentName=\"p\">{`dd`}</inlineCode>{`创建一个大文件`}</p>\n    <h1 {...{\n      \"id\": \"压缩和打包\"\n    }}>{`压缩和打包`}</h1>\n    <p>{`先简单介绍一下压缩的原理. 这里介绍两种:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`第一种, 我们一般都是使用bytes单位来计量文件, 实际上计算机计算的最小单位是bits. 1byte = 8bits, 现在考虑如何表示数字1—-在计算机中会存储成 00000001, 可以看到有很多0, 这实际上造成了浪费. 这种压缩方式压缩的就是这里的空间`}</li>\n      <li parentName=\"ul\">{`第二种, 会将重复的数据进行统计, 比如数据为\"111…111\"共100个1, 这种压缩技术会记录\"100个1\"而不是真的存储100个1的位`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"常见的压缩工具\"\n    }}>{`常见的压缩工具`}</h2>\n    <p><em parentName=\"p\">{`.tar, `}</em>{`.tar.gz, `}<em parentName=\"p\">{`.tgz, `}</em>{`.gz, `}<em parentName=\"p\">{`.Z, `}</em>{`.bz2`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Screenshot_136.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\">{`compress已经快退休了, gzip也可以解开compress的压缩档`}</li>\n      <li parentName=\"ul\">{`常见的是gzip和bzip2, bzip2压缩比更好`}</li>\n      <li parentName=\"ul\">{`tar用来将多个文件打包为一个文件, 并不压缩文件, 一般和gzip/bzip2结合使用`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"gzip和zcat\"\n    }}>{`gzip和zcat`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_137.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`gzip -v <file1> <file2> <file3>`}</inlineCode>{` 压缩(多个)指定文件到当前文件夹下(不能指定压缩文件名), 同时显示压缩信息(注意:不是备份, 压缩后源文件就不见了)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`gzip -d <待解文件1> <待解文件2>`}</inlineCode>{` 解压缩(多个)指定文件到当前目录(类似的, 解压后, 压缩文件就不见了)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`zcat <压缩文件>`}</inlineCode>{` 读取文本压缩文件`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`gzip -c <file> > <指定压缩文件名>`}</inlineCode>{` \">\"数据流重导向, 将屏幕上的数据流导入指定文件, 变相的备份, 可以指定压缩文件名`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"bzip2和bzcat\"\n    }}>{`bzip2和bzcat`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_138.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`bzip2 -z <file>`}</inlineCode>{` 压缩`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`bzcat <file>`}</inlineCode>{` 读取文本型压缩文件`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`bzip2 -d <待解文件>`}</inlineCode>{` 解压缩`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`bzip2 -c <file> > <指定压缩文件名>`}</inlineCode>{` 带备份的压缩`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"打包tar\"\n    }}>{`打包tar`}</h2>\n    <p>{`tarfile: 单纯使用tar打包后的文件(打包时, 不带-j, -z等参数)\ntarball: 打包后压缩的文件`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_139.png\",\n        \"alt\": null\n      }}></img></p>\n    <p><inlineCode parentName=\"p\">{`-j`}</inlineCode>{`: bzip2 ; `}<inlineCode parentName=\"p\">{`-z`}</inlineCode>{`: gzip;\n`}<inlineCode parentName=\"p\">{`-c`}</inlineCode>{`:压缩　; `}<inlineCode parentName=\"p\">{`-x`}</inlineCode>{`: 解压缩; `}<inlineCode parentName=\"p\">{`-t`}</inlineCode>{`: 查看压缩; `}<inlineCode parentName=\"p\">{`-v`}</inlineCode>{` : 显示过程`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`tar -jcv -f <自定义压缩文件名.tar.bz2> <需要压缩的文件/目录(可以有多个)>`}</inlineCode>{` 打包后, bzip2压缩; 推荐自定义压缩名: xxx.tar.bz2`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`tar -jcv -f <自定义压缩文件名.tar.bz2> --exclude=<排除文件> <需要压缩的文件/目录(可以有多个)>`}</inlineCode>{` 排除指定目录下某几个文件, 然后压缩`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`tar -jtv -f <待查看压缩档.tar.bz2>`}</inlineCode>{` 查看压缩档包括哪些文件名(类似 ls)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`tar -jxv -f <待解文件.tar.bz2>`}</inlineCode>{` 解压到当前目录, 使用bzip2`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`tar -jxv -f <待解文件.tar.bz2> -C <指定解压到这个目录>`}</inlineCode>{` 解包后, 使用bzip2解压到指定目录`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`tar -jxv -f <待解文件.tar.bz2> <指定tar包中的一个文件>`}</inlineCode>{` 解压压缩包中指定的一个文件, 使用bzip2; (注意: 指定的单一文件不要带\"/\")`}</p>\n        <p parentName=\"li\">{`  这个命令一般需要先使用`}<inlineCode parentName=\"p\">{`tar -jtv -f <待查看压缩档.tar.bz2> | grep '关键词'`}</inlineCode>{`找到希望解压的那个文件`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`tar -zpcv -f <custom_file.tar.gz>`}</inlineCode>{` 带权限,属性打包备份, 使用gzip备份(`}<inlineCode parentName=\"p\">{`-z`}</inlineCode>{`换为`}<inlineCode parentName=\"p\">{`-j`}</inlineCode>{`就是使用bzip2压缩)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`-P`}</inlineCode>{` 表示压缩的时候为每个文件保留\"/\"根目录, 默认是移除根目录的, 防止解压缩时机器上的数据被覆盖; 建议不要加`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`--newer-mtime=\"2018/09/20\"`}</inlineCode>{` 仅备份比某个时刻还要新的文件`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`tar -cv -f - <待打包文件> | tar -xv -f -`}</inlineCode>{` 复制(一般打包, 一边解开); (- 代表打包缓存文件), 其实就是简化`}<inlineCode parentName=\"p\">{`cp -r`}</inlineCode>{`命令`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"dd\"\n    }}>{`dd`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_142.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`dd if=<input file> of=<output file>`}</inlineCode>{` 复制文件, 指定输入输出`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`dd if=/dev/hdc1 of=xxxx bs=512 count=1`}</inlineCode>{`备份指定磁盘的第一个扇区(一个扇区512bytes, 特别是:第一个扇区包含有MBR和partition table, 值得备份)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`dd if=/dev/hdc1 of=xxxx`}</inlineCode>{` 备份整个磁盘, 连同metadata一起复制, 两个磁盘完全一模一样(这个特别方便)`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"cpio\"\n    }}>{`cpio`}</h2>\n    <p>{`cpio 不会主动去找档案来备份, 不能指定某个特定的待备份文件, 需要配合find等命令使用, 使用\"<\"\">\"进行数据重导向`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_143.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_144.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{` find <dir> | cpio -ocvB > <压缩文件.cpio>`}</inlineCode>{` 将dir下所有文件备份到指定文件`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cpio -idvc < <压缩文件.cpio>`}</inlineCode>{` 将压缩文件解开`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"dump完整备份工具\"\n    }}>{`dump完整备份工具`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`支持差异备份(0~9的等级, 0为完整备份, 1为对0的差异备份, 2为对1的差异备份…)`}</li>\n      <li parentName=\"ul\">{`但是对某一个指定文件夹的备份支持不足(不支持差异备份, 所有的备份文件只能在该目录下)`}</li>\n    </ul>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_158.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_159.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`备份某个磁盘; 先`}<inlineCode parentName=\"p\">{`df -h`}</inlineCode>{` 列出所有的磁盘使用量, 然后测试备份需要多少容量`}<inlineCode parentName=\"p\">{`dump -S <磁盘文件名>`}</inlineCode>{`(单位为bytes), 备份`}<inlineCode parentName=\"p\">{`dump -0u -f <指定生成备份文件名> <文件夹/设备名>`}</inlineCode>{` 完全备份, 同时更新 /etc/dumpdates`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`dump -W`}</inlineCode>{` 查看所有磁盘的dump记录`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`dump -0j -f /root/etc.dump.bz2 /etc`}</inlineCode>{` 备份某个指定目录(带压缩功能)`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"restore复原\"\n    }}>{`restore复原`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_160.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_161.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{` restore -t -f /root/boot.dump`}</inlineCode>{` 查看dump的内容`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`restore -C -f /root/boot.dump`}</inlineCode>{` 比对dump文件和当前实际文件系统差异`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`还原`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`建立新的文件系统(分区)`}<inlineCode parentName=\"li\">{`fdisk /dev/hdc`}</inlineCode>{`, 然后`}<inlineCode parentName=\"li\">{`partprobe`}</inlineCode>{`, 建立好后格式化分区`}<inlineCode parentName=\"li\">{` mkfs -t ext3 /dev/hdc8`}</inlineCode>{`, 挂载`}<inlineCode parentName=\"li\">{` mount /dev/hdc8 /mnt`}</inlineCode></li>\n          <li parentName=\"ul\">{`进入某个目录正式还原`}<inlineCode parentName=\"li\">{`restore -r -f /root/boot.dump`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`restore -i -f /root/etc.dump `}</inlineCode>{` 进入互动模式`}</p>\n      </li>\n    </ul>\n    <h1 {...{\n      \"id\": \"bash\"\n    }}>{`bash`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/jaywcjlove/shell-tutorial\"\n      }}>{`https://github.com/jaywcjlove/shell-tutorial`}</a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/wangdoc/shell-tutorial/blob/master/docs/basics/variable.md\"\n      }}>{`https://github.com/wangdoc/shell-tutorial/blob/master/docs/basics/variable.md`}</a></p>\n    <h2 {...{\n      \"id\": \"示例\"\n    }}>{`示例`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\",\n        \"data-language\": \"sh\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"#########################3\\n#!/bin/bash\\n#第一个shell小程序,echo 是linux中的输出命令。\\necho  &quot;helloworld!&quot;\\n##############################\\n# 运行\\n./demo.sh\\n\\n############################3\\n\\n# #################shell 变量\\n# - 自定义变量\\n# - 环境变量\\n# - shell变量\\n# PATH 决定了shell将到哪些目录中寻找命令或程序 \\n# HOME 当前用户主目录 \\n# HISTSIZE　历史记录数 \\n# LOGNAME 当前用户的登录名 \\n# HOSTNAME　指主机的名称 \\n# SHELL 当前用户Shell类型\\n# LANGUGE 　语言相关的环境变量，多语言可以修改此环境变量\\n# MAIL　当前用户的邮件存放目录 \\n# PS1　基本提示符，对于root用户是#，对于普通用户是$\\necho $HOME\\necho ${HOME} # 区分大小写\\n\\n###############自定义变量 字符串#################\\n#!/bin/bash\\n#自定义变量hello\\n# 变量声明默认都是string类型\\n# 等号两边无空格, 若值中有空格, 用引号(单双均可)括起来\\n#   [&quot;&quot;]中的 [$] 可以保有原本特性, 如 var=&quot;lang is $LANG&quot;\\n#   [&#39;&#39;]中的 [$] 仅仅是一般字符\\n#* 设定变量后需要`export &lt;变量名&gt;`以在其他程序中使用\\n#* 系统变量一般为大写, 自定义变量为小写方便判断\\n#* `unset &lt;变量名&gt;` 取消变量设定\\nhello=&quot;hello world&quot;\\n# or\\nhello=&#39;hello world&#39;\\necho $hello\\necho  &quot;helloworld!&quot;\\necho &#39;hello - ${PATH}&#39; # hello - ${PATH}\\n\\n#获取字符串长度\\nname=&quot;SnailClimb&quot;\\n# 第一种方式\\necho ${#name} #输出 10\\n# 第二种方式\\nexpr length &quot;$name&quot;;\\n# 使用 expr 命令时，表达式中的运算符左右必须包含空格，如果不包含空格，将会输出表达式本身:\\nexpr 5+6    // 直接输出 5+6\\nexpr 5 + 6       // 输出 11\\n# 对于某些运算符，还需要我们使用符号\\\\进行转义\\nexpr 5 * 6       // 输出错误\\nexpr 5 \\\\* 6      // 输出30\\n\\n# 截取子串\\n#从字符串第 1 个字符开始往后截取 10 个字符 \\nstr=&quot;SnailClimb is a great man&quot;\\necho ${str:0:10} #输出:SnailClimb\\n\\n##################根据表达式截取###################3\\n\\n#!bin/bash\\n#author:xiaoyu\\n\\nvar=&quot;http://www.runoob.com/linux/linux-shell-variable.html&quot;\\n\\ns1=${var%%t*}#h\\ns2=${var%t*}#http://www.runoob.com/linux/linux-shell-variable.h\\ns3=${var%%.*}#http://www\\ns4=${var#*/}#/www.runoob.com/linux/linux-shell-variable.html\\ns5=${var##*/}#linux-shell-variable.html\\n\\n####################shell数组############################\\n\\n#!/bin/bash\\narray=(1 2 3 4 5);\\n# 获取数组长度\\nlength=${#array[@]}\\n# 或者\\nlength2=${#array[*]}\\n#输出数组长度\\necho $length #输出：5\\necho $length2 #输出：5\\n# 输出数组第三个元素\\necho ${array[2]} #输出：3\\nunset array[1]# 删除下表为1的元素也就是删除第二个元素\\nfor i in ${array[@]};do echo $i ;done # 遍历数组，输出： 1 3 4 5 \\nunset arr_number; # 删除数组中的所有元素\\nfor i in ${array[@]};do echo $i ;done # 遍历数组，数组元素为空，没有任何输出内容\\n\\n############### 引入其他指令 #####################\\n\\n# 引入其他指令, 借助反单引号 &quot; \\\\` &quot;, 如 \\nsystem=\\\\`uname\\\\`----\\\\`uname -r\\\\`\\necho system # 显示Linux-----3.10.0-693.2.2.el7.x86_64 ; \\n# 另外还有一种方法: \\nsystem=$(uname)----$(uname -r)\\n\\n\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"所有可用的shell\"\n    }}>{`所有可用的shell`}</h2>\n    <p>{`bash是linux可以使用的shell之一(zsh, dash…), 查看系统可以使用的全部shell可以`}<inlineCode parentName=\"p\">{`vim /etc/shells`}</inlineCode>{`, 见下图:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_162.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_163.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`某个用户登录可以使用的shell, 记录在 /etc/passwd`}</p>\n    <p>{`bash优点:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`历史命令记录, 在 \\${user.home}/.bash_history, 如root的在 ~/.bash_history`}</li>\n      <li parentName=\"ul\">{`命令/档案补全`}</li>\n      <li parentName=\"ul\">{`alias, 如 `}<inlineCode parentName=\"li\">{`alias lm='ls -al' `}</inlineCode></li>\n      <li parentName=\"ul\">{`(job control, foreground, background. 后台运行`}</li>\n      <li parentName=\"ul\">{`shell script`}</li>\n      <li parentName=\"ul\">{`支持通配符 `}<inlineCode parentName=\"li\">{`*`}</inlineCode></li>\n    </ul>\n    <p><inlineCode parentName=\"p\">{`type <cmd>`}</inlineCode>{` 列出指令使用情况 可以当作`}<a parentName=\"p\" {...{\n        \"href\": \"#%E6%90%9C%E5%AF%BB%E6%96%87%E4%BB%B6%E5%92%8C%E6%8C%87%E4%BB%A4\"\n      }}>{`which`}</a>{`用`}</p>\n    <h2 {...{\n      \"id\": \"环境变量-1\"\n    }}>{`环境变量`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`env`}</inlineCode>{` 查看所有环境变量(也可以用`}<inlineCode parentName=\"p\">{`export`}</inlineCode>{`)`}</p>\n        <p parentName=\"li\">{`  `}<img parentName=\"p\" {...{\n            \"src\": \"./Screenshot_164.png\",\n            \"alt\": null\n          }}></img>{`\n`}<img parentName=\"p\" {...{\n            \"src\": \"./Screenshot_165.png\",\n            \"alt\": null\n          }}></img></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{` declare -i number=$RANDOM*10/32768`}</inlineCode>{` 定义随机数number, 范围是0—-9`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`set`}</inlineCode>{` 查看环境变量和自定义变量(也可以用`}<inlineCode parentName=\"p\">{`declare`}</inlineCode>{`)`}</p>\n        <p parentName=\"li\">{`  `}<img parentName=\"p\" {...{\n            \"src\": \"./Screenshot_166.png\",\n            \"alt\": null\n          }}></img>{`\n`}<img parentName=\"p\" {...{\n            \"src\": \"./Screenshot_167.png\",\n            \"alt\": null\n          }}></img></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`设定命令提示符PS1 `}<inlineCode parentName=\"p\">{`echo $PS1`}</inlineCode></p>\n        <p parentName=\"li\">{`  `}<img parentName=\"p\" {...{\n            \"src\": \"./Screenshot_168.png\",\n            \"alt\": null\n          }}></img>{`\n`}<img parentName=\"p\" {...{\n            \"src\": \"./Screenshot_169.png\",\n            \"alt\": null\n          }}></img></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`echo $$`}</inlineCode>{` 本shell 的 线程代号(PID)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`echo $?`}</inlineCode>{` 上个命令的返回值(一般上个指令正常结束返回0, 异常则返回错误代码)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`export <自定义变量名>`}</inlineCode>{` 自定义变量转为环境变量`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`环境变量能被子程序识别(子程序继承了环境变量), 自定义变量无法被子程序识别(无法继承)`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`locale -a`}</inlineCode>{`查看所有支持的语系`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`locale`}</inlineCode>{` 查看本机的语系设定`}</p>\n        <p parentName=\"li\">{`  `}<img parentName=\"p\" {...{\n            \"src\": \"./Screenshot_170.png\",\n            \"alt\": null\n          }}></img></p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"键盘读取read\"\n    }}>{`键盘读取read`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_171.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`read <自定义变量名>`}</inlineCode>{` 读取键盘输入, 存入指定变量`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`read -p \"Please keyin your name: \" -t 30 named`}</inlineCode>{` 带提示信息, 限制等待时间30s`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"declaretypeset声明变量类型\"\n    }}>{`declare,typeset声明变量类型`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_172.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`declare -i sum=100+300+50`}</inlineCode>{`, 此时sum为450`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`declare -x <变量名>`}</inlineCode>{` 转为环境变量 ,同 `}<inlineCode parentName=\"li\">{`export xxxx`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{` declare +x <环境变量名>`}</inlineCode>{` 移除环境变量`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`declare -r <变量名>`}</inlineCode>{` 声明为只读`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`declare -p sum`}</inlineCode>{` 单独列出变量类型`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"数组\"\n    }}>{`数组`}</h2>\n    <p>{`设定:`}<inlineCode parentName=\"p\">{`var[1]=\"small min\" `}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`var[2]=\"big min\"`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`var[3]=\"nice min\" `}</inlineCode>{`获取: `}<inlineCode parentName=\"p\">{` echo \"\\${var[1]}, \\${var[2]}, \\${var[3]}\"`}</inlineCode>{`(可以不加引号)`}</p>\n    <h2 {...{\n      \"id\": \"变量的删除取代\"\n    }}>{`变量的删除取代`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\",\n        \"data-language\": \"sh\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"#:      表示左→右开始匹配，匹配最短的, 然后删除\\n##： 表示左→右开始匹配，匹配最长的, 然后删除\\n%：   表示右→左开始匹配，匹配最短的, 然后删除\\n%%：表示右→左开始匹配，匹配最长的, 然后删除\\n\\n匹配方向有别，但是匹配表达式还是顺序的\\n\\n取代看后面的图\\n\\nvar=&quot;http://www.runoob.com/linux/linux-shell-variable.html&quot;\\n\\ns1=${var%%t*}#h\\ns2=${var%t*}#http://www.runoob.com/linux/linux-shell-variable.h\\ns3=${var%%.*}#http://www\\ns4=${var#*/}#/www.runoob.com/linux/linux-shell-variable.html\\ns5=${var##*/}#linux-shell-variable.html\\n\"\n        }\n      }}></code></pre>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_175.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_176.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_177.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_178.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_179.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_180.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_181.png\",\n        \"alt\": null\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"变量的测试和内容替换\"\n    }}>{`变量的测试和内容替换`}</h2>\n    <p>{`判断变量是否存在`}</p>\n    <ul>\n      <li parentName=\"ul\">{`xxx=\\${xxx-yyy} 如果xxx未设定，则设为yyy`}</li>\n      <li parentName=\"ul\">{`xxx=\\${xxx:-root} 如果未设定or为空串，设为yyy`}</li>\n    </ul>\n    <p>{`更多见:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_182.png\",\n        \"alt\": null\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"命令别名和设定\"\n    }}>{`命令别名和设定`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`设定别名`}<inlineCode parentName=\"li\">{`alias lm='ls -al | more' `}</inlineCode></li>\n      <li parentName=\"ul\">{`查看所有`}<inlineCode parentName=\"li\">{`alias`}</inlineCode></li>\n      <li parentName=\"ul\">{`取消设定`}<inlineCode parentName=\"li\">{`unalias lm`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"命令历史\"\n    }}>{`命令历史`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_183.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_184.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`history`}</inlineCode>{` 列出所有的命令历史`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`history 3`}</inlineCode>{` 最近3个命令`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"指令搜寻顺序\"\n    }}>{`指令搜寻顺序`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`以相对/绝对路径执行命令，例如『 /bin/ls 』和『 ./ls 』； `}</li>\n      <li parentName=\"ol\">{`由 alias 找到命令执行； `}</li>\n      <li parentName=\"ol\">{`由 bash 内建的 (builtin) 命令来执行； `}</li>\n      <li parentName=\"ol\">{`透过 $PATH 这个发量的顺序搜寻到第一个命令执行。`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"bash登录欢迎信息\"\n    }}>{`bash登录欢迎信息`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{` cat /etc/issue`}</inlineCode>{`查看进站信息`}</p>\n        <p parentName=\"li\">{`  `}<img parentName=\"p\" {...{\n            \"src\": \"./Screenshot_185.png\",\n            \"alt\": null\n          }}></img></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`cat /etc/issue.net`}</inlineCode>{` 查看使用telnet登录的欢迎信息`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`cat /etc/motd`}</inlineCode>{` 大家登录都会看到的提示信息`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"bash的环境配置文件\"\n    }}>{`bash的环境配置文件`}</h2>\n    <p>{` login shell(输入帐号密码) 和 non-login shell(无需输入帐号密码就能登录)两种登录shell类型登录时读取的配置文件不同`}</p>\n    <p>{` login shell只读取两个配置文件: `}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`/etc/profile(系统的整体设定, 不要修改)`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`每个使用者登录都会读取, 设定这些变量`}</p>\n            <p parentName=\"li\">{`  `}<img parentName=\"p\" {...{\n                \"src\": \"./Screenshot_186.png\",\n                \"alt\": null\n              }}></img></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`此外, 还会读取外部的配置文件`}</p>\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`/etc/inputrc 设定一些热键`}</li>\n              <li parentName=\"ul\">{`/etc/profile.d/*.sh (多个), 规定了bash接口的颜色, 语系一些命令别名; 如果需要为所有的user设定命令别名则修改`}</li>\n              <li parentName=\"ul\">{`/etc/sysconfig/i18n 这个档案是由 /etc/profile.d/lang.sh 调用！这也是我们决定 bash 使用什么预习,LANG的设定`}</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`~/.bash_profile 或 ~/.bash_login 或 ~/.profile————-都是个人配置文件, 在1和1的下属配置文件都调用的才调用它`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`3个文件之后有一个被读取, 以上是读取顺序, 一旦前者被读取, 后者就不会读取了`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`以~/.bash_profile为例, 实际会读取~/.bashrc, 可以将自定义配置写入该文件, 通过`}<inlineCode parentName=\"p\">{`source ~/.bashrc`}</inlineCode>{` 读入配置; 或者`}<inlineCode parentName=\"p\">{`. ~/.bashrc`}</inlineCode></p>\n          </li>\n        </ul>\n      </li>\n    </ol>\n    <p>{`login shell只读取~/.bashrc`}</p>\n    <p>{`此外, 还有其他的配置文件会影响bash`}</p>\n    <p>{`/etc/man.config `}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_187.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`~/.bash_history `}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_188.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`~/.bash_logout`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_189.png\",\n        \"alt\": null\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"终端机的环境设定sttyset\"\n    }}>{`终端机的环境设定stty,set`}</h2>\n    <p><inlineCode parentName=\"p\">{`stty -a`}</inlineCode>{`列出所有按键和按键内容`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_190.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`比如设定`}<inlineCode parentName=\"p\">{` stty erase ^h`}</inlineCode>{` 使用ctrl+h进行删除`}</p>\n    <h2 {...{\n      \"id\": \"通配符和特殊符号\"\n    }}>{`通配符和特殊符号`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_191.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_192.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_193.png\",\n        \"alt\": null\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"数据流重导向\"\n    }}>{`数据流重导向`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_194.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_195.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{` ll / > <file>`}</inlineCode>{` 将数据输出到指定文件(数据会被覆盖)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{` ll / >> <file>`}</inlineCode>{` 数据会被累加`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`查看/home下是否有.bashrc档案存在`}<inlineCode parentName=\"p\">{`find /home -name .bashrc`}</inlineCode>{`, 有出错信息会直接输出到屏幕, 现在将正常结果和错误信息输出到不同文件`}<inlineCode parentName=\"p\">{`find /home -name .bashrc > list_right 2> list_error`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`find /home -name .bashrc 2> /dev/null`}</inlineCode>{` 将错误输出扔掉( /dev/null 可以吃掉任何导向这个装置的信息)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{` find /home -name .bashrc > list 2>&1`}</inlineCode>{` 正确输出和错误输出写入同一个文件`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`cat > <file>`}</inlineCode>{` 将键盘输入存入指定文件(ctrl+d结束输入)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`cat > catfile < ~/.bashrc`}</inlineCode>{` 新建立的catfile就是后者的复制`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`cat > catfile << \"eof\"`}</inlineCode>{` 输入\"eof\"就结束输入(<<表示后面接的是结束字符)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`多重重导向 tee `}</p>\n        <p parentName=\"li\">{`  `}<img parentName=\"p\" {...{\n            \"src\": \"./Screenshot_202.png\",\n            \"alt\": null\n          }}></img></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`last | tee last.list | cut -d \" \" -f1 `}</inlineCode>{` 同时输出一份数据到两处地方`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{` ls -l /home | tee ~/homefile | more`}</inlineCode>{`同上`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ls -l / | tee -a ~/homefile | more`}</inlineCode>{` 累加输出`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"和\"\n    }}>{`&&和||`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_196.png\",\n        \"alt\": null\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"管线命令\"\n    }}>{`管线命令`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_197.png\",\n        \"alt\": null\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"截取命令\"\n    }}>{`截取命令`}</h2>\n    <p>{`cut: 主要用于将每一行里的数据分解, 去除想要的分段`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_198.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`echo $PATH | cut -d ':' -f 5`}</inlineCode>{`获取 PATH 内容，找出第五个路径`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`echo $PATH | cut -d ':' -f 3,5`}</inlineCode>{` 找到第三个和第五个路径`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`export | cut -c 12-`}</inlineCode>{` 每一行从第12个字符开始取`}</li>\n    </ul>\n    <p>{`grep: 从多行中去除需要的行, 见`}<a parentName=\"p\" {...{\n        \"href\": \"#grep%E8%BF%9B%E9%98%B6%E7%94%A8%E6%B3%95\"\n      }}>{`grep进阶用法`}</a></p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_199.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`last | grep 'root'`}</inlineCode>{` 含有root的行`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{` grep -v 'root'`}</inlineCode>{` 没有root的行`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`grep --color=auto '<key>' <file>`}</inlineCode>{` 在指定文件中寻找`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"排序sortwcuniq\"\n    }}>{`排序sort,wc,uniq`}</h2>\n    <p>{`sort: sort将文件/文本的每一行作为一个单位，相互比较，比较原则是从首字符向后，依次按ASCII码值进行比较，最后将他们按升序输出`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_200.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_201.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`对于`}<inlineCode parentName=\"p\">{`-k`}</inlineCode>{`: 格式：-k  fstart.cstart, fend.cend，都是数字，从1开始，若有多重排序，后面再接 -k …eg:`}<a parentName=\"p\" {...{\n        \"href\": \"http://wangchujiang.com/linux-command/c/sort.html\"\n      }}>{`http://wangchujiang.com/linux-command/c/sort.html`}</a></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cat /etc/passwd | sort`}</inlineCode>{` 默认排序`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cat /etc/passwd | sort -t ':' -k 3`}</inlineCode>{` 冒号分开,用第三栏排序`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cat /etc/passwd | sort -t ':' -k 3 -n `}</inlineCode>{` 以数字进行排序(默认为文字排序)`}</li>\n    </ul>\n    <p>{`uniq: 将重复的数据只显示一行(必须在使用sort之后使用)`}</p>\n    <p>{`wc: 显示总字符, 总行数`}</p>\n    <h2 {...{\n      \"id\": \"字符转换命令\"\n    }}>{`字符转换命令`}</h2>\n    <p>{`tr: 删除 文字替换`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`last | tr '[a-z]' '[A-Z]'`}</inlineCode>{` 所有的小写变为大写`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cat /etc/passwd |tr -d \":\"`}</inlineCode>{` 将passwd中所有的`}{`[:]`}{`删除`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cp /xxx /root/xxx && unix2dos /root/xxx `}</inlineCode>{`将/xxx复制到/root下并转成dos断行`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cat /xxx | tr -d '\\\\r' > /root/xxx`}</inlineCode>{`删除/xxx中的换行符号`}</li>\n    </ul>\n    <p>{`col: tab以空格显示`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cat -A /xxx`}</inlineCode>{`显示出所有按键符号`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cat /etc/man.config | col -x | cat -A | more`}</inlineCode>{` 显示tab为空格`}</li>\n    </ul>\n    <p>{`expand: 替换tab为空格`}</p>\n    <p>{`split: 档案分割`}</p>\n    <p>{`xargs: 主要用于将前面的输出流格式化成输入参数`}</p>\n    <p>{`join, paste`}</p>\n    <h1 {...{\n      \"id\": \"正则文本格式化\"\n    }}>{`正则&文本格式化`}</h1>\n    <h2 {...{\n      \"id\": \"正则表达式和语言系统有关系\"\n    }}>{`正则表达式和语言系统有关系`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_203.png\",\n        \"alt\": null\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"正则中的特殊符号\"\n    }}>{`正则中的特殊符号`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_204.png\",\n        \"alt\": null\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"grep进阶用法\"\n    }}>{`grep进阶用法`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#%E6%88%AA%E5%8F%96%E5%91%BD%E4%BB%A4\"\n      }}>{`grep基础用法`}</a></p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_205.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`正则表示法中的特殊符号`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_206.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_207.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_208.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`grep -n 'key' <file>`}</inlineCode>{` 搜寻key`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`grep -vn 'key' <file>`}</inlineCode>{` 反向选择`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`dmesg | grep 'eth'`}</inlineCode>{`找到核心信息的eth那行`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{` dmesg | grep -n --color=auto 'eth'`}</inlineCode>{` 关键词显色, 显示行号`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`dmesg | grep -n -A3 -B2 --color=auto 'eth'`}</inlineCode>{` 前2行和后3行一起显示`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`grep -n 't[ea]st' <file>`}</inlineCode>{`搜寻即可字符(test 或 tast)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`grep -n '[^g]oo' regular_express.txt`}</inlineCode>{` 不为指定字符`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`grep -n '[^a-z]oo' regular_express.txt `}</inlineCode>{` 不为某个字符范围`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{` grep -n '[0-9]' regular_express.txt`}</inlineCode>{` 取得有数字的行`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`grep -n '^the' regular_express.txt`}</inlineCode>{`以指定字符开头`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`grep -n '^[a-z]' regular_express.txt`}</inlineCode>{` 开头为小写字符`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`grep -n '\\\\.$' regular_express.txt`}</inlineCode>{` 以指定字符结束`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`grep -n 'o\\\\{2\\\\}' regular_express.txt`}</inlineCode>{` 指定字符出现次数`}</li>\n    </ul>\n    <p>{`如果希望设定grep自动关键词显色, 可修改`}<inlineCode parentName=\"p\">{`~/.bashrc`}</inlineCode>{` , 加上一行:`}<inlineCode parentName=\"p\">{`alias grep='grep --color=auto'`}</inlineCode>{`, 然后`}<inlineCode parentName=\"p\">{`source ~/.bashrc`}</inlineCode>{`生效`}</p>\n    <h2 {...{\n      \"id\": \"延伸正则表示法\"\n    }}>{`延伸正则表示法`}</h2>\n    <p>{`egrep`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_211.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_212.png\",\n        \"alt\": null\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"sed\"\n    }}>{`sed`}</h2>\n    <p>{`还可以将数据进行取代、删除、新增、抓取特定行`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_209.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_210.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`nl /etc/passwd | sed [-e] '2,5d'`}</inlineCode>{` 带行号列出, 并删除2–5行(sed后的动作需要引号)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`nl /etc/passwd | sed '2a drink tea'`}</inlineCode>{` 第2行后添加文字`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`nl /etc/passwd | sed '2i drink tea'`}</inlineCode>{`行前添加文字`}</li>\n      <li parentName=\"ul\">{`sed增加多行, 需要`}{`+`}{`enter跳脱`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`nl /etc/passwd | sed '2,5c No 2-5 number' `}</inlineCode>{` 取代2–5行`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`nl /etc/passwd | sed -n '5,7p'`}</inlineCode>{` 抓取5–7行, 同`}<inlineCode parentName=\"li\">{`head -n 7 | tail -n 2`}</inlineCode></li>\n    </ul>\n    <p>{`sed的行内格式化: `}<inlineCode parentName=\"p\">{`sed 's/要被取代的字符串/新字符串/g'`}</inlineCode></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ifconfig eth0 | grep 'inet addr' | sed 's/^.*addr://g' | sed 's/Bcast.*$//g'`}</inlineCode>{`获取ip（替换功能）`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`sed -i 's/匹配串/替换成的内容/g' /xxx `}</inlineCode>{`替换，直接修改原始档案`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"awk行内格式化\"\n    }}>{`awk行内格式化`}</h2>\n    <p>{`格式: `}<inlineCode parentName=\"p\">{`awk '条件类型1{动作 1} 条件类型 2{动作 2} ...' filename`}</inlineCode>{`; 默认的行内分隔符为空格或者tab; 变量可以直接用, 无需加$符号`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`last -n 5 | awk '{print $1 \"\\\\t\" $3}' `}</inlineCode>{` 没有条件,只有动作; $1代表第一栏, $2表示第二栏…; $0表示一整栏`}</li>\n    </ul>\n    <p>{`awk的内建变量:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_214.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`last -n 5| awk '{print $1 \"\\\\t lines: \" NR \"\\\\t columes: \" NF}' `}</inlineCode>{`和printf联用, printf的内容用双引号`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{` awk 'BEGIN{FS=\":\"} $3 < 10 {print $1 \"\\\\t \" $3}`}</inlineCode>{` 不用默认的分隔符号`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"printf格式化打印\"\n    }}>{`printf格式化打印`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_213.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`printf '%s\\\\t %s\\\\t %s\\\\t \\\\r\\\\n' $(cat /xxx) `}</inlineCode>{`格式化打印`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"文件对比工具\"\n    }}>{`文件对比工具`}</h2>\n    <p>{`diff: 以行为对比单位`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_215.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`cmp: 字节为单位对比`}</p>\n    <p>{`patch: 对比升级`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_216.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{` diff -Naur passwd.old passwd.new > passwd.patch`}</inlineCode>{` 制作差异补丁文件`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`patch -p0 < passwd.patch`}</inlineCode>{` 更新`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{` patch -R -p0 < passwd.patch`}</inlineCode>{` 还原`}</li>\n    </ul>\n    <p><inlineCode parentName=\"p\">{`-p0`}</inlineCode>{`的解释见`}<a parentName=\"p\" {...{\n        \"href\": \"#%E5%8E%9F%E5%A7%8B%E7%A0%81&tarball\"\n      }}>{`原始码&tarball`}</a></p>\n    <h1 {...{\n      \"id\": \"shell-script\"\n    }}>{`shell script`}</h1>\n    <h2 {...{\n      \"id\": \"各种执行方式和差异\"\n    }}>{`各种执行方式和差异`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`直接命令下达 - 会在一个新的 子 bash 环境下执行脚本, 子环境中的变量不会传到 parent bash 中来`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`绝对路径`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`相对路径 “./xxx.sh”`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`变量 PATH 功能: 置入 PATH 包含的路径`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`通过 bash 执行 “bash xxx.sh” or “sh xxx.sh”`}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`使用 `}<inlineCode parentName=\"p\">{`source`}</inlineCode>{` 执行 - 直接在 parent bash(就是当前 bash) 中执行`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"语法\"\n    }}>{`语法`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\",\n        \"data-language\": \"sh\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"#!/bin/bash\\n\\n# desc: create shell script with exec permission\\n# 每次新创建一个sh脚本都要更改权限, 通过这个脚本创建sh自动赋权\\n\\nPATH=${PATH}:/bin:/sbin:~/bin\\nexport PATH\\n\\nfile_name=$1\\nfile_name=${file_name:-&quot;no_name.sh&quot;}\\n\\nvim ${file_name}\\nchmod u+x ${file_name}\\n\\n\"\n        }\n      }}></code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\",\n        \"data-language\": \"sh\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"#!/bin/bash\\n# hello world\\necho -e &quot;hello world&quot;\\nexit 0\\n\\n#####################3\\n\\n#!/bin/bash\\n# &quot;read&quot; usage\\n\\nPATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin\\nexport PATH\\n\\nread -p &quot;input first name: &quot; firstname\\nread -p &quot;input last name: &quot; lastname\\necho -e ${firstname} ${lastname}\\n\\n#############################\\n\\n#!/bin/bash\\n\\n# 引用其他命令\\n# create 3 files, which named by user&#39;s input and date command;\\n\\nPATH=${PATH}:/bin:/sbin:~/bin\\nexport PATH\\n\\n#echo -e ${PATH}\\n\\necho -e &quot;I will create 3 files.&quot;\\nread -p &quot;input file name please: &quot; file_name\\nfile_name=${file_name:-&quot;filename&quot;}\\n\\ndate1=$(date --date=&quot;2 days ago&quot; +%Y%m%d) # 前两天\\ndate2=$(date --date=&quot;1 days ago&quot; +%Y%m%d) # one day ago\\ndate3=$(date +%Y%m%d) # today\\n\\nfile1=${file_name}${date1}\\nfile2=${file_name}${date2}\\nfile3=${file_name}${date3}\\n\\n# touch\\n\\ntouch ${file1}\\ntouch ${file2}\\ntouch ${file3}\\n\\n########################################\\n\\n#!/bin/bash\\n\\n# desc: + - * / % 数值运算 $((xxx*xxx))\\n# declare -i total=${first_num}*${sec_num}\\n# &lt;==&gt; total=$((a*b))\\n\\nPATH=${PATH}:/bin:/sbin:~/bin\\nexport PATH\\n\\necho -e &quot;input 2 numbers and I will cross them.\\\\n&quot;\\n\\nread -p &quot;first number: &quot; first_num\\nread -p &quot;second number: &quot; sec_num\\n\\ntotal=$((${first_num}*${sec_num}))\\necho -e &quot;result: ${total}&quot;\\n\\n###########################################3\\n\\n#!/bin/bash\\n\\n# 判断\\n# &quot;test&quot; usage; test xx==xx &lt;==&gt; [ &quot;xx&quot; == &quot;xx&quot; ] (tips: [] 内部的变量都用双引号抱起来以防止变量中有空格; 每个部分都要隔开)\\n# -e (exist) -f (file) -d (directory) ;\\n# -rwx (readable? writeable? exectable?) ;\\n# -eq (equal) -ne (not equal) \\n# test -z &quot;xxx&quot; (zero) 判断是string否为0/null;  test -n &quot;xxx&quot; (not zero, 可省略) 不为0; test &quot;xxx&quot;==&quot;yyy&quot; (&quot;=&quot;也可)是否相等; test &quot;xxx&quot;!=&quot;yyy&quot; 是否不等;\\n# -a (and) -o (or) ! (not)\\n\\nPATH=${PATH}:/bin:/sbin:~/bin\\nexport PATH\\n\\necho -e &quot;I&#39;ll test wether the file name you input exist. &quot;\\nread -p &quot;input a file name: &quot; file_name\\n\\ntest -z ${file_name} &amp;&amp; echo -e &quot;you must input a valid file name&quot; &amp;&amp; exit 0\\ntest ! -e ${file_name} &amp;&amp; echo &quot;the file ${file_name} does not exist&quot; &amp;&amp; exit 0\\n\\ntest -f ${file_name} &amp;&amp; type=&quot;regular file&quot;\\ntest -d ${file_name} &amp;&amp; type=&quot;directory&quot;\\ntest -r ${file_name} &amp;&amp; perm=&quot;readable&quot;\\ntest -w ${file_name} &amp;&amp; perm=&quot;${perm} writable&quot;\\ntest -x ${file_name} &amp;&amp; perm=&quot;${perm} excutable&quot;\\n\\necho -e &quot;it&#39;s a ${type}&quot;\\necho -e &quot;and the permissions are: ${perm}&quot;\\n\\n##########################################\\n\\n#!/bin/bash\\n\\n# desc: make choice 判断的另一种写法\\n\\nPATH=${PATH}:/bin:/sbin:~/bin\\nexport PATH\\n\\nread -p &quot;input Y/N: &quot; yn\\n[ &quot;${yn}&quot;==&quot;Y&quot; -o &quot;${yn}&quot;==&quot;y&quot; ] &amp;&amp; echo -e &quot;ok, continue.&quot; &amp;&amp; exit 0\\n[ &quot;${yn}&quot;==&quot;N&quot; -o &quot;${yn}&quot;==&quot;n&quot; ] &amp;&amp; echo -e &quot;oh, break.&quot; &amp;&amp; exit 0\\necho -e &quot;I don&#39;t know what you mean.&quot; &amp;&amp; exit 0\\n\\n#######################################\\n\\n#!/bin/bash\\n\\n# default variables 默认变量\\n# https://www.cnblogs.com/chjbbs/p/6393935.html\\n\\n# &quot;shift&quot; 删除前n（默认前1个）个变量\\n# $0 $1 $2 $3 ... 0 -&gt; 命令； 1 -&gt; 第一个参数\\n# $# 参数个数；#@ 所有参数\\n\\nPATH=${PATH}:/bin:/sbin:~/bin\\nexport PATH\\n\\necho -e &quot;total parameter number is: ${#}&quot;\\necho -e &quot;whhole parameter is: ${@}&quot;\\nshift\\necho -e &quot;after shift&quot;\\necho -e &quot;-&gt; total param num is: ${#}&quot;\\necho -e &quot;-&gt; whole param is: ${@}&quot;\\nshift 2\\necho -e &quot;after shift 2&quot;\\necho -e &quot;--&gt; total param num is: ${#}&quot;\\necho -e &quot;--&gt; whole param is: ${@}&quot;\\n\\n############################################\\n\\n#!/bin/bash\\n\\n# &quot;if then&quot; usage\\n# [ &quot;${param}&quot; == &quot;xxx&quot; -o &quot;${param}&quot; == &quot;yyy&quot; ] &lt;==&gt; [ &quot;${p}&quot; == &quot;xxx&quot; ] || [ &quot;${p}&quot; == &quot;yyy&quot; ]\\n\\nread -p &quot;input y/n: &quot; p\\nif [ &quot;${p}&quot; == &quot;y&quot; ] || [ &quot;${p}&quot; == &quot;Y&quot; ]; then\\n        echo &quot;ok, continue.&quot;\\n        exit 0\\nelif [ &quot;${p}&quot; == &quot;n&quot; ] || [ &quot;${p}&quot; == &quot;N&quot; ]; then\\n        echo &quot;oh, interrupt&quot;\\nelse\\n        echo &quot;I don&#39;t know what you mean.&quot; &amp;&amp; exit 0\\nfi\\n\\n##################################################\\n\\n#!/bin/bash\\n\\n# detect runing service\\n\\necho -e &quot;I will detect runing services.&quot;\\ntesting=$(netstat -tuln | grep &quot;:80&quot;)\\nif [ &quot;${testing}&quot; != &quot;&quot; ]; then\\n        echo &quot;WWW is runing.&quot;\\nfi\\n\\ntesting=$(netstat -tuln | grep &quot;:22&quot;)\\nif [ &quot;${testing}&quot; != &quot;&quot; ]; then\\n        echo &quot;SSH is runing.&quot;\\nfi\\n\\ntesting=$(netstat -tuln | grep &quot;:21&quot;)\\nif [ &quot;${testing}&quot; != &quot;&quot; ]; then\\n        echo &quot;FTP is runing.&quot;\\nfi\\n\\ntesting=$(netstat -tuln | grep &quot;:25&quot;)\\nif [ &quot;${testing}&quot; != &quot;&quot; ]; then\\n        echo &quot;MAIL is runing&quot;\\nfi\\n\\n############################################\\n\\n#!/bin/bash\\n\\n# case xx in 用法\\n\\ncase ${1} in\\n        &quot;hello&quot;)\\n                echo &quot;hello, h a y&quot;\\n                ;;\\n        &quot;&quot;)\\n                echo &quot;must input parameter, eg&gt; ${0} someword&quot;\\n                ;;\\n        *)\\n                echo &quot;usage: ${0} hello&quot;\\n                ;;\\nesac\\n\\n########################################3\\n\\n#!/bin/bash\\n\\n# 定义 函数\\n\\nfunction printit(){ \\n  echo &quot;Your choice is $1&quot;   # 这个 $1 必须要参考底下指令的下达 \\n} \\ncase $1 in \\n  &quot;one&quot;) \\n    printit 1  # 请注意， printit 指令后面还有接参数！ \\n    ;; \\n  &quot;two&quot;) \\n    printit 2 \\n    ;;\\n  &quot;three&quot;) \\n    printit 3 \\n    ;; \\n  *) \\n    echo &quot;Usage $0 {one|two|three}&quot; \\n    ;; \\nesac\\n\\n###############################\\n\\n# 循环 while do done, until do done 条件满足则种植循环, for var in value1 value2 value3... do done\\n\\n#!/bin/bash\\n\\n# &quot;cut&quot;, function, for var in ... do done\\n\\nPATH=${PATH}:/bin:/sbin:~/bin\\nexport PATH\\n\\nnames=$(cut -d &quot;:&quot; -f1 /etc/passwd)\\nfor name in ${names}\\ndo\\n        id ${name}\\n        finger ${name}\\ndone\\n\\n########################################################\\n\\nnetwork=&quot;192.168.1&quot;              # 先定丿一个网域的前面部分！ \\nfor sitenu in $(seq 1 100)       # seq 为 sequence(连续) 的缩写 \\ndo \\n    # 底下的程序在 ping 的回传值是正确的还是失败的！ \\n    ping -c 1 -w 1 ${network}.${sitenu} &amp;&gt; /dev/null &amp;&amp; result=0 || result=1 \\n    # 开始显示结果是正确的 (UP) 还是错误的没有连通 (DOWN) \\n    if [ &quot;$result&quot; == 0 ]; then \\n        echo &quot;Server ${network}.${sitenu} is UP.&quot; \\n    else \\n        echo &quot;Server ${network}.${sitenu} is DOWN.&quot; \\n    fi \\ndone \\n\\n###################################\\n\\n# 循环加判断\\n\\n# 1. 先看看这个目录是否存在啊？ \\nread -p &quot;Please input a directory: &quot; dir \\nif [ &quot;$dir&quot; == &quot;&quot; -o ! -d &quot;$dir&quot; ]; then \\n  echo &quot;The $dir is NOT exist in your system.&quot; \\n  exit 1 \\nfi \\n \\n# 2. 开始测试档案啰～ \\nfilelist=$(ls $dir)        # 列出所有在该目录下的文件名 \\nfor filename in $filelist \\ndo \\n  perm=&quot;&quot; \\n  test -r &quot;$dir/$filename&quot; &amp;&amp; perm=&quot;$perm readable&quot; \\n  test -w &quot;$dir/$filename&quot; &amp;&amp; perm=&quot;$perm writable&quot; \\n  test -x &quot;$dir/$filename&quot; &amp;&amp; perm=&quot;$perm executable&quot; \\n  echo &quot;The file $dir/$filename&#39;s permission is $perm &quot; \\ndone \\n\\n##########################################\\n\\n# for ((xx; xx; xx)) do done\\n\\nfor (( i=1; i&lt;=$nu; i=i+1 )) \\ndo \\n  s=$(($s+$i)) \\ndone \\necho &quot;The result of &#39;1+2+3+...+$nu&#39; is ==&gt; $s&quot;\\n\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"debug\"\n    }}>{`debug`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\",\n        \"data-language\": \"shell\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"sh [-nvx] scripts.sh\\n\\n-n  ：不要执行 script，仅查询语法的问题； \\n-v  ：再执行 sccript 前，先将 scripts 的内容输出屏幕上； \\n-x  ：输出一行脚本, 执行这一行，debug 常用\\n\\nsh -x xx.sh\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"学习几个demo\"\n    }}>{`学习几个demo`}</h2>\n    <p>{`这是一个 Java 程序的启动脚本`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\",\n        \"data-language\": \"sh\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"#!/bin/sh\\n## java env\\nexport JAVA_HOME=/usr/local/jdk1.7.0_55\\nexport JRE_HOME=$JAVA_HOME/jre\\n\\n## exec shell name\\nEXEC_SHELL_NAME=sys-service\\\\.sh\\n## service name\\nSERVICE_NAME=zhousw-sys-service\\nSERVICE_DIR=/usr/local/workspace/sys-service\\nJAR_NAME=$SERVICE_NAME\\\\.jar\\nPID=$SERVICE_NAME\\\\.pid\\n\\ncd $SERVICE_DIR\\n\\ncase &quot;$1&quot; in\\n\\n    start)\\n        nohup $JRE_HOME/bin/java -Xms256m -Xmx512m -jar $JAR_NAME &gt;/dev/null 2&gt;&amp;1 &amp;\\n        echo $! &gt; $SERVICE_DIR/$PID\\n        echo &quot;#### start $SERVICE_NAME&quot;\\n        ;;\\n\\n    stop)\\n        kill `cat $SERVICE_DIR/$PID`\\n        rm -rf $SERVICE_DIR/$PID\\n        echo &quot;#### stop $SERVICE_NAME&quot;\\n\\n        sleep 5\\n\\n        TEMP_PID=`ps -ef | grep -w &quot;$SERVICE_NAME&quot; | grep -v &quot;grep&quot; | awk &#39;{print $2}&#39;`\\n        if [ &quot;$TEMP_PID&quot; == &quot;&quot; ]; then\\n            echo &quot;#### $SERVICE_NAME process not exists or stop success&quot;\\n        else\\n            echo &quot;#### $SERVICE_NAME process pid is:$TEMP_PID&quot;\\n            kill -9 $TEMP_PID\\n        fi\\n        ;;\\n\\n    restart)\\n        $0 stop\\n        sleep 2\\n        $0 start\\n        echo &quot;#### restart $SERVICE_NAME&quot;\\n        ;;\\n\\n    *)\\n        ## restart\\n        $0 stop\\n    sleep 2\\n        $0 start\\n        ;;\\n\\nesac\\nexit 0\\n\\n\\n\\n\"\n        }\n      }}></code></pre>\n    <h1 {...{\n      \"id\": \"帐号管理acl权限设定\"\n    }}>{`帐号管理&ACL权限设定`}</h1>\n    <h2 {...{\n      \"id\": \"user-management\"\n    }}>{`user management`}</h2>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`whoami`}</inlineCode>{` current user`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`groups`}</inlineCode>{` current user’s partners that in the same group`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`groups <user_name>`}</inlineCode>{` view someone’s partners and their group.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cat /etc/passwd`}</inlineCode>{` view user list`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cat /etc/group`}</inlineCode>{` view all group`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`useradd <option> <user_name>`}</inlineCode><ul parentName=\"li\">\n          <li parentName=\"ul\">{`options`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`-d : specify the user home dir`}</li>\n              <li parentName=\"ul\">{`-m : 如果 user home dir 不存在, 会自动创建`}</li>\n              <li parentName=\"ul\">{`-g: specify the user group`}</li>\n              <li parentName=\"ul\">{`-G: additional user group`}</li>\n              <li parentName=\"ul\">{`-s: specify the shell while user login`}</li>\n            </ul></li>\n          <li parentName=\"ul\">{`demos:`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`useradd -d /usr/sam -m sam `}</li>\n              <li parentName=\"ul\">{`useradd -s /bin/sh -g group -G adm,root gem`}</li>\n            </ul></li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`userdel -r <user_name>`}</inlineCode>{` 删除用户, 同时删除家目录`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`usermod <options> <user_name>`}</inlineCode>{`修改账号; options 类似useradd`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`passwd <options> [username]`}</inlineCode>{`  `}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`options:`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`-l: lock the password <=> forbidden account`}</li>\n              <li parentName=\"ul\">{`-u: 口令解锁`}</li>\n              <li parentName=\"ul\">{`-d: 删除口令, 使得账号无需口令即可使用`}</li>\n              <li parentName=\"ul\">{`-f: 强制用户下次登陆修改口令`}</li>\n            </ul></li>\n          <li parentName=\"ul\">{`如果不指定user, 就是修改当前用户`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`passwd <username>`}</inlineCode>{` 修改任何用户密码`}</li>\n        </ul></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"ulimit限制用户的资源\"\n    }}>{`ulimit限制用户的资源`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Screenshot_173.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`ulimit -a`}</inlineCode>{` 列出当前身份的限制数值`}</p>\n        <p parentName=\"li\"><img parentName=\"p\" {...{\n            \"src\": \"./Screenshot_174.png\",\n            \"alt\": null\n          }}></img></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`ulimit -f 10240`}</inlineCode>{` 限制只能建立10M以下的文件`}</p>\n      </li>\n    </ul>\n    <h1 {...{\n      \"id\": \"周期任务\"\n    }}>{`周期任务`}</h1>\n    <h1 {...{\n      \"id\": \"磁盘阵列和lvm文件系统\"\n    }}>{`磁盘阵列和LVM文件系统`}</h1>\n    <h1 {...{\n      \"id\": \"周期任务-1\"\n    }}>{`周期任务`}</h1>\n    <h1 {...{\n      \"id\": \"程序管理\"\n    }}>{`程序管理`}</h1>\n    <h2 {...{\n      \"id\": \"job-control背景前景\"\n    }}>{`Job control背景前景`}</h2>\n    <p>{`登入Linux, 会得到一个 bash (父程序)的 shell, 然后在bash 下执行另外的指令如 ls, passwd(子程序)`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`tar -zpcvf /tmp/etc.tar.gz /etc > /tmp/log.txt 2>&1 &`}</inlineCode>{` 在背景中备份 /etc (最后的 “&” 表示丢到背景中执行, “2>&1” 表示 错误输出写入和正确输出相同的一个文件)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`ctrl + z 暂停目前工作(并丢到背景中), 比如要暂时将 vi 给他丢到背景当中等待`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`jobs -l`}</inlineCode>{` 列出所有背景工作, 带 pid 号 ( + 代表最近被放到背景癿工作号码， - 代表最近最后第二个被放置到背景中癿工作号码。 而超过最后第三个以后癿工作，就丌会有 +/- 符号存在了)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`fg [%job_number]`}</inlineCode>{` 从背景中恢复工作; 默认取出 “+” job; `}<inlineCode parentName=\"p\">{`job -`}</inlineCode>{` 取出 “-” job`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`bg [%job_number]`}</inlineCode>{` 在背景中 从 “暂停” 到 “运行”, 相当于给命令 加了个 “&”`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`kill [-signal] <%job_number>`}</inlineCode>{` 杀掉 背景程序 (一定要加\"%\", 否则会被认为时 pid, 而不是 job number)`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`kill -l`}</inlineCode>{` 列出所有可用的 kill 讯号码(使用的时候, 用1…15的数字也可以直接使用名称, `}<inlineCode parentName=\"p\">{`man 7 signal`}</inlineCode>{`可查阅);`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`kill -9 %2`}</inlineCode>{` 强制删除 2 号 job`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`kill -15 %2`}</inlineCode>{` 正常结束 2 号 job (-15 默认值)`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`kill -1 %2`}</inlineCode>{` 重新读取参数的配置文件 类似 reload`}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`nohup [command] [&]`}</inlineCode>{` 脱机(即注销)后仍可以 前景/背景 工作 (场景: 如执行的脚本需要在登出系统后仍然可以工作)`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"程序\"\n    }}>{`程序`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`ps`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`top`}</inlineCode>{` 观察程序`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`ps -l`}</inlineCode>{` 列出自己bash下相关的程序(带 pid); `}<inlineCode parentName=\"p\">{`ps aux`}</inlineCode>{` 列出全部`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`top -d 2`}</inlineCode>{` 动态观察, 2秒更新一次top; `}<inlineCode parentName=\"p\">{`top -d 2 -p <pid>`}</inlineCode>{` 查看指定程序`}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`netstat -tlnp`}</inlineCode>{` 端口占用; `}<inlineCode parentName=\"p\">{`netstat -tnlp | grep 873`}</inlineCode>{` 查看指定端口`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`fuser`}</inlineCode>{` 通过文件找到正在使用该文件的程序`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`fuser -uv <file/dir>`}</inlineCode>{` 找到正在使用该文件/文件夹的程序`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`fuser -ki <file>`}</inlineCode>{` 查看使用该文件的程序并尝试删除该程序 `}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`lsof`}</inlineCode>{` 列出目前系统上面所有已经被开启的文件, 和 fuser 正好相反`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`lsof -u root | grep bash`}</inlineCode>{` 列出用户 root 的 bash 程序所打开的文件`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`pidof <program_name> [program_name2] ...`}</inlineCode>{` 查找 pid  `}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"安装卸载\"\n    }}>{`安装卸载`}</h2>\n    <h3 {...{\n      \"id\": \"原始码-tarball\"\n    }}>{`原始码-tarball`}</h3>\n    <p>{`tarball 是将原始码打包压缩后的文件, 使得软件便于传输. 后缀为 `}<inlineCode parentName=\"p\">{`*.tar.gz`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`*.tgz`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`*tar.bz2`}</inlineCode></p>\n    <h4 {...{\n      \"id\": \"一般的安装指令\"\n    }}>{`一般的安装指令`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\",\n        \"data-language\": \"sh\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"# 首先将 tarball 解压到 /usr/local/src 下\\n\\n# 创建 makefile\\n./configure\\n\\n# clean\\nmake clean\\n\\n# 编译\\nmake [main]\\n\\n# 安装, 一般是安装在 /usr/local 下\\nmake install\\n\\n\"\n        }\n      }}></code></pre>\n    <h4 {...{\n      \"id\": \"c文件编译运行\"\n    }}>{`c文件编译运行`}</h4>\n    <p>{`原始码: (c实现)`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\",\n        \"data-language\": \"c\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token macro property\\\">#<span class=\\\"token directive keyword\\\">include</span> <span class=\\\"token string\\\">&lt;stdio.h></span></span><span class=\\\"token comment\\\">// 从文件 stdio.h 中读入数据, 比如 printf的定义</span>\\n            <span class=\\\"token comment\\\">// 默认位置在 /usr/include</span>\\n            <span class=\\\"token comment\\\">// 若不是在默认位置 , 编译时要制定 include 目录: gcc &lt;target_file> [-I&lt;include_path>]</span>\\n<span class=\\\"token keyword\\\">int</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Hello world.\\\\n\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n\"\n        }\n      }}></code></pre>\n    <p>{`编译`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\",\n        \"data-language\": \"sh\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"gcc hello.c # 默认输出 a.out (目标文件 Object file) - 一般不使用\\n\\ngcc -c hello.c # 输出 hello.o (目标文件)  - 可能有多个\\ngcc -O -c &lt;target_file&gt; # 优化编译速度\\ngcc -Wall -c &lt;target_file&gt; #显示编译详细信息\\n\\ngcc -o hello hell.o # 输出 hello (可执行文件) - 仅仅一个\\n\\n# 编译时加入外部函数库, 比如在源码中使用了外部函数\\ngcc &lt;target_file&gt; -lm [-L&lt;lib_path&gt; [-L&lt;lib_path_2&gt;]]\\n    # -l 表示加入某个函数库 ; m 表示 libm.so 这个函数库 (lib 和 后缀 .so 省略了)\\n    # -L 表示 函数库路径, 可以有多个, 省略了就使用默认路径(/lib 或 /usr/lib)\\n\\n\"\n        }\n      }}></code></pre>\n    <p>{`为什么要先 制作 Object file , 进而制作成 可执行文件? - Object file 可能有多个 , 而我们的最终目标是只生成一个执行文件`}</p>\n    <h4 {...{\n      \"id\": \"使用-make-简化编译\"\n    }}>{`使用 make 简化编译`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`简化编译命令`}</li>\n      <li parentName=\"ul\">{`增量编译 - 仅仅会重新编译修改过的源文件`}</li>\n    </ul>\n    <p>{`makefile:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-makefile\",\n        \"data-language\": \"makefile\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"LIBS <span class=\\\"token operator\\\">=</span> -lm\\nOBJS <span class=\\\"token operator\\\">=</span> hello.o sin.o\\nBASE_LIB_PATH <span class=\\\"token operator\\\">=</span> -L/lib -L/usr/lib\\nCFLAGS <span class=\\\"token operator\\\">=</span> -Wall <span class=\\\"token comment\\\"># 环境变量; gcc 在编译时始终会使用这个参数</span>\\n        <span class=\\\"token comment\\\"># 优先级: make后跟的 > makefile文件内部指定的(也即是这里的) > shell指定的</span>\\n<span class=\\\"token comment\\\"># $@ 代表当前的 target , 即 main </span>\\n<span class=\\\"token symbol\\\">main</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token variable\\\">$</span><span class=\\\"token punctuation\\\">{</span>OBJS<span class=\\\"token punctuation\\\">}</span>\\n        gcc -o main <span class=\\\"token variable\\\">$</span><span class=\\\"token punctuation\\\">{</span>OBJS<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token variable\\\">$</span><span class=\\\"token punctuation\\\">{</span>LIBS<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token variable\\\">$</span><span class=\\\"token punctuation\\\">{</span>BASE_LIB_PATH<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token symbol\\\">clean</span><span class=\\\"token punctuation\\\">:</span>\\n        rm -f main <span class=\\\"token variable\\\">$</span><span class=\\\"token punctuation\\\">{</span>OBJS<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`使用 - `}<inlineCode parentName=\"p\">{`make main`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`make clean main`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"包管理软件-rpm和srmp和-yum\"\n    }}>{`包管理软件-rpm和srmp和 yum`}</h3>\n    <p>{`两大主流: `}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`rmp(centos, fedora, suse) - rmp则分别有: yum(red hat系), you(suse)等等`}</p>\n        <p parentName=\"li\">{`  rmp和srpm(source rpm)区别: rmp输出的软件包不够自由, 在不同版本的系统上可能无法安装; srpm输出的软件包为源码, 但和tarball有区别, 它包含一份配置文件,包含相关软件依赖, 可修改, 之后再编译为rpm包, 比之tarball又先进, 比之rpm灵活`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`dpkg(debian, ubuntu) - apt-get/apt 是在dpkg上开发而来`}</p>\n      </li>\n    </ul>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Snipaste_2018-04-16_12-13-58.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Snipaste_2018-04-16_12-22-24.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`rpm和srpm两者包格式:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Snipaste_2018-04-16_12-25-31.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Snipaste_2018-04-16_12-27-08.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`rpm都是编译好的包, 可以直接安装, 但是如果软件安装有软件依赖问题时就无法安装了, yum很好的解决了这个问题(最终还是需要调用rpm)`}</p>\n    <h4 {...{\n      \"id\": \"rpm\"\n    }}>{`rpm`}</h4>\n    <h5 {...{\n      \"id\": \"rpm安装软件\"\n    }}>{`rpm安装软件`}</h5>\n    <p>{`安装信息写在  /var/lib/rpm/  下的数据库文件中`}</p>\n    <p>{`那么软件具体被安装在哪儿呢?`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Snipaste_2018-04-16_13-24-51.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Snipaste_2018-04-16_13-26-17.png\",\n        \"alt\": null\n      }}></img></p>\n    <p><inlineCode parentName=\"p\">{` rpm -ivh package_name`}</inlineCode>{` rpm安装(可以接多个软件包, 可以接网址)`}</p>\n    <h5 {...{\n      \"id\": \"rpm更新软件\"\n    }}>{`rpm更新软件`}</h5>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Snipaste_2018-04-16_13-32-08.png\",\n        \"alt\": null\n      }}></img></p>\n    <h5 {...{\n      \"id\": \"rpm查询软件\"\n    }}>{`rpm查询软件`}</h5>\n    <p>{`查询数据来源于 /var/lib/rpm/下的数据库文档`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Snipaste_2018-04-16_13-35-02.png\",\n        \"alt\": null\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`rpm -q logrotate`}</inlineCode>{` 查看是否安装指定软件(无需版本号)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`rpm -ql logrotate`}</inlineCode>{` 列出指定软件相关的文件和目录`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{` rpm -qi logrotate`}</inlineCode>{` 查看指定软件详细信息`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`rpm -qc logrotate`}</inlineCode>{`仅仅列出知道指定软件的配置文件`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`rpm -qd logrotate`}</inlineCode>{`仅仅列出知道指定软件的说明文档`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`rpm -qR logrotate `}</inlineCode>{` 查看安装指定软件需要的依赖软件`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`rpm -qf /bin/sh `}</inlineCode>{` 找到指定文件的所属软件`}</li>\n    </ul>\n    <h5 {...{\n      \"id\": \"rpm验证和数字签名\"\n    }}>{`rpm验证和数字签名`}</h5>\n    <h5 {...{\n      \"id\": \"rpm软件卸载和重建数据库\"\n    }}>{`rpm软件卸载和重建数据库`}</h5>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Snipaste_2018-04-16_13-49-18.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Snipaste_2018-04-16_13-49-47.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`卸载后需要重建一下软件数据库  `}<inlineCode parentName=\"p\">{`rpm --rebuilddb`}</inlineCode>{`   <==重建数据库 `}</p>\n    <h4 {...{\n      \"id\": \"srpm\"\n    }}>{`srpm`}</h4>\n    <p><inlineCode parentName=\"p\">{`rpmbuild`}</inlineCode></p>\n    <p>{`采用默认值`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Snipaste_2018-04-16_13-52-08.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`相关目录: 在 `}<inlineCode parentName=\"p\">{`usr/src`}</inlineCode>{`下的目录`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Snipaste_2018-04-16_13-55-23.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./Snipaste_2018-04-16_13-55-47.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`如果编译正常, 以上几个目录中的文件会在安装好后被删掉, 如果在编译中有错误, 会在/tmp下生成错误文档`}</p>\n    <p>{`配置文件: *.spec`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./Snipaste_2018-04-16_14-27-07.png\",\n        \"alt\": null\n      }}></img></p>\n    <p><inlineCode parentName=\"p\">{` rpm -i rp-pppoe-3.5-32.1.src.rpm`}</inlineCode>{` 仅仅解开软件包,放入某个目录/usr/src/redhat`}</p>\n    <h3 {...{\n      \"id\": \"apt和apt-get\"\n    }}>{`apt和apt-get`}</h3>\n    <p>{`apt 和 apt-get 是从 dpkg 开发而来的 包管理工具, 使用它的Linux发行版有 Ubuntu, debian; apt 命令更少更易用， 但是有的apt-get命令还不支持, 暂时可用apt-get;`}</p>\n    <p>{`yum 是 rpm 上开发而来的, centos 上用;`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\",\n        \"data-language\": \"sh\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"\\napt-get remove &lt;package name&gt; # 删除已安装的软件包（保留配置文件）。 \\napt-get –purge remove &lt;package name&gt; # 删除已安装包，同时删除配置文件。\\napt-get autoremove # 删除为了满足其他软件包的依赖而安装的，系统会自动卸载这些不再需要的软件包\\napt-get clean # 删除无用的安装文件\\n\\n\"\n        }\n      }}></code></pre>\n    <h1 {...{\n      \"id\": \"selinux\"\n    }}>{`SELinux`}</h1>\n    <h1 {...{\n      \"id\": \"系统服务daemons\"\n    }}>{`系统服务daemons`}</h1>\n    <h2 {...{\n      \"id\": \"daemons是什么\"\n    }}>{`daemons是什么`}</h2>\n    <p>{`一类可以独立启动, 一旦启动就一直占用内存, 不会自动关闭: 如WWW 的 daemon (httpd)、FTP 的 daemon (vsftpd).`}</p>\n    <p>{`一类需要一个 super daemon ( xinetd) 来统一管理启动, 有 client 请求, 则唤起, 请求结束后则关闭释放资源: 如 telnet`}</p>\n    <p>{`通常在服务的名称后会加上一个 d`}</p>\n    <h2 {...{\n      \"id\": \"daemons相关的文件脚本\"\n    }}>{`daemons相关的文件脚本`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`cat /etc/services`}</inlineCode>{` - 查看daemon和端口号映射;  `}<inlineCode parentName=\"p\">{` grep 'rsync' /etc/services`}</inlineCode>{`  查看指定程序的端口映射`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`/etc/init.d/*`}</inlineCode>{` - 启动脚本放在这里`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`/etc/sysconfig/*`}</inlineCode>{` - 各个服务的初始化环境配置文件`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`/etc/xinetd.conf`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`/etc/xinetd.d/*`}</inlineCode>{` ：super daemon 配置文件和下属 daemon配置文件`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`/var/lib/*`}</inlineCode>{` ：各服务产生的数据库 `}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`/var/run/*`}</inlineCode>{` ：各服务的程序 PID 记录处 `}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"怎么启动\"\n    }}>{`怎么启动`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`stand alone(独立启动) 类型的 daemon启动`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`方式1: 进入 `}<inlineCode parentName=\"p\">{`/etc/init.d/*`}</inlineCode>{`, 通过这里的脚本启动`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`方式2: `}<inlineCode parentName=\"p\">{`service <name> <params>`}</inlineCode></p>\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">\n                <p parentName=\"li\"><inlineCode parentName=\"p\">{`service crond restart `}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`/etc/init.d/crond restart `}</inlineCode>{` 重新启动 crond 这支 daemon`}</p>\n              </li>\n              <li parentName=\"ul\">\n                <p parentName=\"li\"><inlineCode parentName=\"p\">{`service --status-all`}</inlineCode>{` 目前系统上面所有服务的运作状态`}</p>\n              </li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`super daemon 类型 的启动: 修改 `}<inlineCode parentName=\"p\">{`/etc/xinetd.d/*`}</inlineCode>{` 下的配置文件`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`grep -i 'disable' /etc/xinetd.d/*`}</inlineCode>{` 查看 super daemon 管理 的 服务是否启动`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`如果需要启动 某个服务, 先修改 /etc/xinetd.d/ 底下的配置文件，然后再重新启动 xinetd 这个 super daemon 即可`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-sh\",\n                \"data-language\": \"sh\",\n                \"data-highlighted-line-numbers\": \"\",\n                \"dangerouslySetInnerHTML\": {\n                  \"__html\": \"#  先修改配置文件成为启动的模样 ( disable = no )\\n vim /etc/xinetd.d/rsync \\n #  重新启动 xinetd 这个服务\\n /etc/init.d/xinetd restart \\n\"\n                }\n              }}></code></pre>\n            <p parentName=\"li\">{`使用 chkconfig 更方便, 不用去编辑配置文件`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-sh\",\n                \"data-language\": \"sh\",\n                \"data-highlighted-line-numbers\": \"\",\n                \"dangerouslySetInnerHTML\": {\n                  \"__html\": \"# 范例五：查阅 rsync 是否启动，若要将其关闭该如何处理？ \\n[root@www ~] /etc/init.d/rsync status \\n-bash: /etc/init.d/rsync: No such file or directory \\n# rsync 是 super daemon 管理的，所以当然可以使用 stand alone 的启动方式来观察 \\n\\n[root@www ~] netstat -tlup | grep rsync \\ntcp  0 0 192.168.201.110:rsync  *:*     LISTEN     4618/xinetd \\ntcp  0 0 www.vbird.tsai:rsync   *:*     LISTEN     4618/xinetd \\n\\n[root@www ~] chkconfig --list rsync \\nrsync           on   &lt;==预讴启动, 现在将它处理成预设不启动吧 \\n\\n[root@www ~] chkconfig rsync off; chkconfig --list rsync \\nrsync           off  &lt;==看吧！关闭了喔！现在来处理一下 super daemon 的东\\n东！ \\n\\n[root@www ~] /etc/init.d/xinetd restart; netstat -tlup | grep rsync \\n\"\n                }\n              }}></code></pre>\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"设定开机启动\"\n    }}>{`设定开机启动`}</h2>\n    <p>{`登陆系统, 可以有不同的模式,  成为 “run level” , 具备 x 窗口接口的时 run level 5, 纯文本接口时 run level 3`}</p>\n    <p>{`使用 `}<inlineCode parentName=\"p\">{`chkconfig`}</inlineCode>{` 管理服务是否默认开机启动`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`chkconfig --list |more`}</inlineCode>{` - 列出目前系统上面所有被 chkconfig 管理的服务`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`chkconfig --list | grep '3:on'`}</inlineCode>{` 显示出目前在 run level 3 为启动的服务`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`chkconfig --level 345 atd on `}</inlineCode>{` ：让 atd 这个服务在 run level 为 3, 4, 5 时启动; `}<inlineCode parentName=\"p\">{`chkconfig rsync off/on`}</inlineCode>{` 一般用这种简单的设置方法`}</p>\n      </li>\n    </ul>\n    <h1 {...{\n      \"id\": \"操作记录\"\n    }}>{`操作记录`}</h1>\n    <h2 {...{\n      \"id\": \"安装c编译环境gcc\"\n    }}>{`安装c编译环境gcc`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://blog.csdn.net/AnneQiQi/article/details/51725658\"\n      }}>{`https://blog.csdn.net/AnneQiQi/article/details/51725658`}</a></p>\n    <p>{`如果需要提示编辑 sources.list 需要切换为 root 再修改, 必须把 deb-src 取消注释`}</p>\n    <h2 {...{\n      \"id\": \"安装nodejs\"\n    }}>{`安装nodejs`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://nodejs.org/zh-cn/download/\"\n      }}>{`https://nodejs.org/zh-cn/download/`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://blog.csdn.net/ziyetian666/article/details/79737541\"\n      }}>{`https://blog.csdn.net/ziyetian666/article/details/79737541`}</a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://blog.csdn.net/cckavin/article/details/85088670\"\n      }}>{`https://blog.csdn.net/cckavin/article/details/85088670`}</a></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\",\n        \"data-language\": \"sh\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"su root\\nmkdir /opt/node.js\\ncd /opt/node.js\\nwget &lt;url&gt;\\ntar -zxv xxx\\ncd xxx\\n./configure\\nmake clean\\nmake\\nmake install\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"jdk环境\"\n    }}>{`jdk环境`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.digitalocean.com/community/tutorials/how-to-install-java-with-apt-get-on-ubuntu-16-04\"\n      }}>{`https://www.digitalocean.com/community/tutorials/how-to-install-java-with-apt-get-on-ubuntu-16–04`}</a></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\",\n        \"data-language\": \"sh\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"\\n# 首先添加 Oracle ppa(源), 然后update\\n\\nsudo add-apt-repository ppa:webupd8team/java\\nsudo apt-get update\\n\\n# jdk8\\nsudo apt-get install oracle-java8-installer\\n\\n# 如果有多个jdk版本, 如何管理\\nsudo update-alternatives --config java\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"maven环境\"\n    }}>{`maven环境`}</h2>\n    <p>{`ref: `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.vultr.com/docs/how-to-install-apache-maven-on-ubuntu-16-04\"\n      }}>{`https://www.vultr.com/docs/how-to-install-apache-maven-on-ubuntu-16–04`}</a></p>\n    <p>{`在之前安装了jdk的基础上`}</p>\n    <h2 {...{\n      \"id\": \"mysql环境\"\n    }}>{`mysql环境`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.cnblogs.com/565261641-fzh/p/6128377.html\"\n      }}>{`ubuntu下安装mysql及卸载mysql方法`}</a>{`\n碰到一个问题: `}<a parentName=\"p\" {...{\n        \"href\": \"https://blog.csdn.net/josenhuang/article/details/53585280\"\n      }}>{`MySQL 5.7 No directory, logging in with HOME=/`}</a>{`, 解决之后, `}<inlineCode parentName=\"p\">{`sudo mysql -uroot`}</inlineCode>{`, 空密码登陆MySQL即可`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.cnblogs.com/snoopys/p/6129068.html\"\n      }}>{`为mysql root 设置密码, &忘记密码怎么登陆`}</a></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\",\n        \"data-language\": \"sh\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"service mysql stop # 停止MySQL， 也可通过kill\\nmysqld_safe --skip-grant-tables &amp; # 忽略密码验证启动MySQL\\nmysql -u root # login to mysql\\nshow databases; # 查看数据库\\nuse mysql; # 使用 mysql 数据库\\nupdate user set password=password(&quot;root&quot;) where user=&#39;root&#39;; # update root&#39;s pwd, 实际就是更新 user表\\n\\n\\n\"\n        }\n      }}></code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"http://wiki.ubuntu.org.cn/MySQL%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97\"\n      }}>{`一份mysql user 设置指南`}</a></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\",\n        \"data-language\": \"sh\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"sudo apt-get update # 更新源\\nsudo apt-get install mysql-server mysql-client\\n\\nsudo mysql -uroot #login to mysql\\nGRANT ALL PRIVILEGES ON *.* TO root@localhost IDENTIFIED BY &quot;123456&quot;;# setting pwd for root\\n\\n\"\n        }\n      }}></code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"通用\",\n    level: 2,\n    title: \"通用\",\n    children: [\n        {\n              id: \"vim-常用快捷键\",\n              level: 3,\n              title: \"vim 常用快捷键\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"常用命令-1\",\n              level: 3,\n              title: \"常用命令\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"ubuntu下\",\n    level: 2,\n    title: \"Ubuntu下\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"系统开机过程\",\n    level: 2,\n    title: \"系统开机过程\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"硬件设备在linux中的文件名称\",\n    level: 2,\n    title: \"硬件设备在Linux中的文件名称\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"磁盘组成\",\n    level: 2,\n    title: \"磁盘组成\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"磁盘分割\",\n    level: 2,\n    title: \"磁盘分割\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"挂载mount文件系统磁盘和目录树结合\",\n    level: 2,\n    title: \"挂载(mount):文件系统(磁盘)和目录树结合\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"一份linux目录的详细说明\",\n    level: 2,\n    title: \"一份linux目录的详细说明\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"不能和分开到不同分区的目录\",\n    level: 2,\n    title: <React.Fragment>{`不能和`}{`[/]`}{`分开到不同分区的目录`}</React.Fragment>,\n    children: [\n        \n      ]\n  },\n{\n    id: \"fhs推荐的目录规范\",\n    level: 2,\n    title: \"FHS推荐的目录规范\",\n    children: [\n        {\n              id: \"的内容和意义\",\n              level: 3,\n              title: <React.Fragment>{`[/]`}{`的内容和意义`}</React.Fragment>,\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"usr的内容和意义\",\n              level: 3,\n              title: <React.Fragment>{`[/usr]`}{`的内容和意义`}</React.Fragment>,\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"var的内容和意义\",\n              level: 3,\n              title: <React.Fragment>{`[/var]`}{`的内容和意义`}</React.Fragment>,\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"命令帮助\",\n    level: 2,\n    title: \"命令帮助\",\n    children: [\n        {\n              id: \"whatis\",\n              level: 3,\n              title: \"whatis\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"info\",\n              level: 3,\n              title: \"info\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"man\",\n              level: 3,\n              title: \"man\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"which\",\n              level: 3,\n              title: \"which\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"命令行进入xwindow\",\n    level: 2,\n    title: \"命令行进入xwindow\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"命令行提示符\",\n    level: 2,\n    title: \"命令行提示符\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"指令格式\",\n    level: 2,\n    title: \"指令格式\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"跳脱enter键换行\",\n    level: 2,\n    title: \"跳脱enter键换行\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"命令行中文乱码设置语系\",\n    level: 2,\n    title: \"命令行中文乱码,设置语系\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"tab键\",\n    level: 2,\n    title: \"tab键\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"命令终止\",\n    level: 2,\n    title: \"命令终止\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"输入结束\",\n    level: 2,\n    title: \"输入结束\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"系统文档信息\",\n    level: 2,\n    title: \"系统文档,信息\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"环境变量\",\n    level: 2,\n    title: \"环境变量\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"日期时间日历计算器\",\n    level: 2,\n    title: \"日期时间日历计算器\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"快捷键\",\n    level: 2,\n    title: \"快捷键\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"常用指令示意图\",\n    level: 2,\n    title: \"常用指令示意图\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"几个常见的例子\",\n    level: 2,\n    title: \"几个常见的例子\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"暂存档和数据恢复\",\n    level: 2,\n    title: \"暂存档和数据恢复\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"区块选择\",\n    level: 2,\n    title: \"区块选择\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"多档案编辑和多窗口功能\",\n    level: 2,\n    title: \"多档案编辑和多窗口功能\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"vim环境参数设定\",\n    level: 2,\n    title: \"vim环境参数设定\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"dos和linux下的换行符\",\n    level: 2,\n    title: \"dos和linux下的换行符\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"3个身份3种权限\",\n    level: 2,\n    title: \"3个身份3种权限\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"文件的属性ls\",\n    level: 2,\n    title: \"文件的属性,ls\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"改变文件属性权限\",\n    level: 2,\n    title: \"改变文件属性&权限\",\n    children: [\n        {\n              id: \"改变群组chgrp\",\n              level: 3,\n              title: \"改变群组chgrp\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"改变拥有者chown\",\n              level: 3,\n              title: \"改变拥有者chown\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"改变权限chmod\",\n              level: 3,\n              title: \"改变权限chmod\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"文件和目录的权限区别\",\n    level: 2,\n    title: \"文件和目录的权限区别\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"文件目录的默认权限umask\",\n    level: 2,\n    title: \"文件/目录的默认权限umask\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"文件目录的隐藏属性chattr\",\n    level: 2,\n    title: \"文件/目录的隐藏属性chattr\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"文件目录的特殊权限suidsgidsbit\",\n    level: 2,\n    title: \"文件/目录的特殊权限SUID,SGID,SBIT\",\n    children: [\n        {\n              id: \"set-uid\",\n              level: 3,\n              title: \"Set Uid\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"set-gid\",\n              level: 3,\n              title: \"Set Gid\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"sticky-bit\",\n              level: 3,\n              title: \"Sticky Bit\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"几个场景对应的权限分配\",\n    level: 2,\n    title: \"几个场景对应的权限分配\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"几个场景实例\",\n    level: 2,\n    title: \"几个场景实例\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"路径问题\",\n    level: 2,\n    title: \"路径问题\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"处理目录的指令\",\n    level: 2,\n    title: \"处理目录的指令\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"文件查看复制删除移动\",\n    level: 2,\n    title: \"文件查看/复制/删除/移动\",\n    children: [\n        {\n              id: \"文件检视\",\n              level: 3,\n              title: \"文件检视\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"文件复制建立连接档快捷方式\",\n              level: 3,\n              title: \"文件复制/建立连接档(快捷方式)\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"删除文件目录\",\n              level: 3,\n              title: \"删除文件/目录\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"移动or重命名\",\n              level: 3,\n              title: \"移动or重命名\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"获取路径的文件名目录名\",\n              level: 3,\n              title: \"获取路径的文件名/目录名\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"文件内容查看\",\n    level: 2,\n    title: \"文件内容查看\",\n    children: [\n        {\n              id: \"cat和tac\",\n              level: 3,\n              title: \"cat和tac\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"nl设计行号\",\n              level: 3,\n              title: \"nl设计行号\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"翻页检视moreless\",\n              level: 3,\n              title: \"翻页检视more/less\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"行级别的数据过滤headtail\",\n              level: 3,\n              title: \"\\\"行级别\\\"的数据过滤head/tail\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"读取非文本数据od\",\n              level: 3,\n              title: \"读取非文本数据od\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"创建文件修改文件时间\",\n    level: 2,\n    title: \"创建文件/修改文件时间\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"搜寻文件和指令\",\n    level: 2,\n    title: \"搜寻文件和指令\",\n    children: [\n        {\n              id: \"whichwhereislocate\",\n              level: 3,\n              title: \"which,whereis,locate\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"find\",\n              level: 3,\n              title: \"find\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"光盘写入工具和iso文件\",\n    level: 2,\n    title: \"光盘写入工具和iso文件\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"ext2文件系统\",\n    level: 2,\n    title: \"ext2文件系统\",\n    children: [\n        {\n              id: \"inodeblocksuperblock\",\n              level: 3,\n              title: \"inode,block,superblock\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"fs格式化后的结构图\",\n              level: 3,\n              title: \"fs格式化后的结构图\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"目录文件和inodeblock关系\",\n              level: 3,\n              title: \"目录/文件和inode,block关系\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"ext2ext3文件存取和日志式文件系统\",\n    level: 2,\n    title: \"ext2/ext3文件存取和日志式文件系统\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"磁盘目录容量查看\",\n    level: 2,\n    title: \"磁盘/目录容量查看\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"实体链接和符号链接\",\n    level: 2,\n    title: \"实体链接和符号链接\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"磁盘管理fdisk\",\n    level: 2,\n    title: \"磁盘管理fdisk\",\n    children: [\n        {\n              id: \"分区删除\",\n              level: 3,\n              title: \"分区/删除\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"格式化mkfs\",\n              level: 3,\n              title: \"格式化mkfs\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"检验fschbadblocks\",\n              level: 3,\n              title: \"检验fsch,badblocks\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"挂载mountunmount\",\n              level: 3,\n              title: \"挂载mount/unmount\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"设定开机挂载\",\n              level: 3,\n              title: \"设定开机挂载\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"设定磁盘参数\",\n              level: 3,\n              title: \"设定磁盘参数\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"内存置换空间swap\",\n    level: 2,\n    title: \"内存置换空间(swap)\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"常见的压缩工具\",\n    level: 2,\n    title: \"常见的压缩工具\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"gzip和zcat\",\n    level: 2,\n    title: \"gzip和zcat\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"bzip2和bzcat\",\n    level: 2,\n    title: \"bzip2和bzcat\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"打包tar\",\n    level: 2,\n    title: \"打包tar\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"dd\",\n    level: 2,\n    title: \"dd\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"cpio\",\n    level: 2,\n    title: \"cpio\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"dump完整备份工具\",\n    level: 2,\n    title: \"dump完整备份工具\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"restore复原\",\n    level: 2,\n    title: \"restore复原\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"示例\",\n    level: 2,\n    title: \"示例\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"所有可用的shell\",\n    level: 2,\n    title: \"所有可用的shell\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"环境变量-1\",\n    level: 2,\n    title: \"环境变量\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"键盘读取read\",\n    level: 2,\n    title: \"键盘读取read\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"declaretypeset声明变量类型\",\n    level: 2,\n    title: \"declare,typeset声明变量类型\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"数组\",\n    level: 2,\n    title: \"数组\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"变量的删除取代\",\n    level: 2,\n    title: \"变量的删除取代\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"变量的测试和内容替换\",\n    level: 2,\n    title: \"变量的测试和内容替换\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"命令别名和设定\",\n    level: 2,\n    title: \"命令别名和设定\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"命令历史\",\n    level: 2,\n    title: \"命令历史\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"指令搜寻顺序\",\n    level: 2,\n    title: \"指令搜寻顺序\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"bash登录欢迎信息\",\n    level: 2,\n    title: \"bash登录欢迎信息\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"bash的环境配置文件\",\n    level: 2,\n    title: \"bash的环境配置文件\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"终端机的环境设定sttyset\",\n    level: 2,\n    title: \"终端机的环境设定stty,set\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"通配符和特殊符号\",\n    level: 2,\n    title: \"通配符和特殊符号\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"数据流重导向\",\n    level: 2,\n    title: \"数据流重导向\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"和\",\n    level: 2,\n    title: \"&&和||\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"管线命令\",\n    level: 2,\n    title: \"管线命令\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"截取命令\",\n    level: 2,\n    title: \"截取命令\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"排序sortwcuniq\",\n    level: 2,\n    title: \"排序sort,wc,uniq\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"字符转换命令\",\n    level: 2,\n    title: \"字符转换命令\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"正则表达式和语言系统有关系\",\n    level: 2,\n    title: \"正则表达式和语言系统有关系\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"正则中的特殊符号\",\n    level: 2,\n    title: \"正则中的特殊符号\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"grep进阶用法\",\n    level: 2,\n    title: \"grep进阶用法\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"延伸正则表示法\",\n    level: 2,\n    title: \"延伸正则表示法\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"sed\",\n    level: 2,\n    title: \"sed\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"awk行内格式化\",\n    level: 2,\n    title: \"awk行内格式化\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"printf格式化打印\",\n    level: 2,\n    title: \"printf格式化打印\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"文件对比工具\",\n    level: 2,\n    title: \"文件对比工具\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"各种执行方式和差异\",\n    level: 2,\n    title: \"各种执行方式和差异\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"语法\",\n    level: 2,\n    title: \"语法\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"debug\",\n    level: 2,\n    title: \"debug\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"学习几个demo\",\n    level: 2,\n    title: \"学习几个demo\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"user-management\",\n    level: 2,\n    title: \"user management\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"ulimit限制用户的资源\",\n    level: 2,\n    title: \"ulimit限制用户的资源\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"job-control背景前景\",\n    level: 2,\n    title: \"Job control背景前景\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"程序\",\n    level: 2,\n    title: \"程序\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"安装卸载\",\n    level: 2,\n    title: \"安装卸载\",\n    children: [\n        {\n              id: \"原始码-tarball\",\n              level: 3,\n              title: \"原始码-tarball\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"包管理软件-rpm和srmp和-yum\",\n              level: 3,\n              title: \"包管理软件-rpm和srmp和 yum\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"apt和apt-get\",\n              level: 3,\n              title: \"apt和apt-get\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"daemons是什么\",\n    level: 2,\n    title: \"daemons是什么\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"daemons相关的文件脚本\",\n    level: 2,\n    title: \"daemons相关的文件脚本\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"怎么启动\",\n    level: 2,\n    title: \"怎么启动\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"设定开机启动\",\n    level: 2,\n    title: \"设定开机启动\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"安装c编译环境gcc\",\n    level: 2,\n    title: \"安装c编译环境gcc\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"安装nodejs\",\n    level: 2,\n    title: \"安装nodejs\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"jdk环境\",\n    level: 2,\n    title: \"jdk环境\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"maven环境\",\n    level: 2,\n    title: \"maven环境\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"mysql环境\",\n    level: 2,\n    title: \"mysql环境\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {\n  \"title\": \"Linux Note\",\n  \"tags\": [\n    \"linux\"\n  ],\n  \"categories\": \"tech\",\n  \"date\": \"2014-03-18T15:04:50.000Z\"\n}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"4 min read\",\"minutes\":3.085,\"time\":185100,\"words\":617}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <div align=\"center\">\n数据库设计, 表设计培训相关笔记整理\n[数据库Sharding的基本思想和切分策略](https://blog.csdn.net/bluishglc/article/details/6161475)\n    </div>\n    {\n      /*more*/\n    }\n    <h1 {...{\n      \"id\": \"powerdsinger\"\n    }}>{`PowerDsinger`}</h1>\n    <p>{`##使用过程应该是这样:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`首先出CDM（Concept Data Model，概念数据模型）`}</li>\n      <li parentName=\"ol\">{`根据实际的数据库类型, 由CMD导出PDM(Physical Data Model，物理数据模型)`}</li>\n      <li parentName=\"ol\">{`将PDM导入数据库`}</li>\n      <li parentName=\"ol\">{`导出对应数据库文档供开发者使用`}</li>\n    </ol>\n    <p>{`在CDM设计过程中, 只做最基础的工作, 在转换到pdm时能交给pd处理的东西(约束/关系/主外键等等)就不要管了, pd处理不了的才手动处理 ,这样设计工作会更高效省时，最终的设计成果也会更规范。 `}</p>\n    <h2 {...{\n      \"id\": \"设计发生变动怎么修改\"\n    }}>{`设计发生变动怎么修改?`}</h2>\n    <p>{`开发中可能由于初始设计失误, 表结构, 字段需要修改, 分2种情况`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`大改(这种情况不应该出现), 比如因为业务变动表和表的引用关系变化`}</p>\n        <p parentName=\"li\">{`推荐在PD中修改PDM，然后重新生成SQL脚本在数据库中执行.(当然表没有变化的sql就无需执行了)`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`小改(比如有新增业务的情况要新建些表，有拿掉部分业务的情况可能会删除些表，还有更常出现的是增删改部分表的部分字段。)`}</p>\n        <p parentName=\"li\">{`对于简单的增删改些字段或业务变动不大的情况，建议直接在数据库中对表进行修改, 然后通过pd菜单中的Database—> Update Model from Database 连接数据库逆向更新PDM, 使PDM和最新的数据库结构保持一致，而后再生成最新的数据库文档`}</p>\n        <p parentName=\"li\">{`注: 使用逆向更新时, 数据库删除字段不会被更新到pdm, 新增/修改的字段才会被更新到pdm.`}</p>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"pd中1n和0n的问题\"\n    }}>{`PD中1:n和0:n的问题`}</h2>\n    <p>{`PD中对关系的定义很详细, 比如`}</p>\n    <ul>\n      <li parentName=\"ul\">{`one to one——- pd分了2种, must have one and only one(a有且仅有一个b与之对应)和may have at most one(a可能对1个b或0个b)`}</li>\n      <li parentName=\"ul\">{`one to many ——must have one or more(有1个或多个对应) 和 may have one or more(可能有1个或多个或0个对应)`}</li>\n      <li parentName=\"ul\">{`many to many——需要借助中间表实现, 分解成2个one to many, 类似可以分成严格多对多(eg: 1个user至少有1个role, 1个role至少属于一个user)和模糊多对多(一个user可以没有role, 一个role也可以不属于任何人)`}</li>\n    </ul>\n    <p>{`其实对one-to-many和many-to-many进行细化意义不大, 因为无论是否细化, 前者都需要进行主外键关联, 后者都需要关系中间表, 而对于one to one的细化则有意义, 如订单和取消原因(可以是1:1或1:0), 如果是严格的一对一, 取消原因可以整合到订单表而无需另外存储.`}</p>\n    <h1 {...{\n      \"id\": \"表设计原则\"\n    }}>{`表设计原则`}</h1>\n    <h2 {...{\n      \"id\": \"数据编码\"\n    }}>{`数据编码`}</h2>\n    <p>{`MySQL数据库编码设置为utf8(cmd中显示latin1)， SQLServer、Oralce可先采用默认设置`}</p>\n    <p>{`如果字段允许存储表情，则一定不能使用utf8，而是使用utf8mb4。`}</p>\n    <p>{`编码问题设置不妥当，数据库导入导出备份很容易出现乱码`}</p>\n    <h2 {...{\n      \"id\": \"数据库引擎\"\n    }}>{`数据库引擎`}</h2>\n    <p>{`关于InnoDB和MyISAM引擎:\n区别在于MyISAM类型不支持事务处理等高级处理，而InnoDB类型支持, MyISAM类型的表强调的是性能，其执行数度比InnoDB类型更快,但是不提供事务支持，而InnoDB提供事务支持及外部键等高级数据库功能(一般推荐InnoDB,数据库默认安装的也是InnoDB类型)`}</p>\n    <h2 {...{\n      \"id\": \"容忍度高\"\n    }}>{`容忍度高`}</h2>\n    <p>{`如表的某个字段表示时间, 尽量设为datetime类型精确到时分秒而不要仅仅date类型, 即使当前业务只需要精确到\"日时\", 这是为了方便后续拓展(比如后面有业务要求这个字段精确到\"秒\")`}</p>\n    <p>{`如对于某个业务, 开发时关系尚不明确表关系, 能一对多就不要一对一，能多对多就不要一对多, 这样开发的复杂度会增加，却消除了后面可能的修改扩展的隐患`}</p>\n    <h2 {...{\n      \"id\": \"数据库设计范式\"\n    }}>{`数据库设计范式`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`字段不可再分`}</li>\n      <li parentName=\"ol\">{`要有主键, 其他字段完全依赖此主键`}</li>\n      <li parentName=\"ol\">{`非主键字段必须互不依赖`}</li>\n      <li parentName=\"ol\">{`(消除数据冗余)`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"数据库禁用高级功能\"\n    }}>{`数据库禁用高级功能`}</h2>\n    <p>{`禁止使用存储过程、触发器、函数、视图、事件等高级功能,数据库中只有表，数据库只做数据存储、标明业务关系,而具体业务逻辑相关的处理均由程序实现，比如分页、日志记录等等;这是为了增加后续的可维护性.`}</p>\n    <h2 {...{\n      \"id\": \"禁用子查询，限制多表连接查询\"\n    }}>{`禁用子查询，限制多表连接查询`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`禁止使用子查询，子查询转换成关联查询。 ref: `}<a parentName=\"p\" {...{\n            \"href\": \"https://blog.csdn.net/qq_38173850/article/details/71680763\"\n          }}>{`子查询`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`允许三张表以内的连接查询， 超过五张的禁止。`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`那么如何尽量避免多表连接查询? `}<inlineCode parentName=\"p\">{`需要有一定的数据冗余`}</inlineCode>{`; 如: 从表中除了有引用主表主键的外键字段外，还要有一个或多个字段存放主表中的关键信息, 需要注意的是, 这几个冗余的字段一定要慎重决定, 因为冗余字段会增加维护难度 `}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`eg：类似情况经常出现在字典相关信息的存取中, 一般只在业务表中存储字典编码, 展示时根据编码获取字典文本, 核心业务表的字典字段比较多, 可以考虑同时存储字典编码和字典文本以避免部分连接查询`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`很难找到一种两全其美的办法，既能避免数据冗余，又能让程序在执行读和写动作时都方便高效, 使用这种设计原则怎样找到平衡呢? 通常, 是在数据的准确性允许，跨表查询又复杂（从表外键较多）的业务模块,采用 外键 + 冗余字段；而在对数据显示的同步性、准确性有严格要求，跨表查询也相对容易（从表外键较少）的业务模块,不设外键以外的附加字段、而使用关联查询的方式获取完整数据信息 `}</p>\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"uuid主键-不要外键\"\n    }}>{`uuid主键, 不要外键`}</h2>\n    <p>{`主键为UUID，统一命名为id，统一为char(32)类型。`}</p>\n    <p>{`是否使用自增主键需要权衡\n相较于自增主键类型，使用UUID会导致查询速度稍慢，可用自增主键的话，想要同时支持多数据库就比较麻烦了，备份合并不同数据库中相同表数据也会出现冲突`}</p>\n    <p>{`业务表之间实现外键关联有两个方法, 一是直接通过数据库设置, 二是在app 的应用层管理相关的外键逻辑; `}</p>\n    <p>{`那么如何决定采用哪种方式? 可以根据如下几条原则:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`用户量大，并发度高的场景, 不适合通过数据库设置外键, 而适合通过app应用层管理外键关系. 因为此时数据库服务器很容易成为性能瓶颈，尤其受IO能力限制，且不能轻易地水平扩展, 若是把数据一致性的控制放到事务中(也即让应用服务器承担此部分的压力), 可以实现轻松的水平伸缩.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`用户量少, db数据量不大, 此时可以使用数据库建立外键, 因为此时数据库服务器的性能不是问题, 通过此种方式, 可以直接通过数据库实现表与关联表之间的数据一致性和更新, 而不必通过编码实现`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`使用外键与否，看你使用的框架是否有足够的事务管理能力, 如果足够，那么应该尽量避免设置外键, 因为app server 比 db server 便宜，而且拓展容易`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"逻辑删除or物理删除\"\n    }}>{`逻辑删除or物理删除`}</h2>\n    <p>{`如果平时做好数据备份工作，还是可以使用物理删除的; 但是软件复杂到一定程度为了保证数据安全和完整性使用逻辑删除是必然的`}</p>\n    <p>{`但是 逻辑删除坏处:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`程序编写带来许多麻烦, 如 所有的查询方法都需要额外加上is_active=’0’的判断条件`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`如果某字段要求唯一, 且有唯一约束(如用户表中的登录名字段), 设置为逻辑删除的话, 一旦有新的同名记录, 会无法插入; 也许你会说撤销唯一性约束不久行了吗, 如果撤销唯一性约束, 每次插入都要立即查询一次是否有未删除的同名记录在， 得不偿失`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`会有大量无效数据产生, 如何处理这些逻辑删除的数据? 定期将逻辑删除的数据转移到另外的表中, 使用脚本定期彻底删除逻辑删除的数据，如何叠加备份这些删除的数据？又是个问题`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"字段设置tips\"\n    }}>{`字段设置tips`}</h2>\n    <p>{`数据库字段类型如下: 字符、数字、日期、二进制`}</p>\n    <p><inlineCode parentName=\"p\">{`https://user-images.githubusercontent.com/19821471/70438035-e6ba3b00-1ac7-11ea-9013-d80a5c3a9fcc.png`}</inlineCode></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`表中应该尽可能避免可为NULL的列，且尽可能显示设置默认值，尤其是被索引的列。`}</p>\n        <p parentName=\"li\">{`  因为在MySQL数据库中，空值是不占用空间的，而NULL其实是占用空间的, 而且, MySQL表的列中包含NULL的话，该列就不会包含在索引中，也就是说使用索引是无效的, 当然如果业务有需求表示\"未初始化\", 还是可以有null的`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`除了 timestamp、datetime等字段, 应尽量设置默认值, 对用实体类中的属性也要设置默认值`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`如果一张表有些字段并不是必须的, 可分流到子表中存储, 这样可以避免很多可为NULL或空值的列, 但也要合理取舍, 因为这样会使得记录的维护变得麻烦.(订单（会诊单）这种表，取消、退回、安排这些字段的信息都不是必须有的，可以分流到子表中存储,不要让某张表过分臃肿)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`text, blob字段: 除非要保存文章内容， text字段尽量少用，如果要用能拆到冗余表中最好;对于图片、文档等附件数据库中只保留原始文件名和存储路径;禁止使用blob类型保存大文本、附件、图片等`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`对于 int 类型。`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`整数类型有可选的 `}<strong parentName=\"p\">{`UNSIGNED `}</strong>{` 属性，表示不允许负值，这大致可以使正数的上限提高一倍`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`INT(11), 对大多数应用这是没有意义的：它不会限制值的合法范围, 只是规定了查询工具 显示字符的个数`}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`对于小数, 禁止使用float、double类型，建议使用decimal替代, 对应于Oracle的number 类型; decimal(a,b)表示数字整数部分和小数部分共a位, 其中小数部分b位, a最大38, b默认是0(比如decimal(5,2)规定了存储的值将不会超过5位数字，并且小数点后面有2位数字。)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`节省空间的设计`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`能用int类型的就不用char类型，能用char类型就不用varchar类型，能用varchar(20)的就不用varchar(25),主键要求用UUID，那就统一为char(32) `}</p>\n            <p parentName=\"li\">{`  VARCHAR(5)和VARCHAR(200)存储’hello’的空间开销是一样的, 但是 内存开销不是一样的, 更长的列会消耗更多的内存`}</p>\n            <p parentName=\"li\">{`  (varchar类型虽然根据实际长度进行存储，但内存分配则是根据指定长度，不合理的长度设计会导致内存的不合理占用。)`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`字段定义的长度对索引也有较大影响, MySQL数据库索引存储的长度都是定义的长度，不是实际字符的长度, 所以MySQL在索引上会浪费大量的空间保存字符串。`}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`字段的通用设计`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`日期时间类字段: 推荐datetime, 即使是生日这种只存储到年月日的也推荐使用datetime而非date, 为的是使得颗粒度最小, 方便拓展`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`保存手机号的字段，用varchar(20)就已经足够了`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`保存Boolean类型，使用tinyint就够了，而不需要设计为int`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`网络ip字段: 推荐varchar`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`备注字段： 推荐所有表都保留这个字段, 为前端展示预留拓展空间, varchar(200) 100个中文字符`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`排序字段: 推荐小数相关类型, 如decimal, 方便修改排序, 中间插入等等`}</p>\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"通用表处理\"\n    }}>{`通用表处理`}</h2>\n    <p>{`数据字典表: 通用的如下\n`}<img parentName=\"p\" {...{\n        \"src\": \"%E8%A1%A8%E8%AE%BE%E8%AE%A1%E7%AC%94%E8%AE%B0/Screenshot_2.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`系统日志表: 一部分是系统登录日志，一部分是用户操作日志，一部分是运行异常日志(这部分可存储在文件中)\n`}<img parentName=\"p\" {...{\n        \"src\": \"%E8%A1%A8%E8%AE%BE%E8%AE%A1%E7%AC%94%E8%AE%B0/Screenshot_3.png\",\n        \"alt\": null\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"%E8%A1%A8%E8%AE%BE%E8%AE%A1%E7%AC%94%E8%AE%B0/Screenshot_4.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`如果日志表设计合理, 传统的设计中每个表的`}<inlineCode parentName=\"p\">{`create_time、create_user、update_time、update_user`}</inlineCode>{`字段均可以去掉(核心业务表还是需要)`}</p>\n    <p>{`程序实现中有几个问题注意: `}</p>\n    <ul>\n      <li parentName=\"ul\">{`登录日志中的登出时间的计算`}</li>\n      <li parentName=\"ul\">{`非登录用户的查询记录不必记录, 只记录`}<inlineCode parentName=\"li\">{`搜索记录`}</inlineCode></li>\n    </ul>\n    <p>{`权限表: 由高到底大致分这几个级别：系统级、模块级、菜单级、页面级、控件级、数据级。`}</p>\n    <h2 {...{\n      \"id\": \"索引添加原则\"\n    }}>{`索引添加原则`}</h2>\n    <p>{`索引是一个单独的、物理的数据库结构，它是某个表中一列或若干列值的集合和相应的指向表中物理标识这些值的数据页的逻辑指针清单`}</p>\n    <p>{`对于Oracle来讲，百万级数据量一般不会出现明显性能问题的，无需做特别的优化；MySQL的话，超过五十万条数据就有点卡了，超过一百万就得做优化了。对于诸多中小型的企业内部应用系统，如果数据量未达到这个级别而出现查询性能问题的，多是因为程序或者开发模式、架构、框架、编码细节或SQL语句中肯定有特别不合理的地方, 小型项目不推荐手动添加索引, 而且大多数数据库是会自动给主键和有唯一约束的字段添加索引的。`}</p>\n    <p>{`如果确定需要添加索引, 需遵循如下原则: `}</p>\n    <ul>\n      <li parentName=\"ul\">{`除了主键, 外键也需要创建索引`}</li>\n      <li parentName=\"ul\">{`经常进行连接的列建立索引`}</li>\n      <li parentName=\"ul\">{`在频繁进行排序或分组（即进行 GROUP BY 或 ORDER BY 操作）的列上建立索引。`}</li>\n      <li parentName=\"ul\">{`不要索引blob/text 等字段，不要索引大型字段（有很多字符）, 浪费空间`}</li>\n      <li parentName=\"ul\">{`不要索引常用的小型表, 因为不划算(对这些插入和删除操作的索引维护可能比扫描表空间消耗更多的时间。)`}</li>\n      <li parentName=\"ul\">{`如果某字段经常处于sql中条件表达式中, 且值可能有很多, 则建立索引, 若可能值少(如性别字段, 只有男或女), 则不建立索引, 因为建立索引不但不会提高查询效率，反而会严重降低更新速度。`}</li>\n      <li parentName=\"ul\">{`如果待排序的列有多个，可以在这些列上建立复合索引（Compound Index）`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"并发编辑的问题\"\n    }}>{`并发编辑的问题`}</h2>\n    <p>{`唯一可以解决的方法是: 加入一个标识字段, datetime类型或数值型, 表示时间; app 在进入修改页面时, 进行一次查询, 将该对应的字段记录为time1, 编辑完成后, 点击提交按钮是再次查询该标识字段为time2, 比较time1和time2, 如果相同, 表示编辑期间, 该条记录没有并发编辑, 可以提交本次的修改, 同时该标识字段修改为time2; 如果time1和time2不同, 则表示编辑期间, 存在并发编辑, 当前修改动作作废不能提交.  `}</p>\n    <h2 {...{\n      \"id\": \"历史版本设计\"\n    }}>{`历史版本设计`}</h2>\n    <p>{`和并发编辑的解决方案类似, 加入一个版本号字段, 可以是datetime类型，也可以是int类型, 每进行数据操作时，都是创建一个新的版本，版本是只增不减的, 历史数据应该存储到另外专门存储历史的表中, 不要和最新数据混存在同一张表里`}</p>\n    <p>{`另外一种方式是: 给业务表新增一个字段, 文本类型, 专门存储历史信息`}</p>\n    <h1 {...{\n      \"id\": \"数据库分库分表\"\n    }}>{`数据库分库分表`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"http://3gods.com/database/MySQL-Sharding.html\"\n      }}>{`参考这里`}</a></p>\n    <h2 {...{\n      \"id\": \"为什么需要分库分表\"\n    }}>{`为什么需要分库分表`}</h2>\n    <p>{`刚开始我们只用单机数据库就够了，随后面对越来越多的请求，我们将数据库的写操作和读操作进行分离， 使用多个从库副本（Slaver Replication）负责读，使用主库（Master）负责写， 从库从主库同步更新数据，保持数据一致。架构上就是数据库主从同步。 从库可以水平扩展，所以更多的读请求不成问题`}</p>\n    <p>{`但是当用户量级上来后，写请求越来越多，该怎么办？加一个Master是不能解决问题的， 因为数据要保存一致性，写操作需要2个master之间同步，相当于是重复了，而且更加复杂。`}</p>\n    <p>{`这时就需要用到分库分表（sharding），对写操作进行切分; `}</p>\n    <p>{`本质还是解决数据量太大的问题, 可分为 3 个层次, 层层递进:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`用户请求量太大: 因为单服务器TPS，内存，IO都是有限的。 解决方法：分散请求到多个服务器上`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`单库太大(表太多): 单个数据库处理能力有限；单库所在服务器上磁盘空间不足；单库上操作的IO瓶颈 解决方法：切分成更多更小的库 - 垂直切分`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`单表太大: RUD都成问题；索引膨胀，查询超时 解决方法：切分成多个数据集更小的表。 - 水平切分`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"两类拆分方法\"\n    }}>{`两类拆分方法`}</h2>\n    <p>{`通常是结合使用, 示意图:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Snipaste_2018-10-19_10-04-45.png\",\n        \"alt\": \"alt\"\n      }}></img></p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Snipaste_2018-10-19_10-15-09.png\",\n        \"alt\": \"alt\"\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"垂直拆分\"\n    }}>{`垂直拆分`}</h3>\n    <h4 {...{\n      \"id\": \"针对表进行拆分\"\n    }}>{`针对表进行拆分`}</h4>\n    <p>{`垂直分表`}</p>\n    <p>{`基于列字段进行的。一般是表中的字段较多，将不常用的， 数据较大，长度较长（比如text类型字段）的字段拆分到“扩展表“。 一般是针对那种几百列的大表，也避免查询时，数据量太大造成的“跨页”问题。`}</p>\n    <h4 {...{\n      \"id\": \"针对库进行拆分\"\n    }}>{`针对库进行拆分`}</h4>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Snipaste_2018-10-19_10-00-47.png\",\n        \"alt\": \"alt\"\n      }}></img></p>\n    <p>{`垂直分库`}</p>\n    <p>{`针对一个系统中的不同业务进行拆分, 一个库拆分成多个库, 比如用户User一个库，商品Producet一个库，订单Order一个库. 切分后，要放在多个服务器上，而不是一个服务器上`}</p>\n    <h3 {...{\n      \"id\": \"水平分库拆分\"\n    }}>{`水平(分库)拆分`}</h3>\n    <h4 {...{\n      \"id\": \"只有一种-只能针对表拆分-水平分库分表\"\n    }}>{`只有一种-只能针对表拆分-水平分库分表`}</h4>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Snipaste_2018-10-19_10-03-17.png\",\n        \"alt\": \"alt\"\n      }}></img></p>\n    <p>{`水平分库分表`}</p>\n    <p>{`水平拆分, 只是针对表来说的, 针对数据量巨大的单张表（比如订单表），按照某种规则（RANGE,HASH取模等），切分到多张表里面去, 然后将这些表均匀的分布到多个库中(也可以只放在一个库中, 但是不推荐).`}</p>\n    <p>{`这些切分后的表字段相同, 只是数据集不同.`}</p>\n    <h4 {...{\n      \"id\": \"水平分库分表切分规则\"\n    }}>{`水平分库分表切分规则`}</h4>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`RANGE - id从0到10000一个表，10001到20000一个表；优点：可部分迁移; 缺点：数据分布不均, 会有\"热点数据\"访问的问题`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`HASH取模 -  取用户id，然后hash取模，分配到不同的数据库上。优点：数据分布均匀.缺点：数据迁移的时候麻烦`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`时间 - 按照时间切分，就是将6个月前，甚至一年前的数据切出去放到另外的一张表，因为随着时间流逝，这些表的数据 被查询的概率变小，所以没必要和“热数据”放在一起，这个也是“冷热数据分离”。`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`地理区域 - 比如按照华东，华南，华北这样来区分业务，七牛云应该就是如此。`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"实际拆分案例\"\n    }}>{`实际拆分案例`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://blog.csdn.net/bluishglc/article/details/7696085\"\n      }}>{`https://blog.csdn.net/bluishglc/article/details/7696085`}</a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://zhuanlan.zhihu.com/p/27363448\"\n      }}>{`https://zhuanlan.zhihu.com/p/27363448`}</a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://zhuanlan.zhihu.com/p/42684523\"\n      }}>{`拆分前后性能对比演示(golang实现)`}</a></p>\n    <h2 {...{\n      \"id\": \"拆分后面临的问题\"\n    }}>{`拆分后面临的问题`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`事务支持 - 分库分表后，就成了分布式事务了。`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`如果依赖数据库本身的分布式事务管理功能去执行事务，将付出高昂的性能代价`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`如果由应用程序去协助控制，形成程序逻辑上的事务，又会造成编程方面的负担(原理:将一个跨多个数据库的分布式事务分拆成多个仅处于单个数据库上面的小事务，并通过应用程序来总控各个小事务。)。`}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`多库结果集合并(跨节点的count,order by,group by以及聚合函数问题) - 分别在各个节点上得到结果后在应用程序端进行合并`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`跨库join - 无法join位于不同分库的表，也无法join分表粒度不同的表; 粗略的解决方法： `}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`普遍做法是分两次查询实现。在第一次查询的结果集中找出关联数据的id,根据这些id发起第二次请求得到关联数据`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`全局表：基础数据，所有库都拷贝一份。 `}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`字段冗余：这样有些字段就不用join去查询了`}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`全局主键生成`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"这些问题怎么解决\"\n    }}>{`这些问题怎么解决`}</h2>\n    <h3 {...{\n      \"id\": \"全局主键生成策略\"\n    }}>{`全局主键生成策略`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.cnblogs.com/pangguoming/p/7874369.html\"\n      }}>{`https://www.cnblogs.com/pangguoming/p/7874369.html`}</a></p>\n    <p>{`一旦数据库被切分到多个物理结点上，我们将不能再依赖数据库自身的主键生成机制`}</p>\n    <h4 {...{\n      \"id\": \"几种不够好的生成策略\"\n    }}>{`几种不够好的生成策略`}</h4>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`UUID - 使用UUID作主键是最简单的方案，但是缺点也是非常明显的。由于UUID非常的长，除占用大量存储空间外，最主要的问题是在索引上，在建立索引和基于索引进行查询时都存在性能问题`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`结合数据库维护一个Sequence表：此方案的思路也很简单，在数据库中建立一个Sequence表`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sql\",\n            \"data-language\": \"sql\",\n            \"data-highlighted-line-numbers\": \"\",\n            \"dangerouslySetInnerHTML\": {\n              \"__html\": \"<span class=\\\"token keyword\\\">CREATE</span> <span class=\\\"token keyword\\\">TABLE</span> <span class=\\\"token punctuation\\\">`</span>SEQUENCE<span class=\\\"token punctuation\\\">`</span> <span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token punctuation\\\">`</span>tablename<span class=\\\"token punctuation\\\">`</span> <span class=\\\"token keyword\\\">varchar</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">30</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">NOT</span> <span class=\\\"token boolean\\\">NULL</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">`</span>nextid<span class=\\\"token punctuation\\\">`</span> <span class=\\\"token keyword\\\">bigint</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">NOT</span> <span class=\\\"token boolean\\\">NULL</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token keyword\\\">PRIMARY</span> <span class=\\\"token keyword\\\">KEY</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">`</span>tablename<span class=\\\"token punctuation\\\">`</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">ENGINE</span><span class=\\\"token operator\\\">=</span><span class=\\\"token keyword\\\">InnoDB</span> \\n\"\n            }\n          }}></code></pre>\n        <p parentName=\"li\">{`  这是基于 数据库自身的主键生成机制 的改进 —————— 每当需要为某个表的新纪录生成ID时就从Sequence表中取出对应表的nextid,并将nextid的值加1后更新到数据库中以备下次使用`}</p>\n        <p parentName=\"li\">{`  缺点很明显: 由于所有插入任何都需要访问该表，该表很容易成为系统性能瓶颈，同时它也存在单点问题，一旦该表数据库失效，整个应用程序将无法工作。有人提出使用Master-Slave进行主从同步，但这也只能解决单点问题，并不能解决读写比为1:1的访问压力问题。`}</p>\n      </li>\n    </ul>\n    <h4 {...{\n      \"id\": \"一种优秀的生成策略\"\n    }}>{`一种优秀的生成策略`}</h4>\n    <p>{`reference: `}<a parentName=\"p\" {...{\n        \"href\": \"https://blog.csdn.net/bluishglc/article/details/7710738\"\n      }}>{`https://blog.csdn.net/bluishglc/article/details/7710738`}</a></p>\n    <p>{`建立两台以上的数据库ID生成服务器，每个服务器都有一张记录各表当前ID的Sequence表，但是Sequence中ID增长的步长是服务器的数量，起始值依次错开，这样相当于把ID的生成散列到了每个服务器节点上。例如：如果我们设置两台数据库ID生成服务器，那么就让一台的Sequence表的ID起始值为1,每次增长步长为2,另一台的Sequence表的ID起始值为2,每次增长步长也为2，那么结果就是奇数的ID都将从第一台服务器上生成，偶数的ID都从第二台服务器上生成，这样就将生成ID的压力均匀分散到两台服务器上，同时配合应用程序的控制，当一个服务器失效后，系统能自动切换到另一个服务器上获取ID，从而保证了系统的容错`}</p>\n    <h4 {...{\n      \"id\": \"twitter的分布式自增id算法\"\n    }}>{`twitter的分布式自增id算法`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"http://www.cnblogs.com/relucent/p/4955340.html\"\n      }}>{`http://www.cnblogs.com/relucent/p/4955340.html`}</a></p>\n    <h2 {...{\n      \"id\": \"有哪些现成的解决方案\"\n    }}>{`有哪些现成的解决方案`}</h2>\n    <p>{`reference: `}<a parentName=\"p\" {...{\n        \"href\": \"https://blog.csdn.net/bluishglc/article/details/7766508\"\n      }}>{`https://blog.csdn.net/bluishglc/article/details/7766508`}</a></p>\n    <p>{`目前市面上的分库分表中间件相对较多，其中基于代理方式的有MySQL Proxy和Amoeba， 基于Hibernate框架的是Hibernate Shards，基于jdbc的有当当sharding-jdbc， 基于mybatis的类似maven插件式的有蘑菇街的蘑菇街TSharding， 通过重写spring的ibatis template类的Cobar Client。`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"设计发生变动怎么修改\",\n    level: 2,\n    title: \"设计发生变动怎么修改?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"pd中1n和0n的问题\",\n    level: 2,\n    title: \"PD中1:n和0:n的问题\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"数据编码\",\n    level: 2,\n    title: \"数据编码\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"数据库引擎\",\n    level: 2,\n    title: \"数据库引擎\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"容忍度高\",\n    level: 2,\n    title: \"容忍度高\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"数据库设计范式\",\n    level: 2,\n    title: \"数据库设计范式\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"数据库禁用高级功能\",\n    level: 2,\n    title: \"数据库禁用高级功能\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"禁用子查询，限制多表连接查询\",\n    level: 2,\n    title: \"禁用子查询，限制多表连接查询\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"uuid主键-不要外键\",\n    level: 2,\n    title: \"uuid主键, 不要外键\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"逻辑删除or物理删除\",\n    level: 2,\n    title: \"逻辑删除or物理删除\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"字段设置tips\",\n    level: 2,\n    title: \"字段设置tips\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"通用表处理\",\n    level: 2,\n    title: \"通用表处理\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"索引添加原则\",\n    level: 2,\n    title: \"索引添加原则\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"并发编辑的问题\",\n    level: 2,\n    title: \"并发编辑的问题\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"历史版本设计\",\n    level: 2,\n    title: \"历史版本设计\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"为什么需要分库分表\",\n    level: 2,\n    title: \"为什么需要分库分表\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"两类拆分方法\",\n    level: 2,\n    title: \"两类拆分方法\",\n    children: [\n        {\n              id: \"垂直拆分\",\n              level: 3,\n              title: \"垂直拆分\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"水平分库拆分\",\n              level: 3,\n              title: \"水平(分库)拆分\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"实际拆分案例\",\n    level: 2,\n    title: \"实际拆分案例\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"拆分后面临的问题\",\n    level: 2,\n    title: \"拆分后面临的问题\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"这些问题怎么解决\",\n    level: 2,\n    title: \"这些问题怎么解决\",\n    children: [\n        {\n              id: \"全局主键生成策略\",\n              level: 3,\n              title: \"全局主键生成策略\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"有哪些现成的解决方案\",\n    level: 2,\n    title: \"有哪些现成的解决方案\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {\n  \"title\": \"表设计笔记\",\n  \"tags\": [\n    \"design\",\n    \"db\"\n  ],\n  \"date\": \"2017-06-15T23:35:42.000Z\",\n  \"categories\": \"tech\"\n}\n\n","import Hello from './hello/hello.md';//ref: https://frontarm.com/james-k-nelson/mdx-with-create-react-app/\nimport LinuxNote from './linux-note/linux-note.md';\nimport DbDesignNote from './db-design-note/db-design-note.md';\n\nconst articleRouteMap = {\n  'hello': Hello,\n  'linux-note': LinuxNote,\n  'db-design-note': DbDesignNote,\n};\n\nexport default articleRouteMap;\n","import React from 'react';\nimport css from './About.module.css';\n\nclass About extends React.PureComponent {\n  render() {\n    return (\n        <div className={css.container}>\n          未完待续...\n        </div>\n    );\n  }\n}\n\nexport default About\n","import React from 'react';\n\nclass Book extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        Books...\n      </div>\n    );\n  }\n}\n\nexport default Book;\n","import React from 'react';\n\nclass Movie extends React.PureComponent {\n  render() {\n    return (\n      <div>Movies</div>\n    );\n  }\n}\n\nexport default Movie;\n","import React from 'react';\n\nclass Music extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        Music\n      </div>\n    );\n  }\n}\n\nexport default Music;","import React from 'react';\n\nclass Tool extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        Tool\n      </div>\n    );\n  }\n}\n\nexport default Tool;","import React from 'react';\r\nimport css from './Main.module.css';\r\nimport toc from 'markdown-toc'\r\nimport namePathMapping from '../../assets/md'\r\nimport Link from \"../route/Link\";\r\nimport Header from \"../Head\";\r\nimport MdxContent from \"../MdxContent\";\r\nimport articleRouteMap from \"../../assets/mdx\";\r\nimport About from '../items/About';\r\nimport Book from '../items/Book';\r\nimport Movie from '../items/Movie/Movie';\r\nimport Music from '../items/Music';\r\nimport Tool from '../items/Tool';\r\n\r\n// ref: https://www.jianshu.com/p/91c360d96e44\r\n// then 里面返回 Promise, 会等到Promise 里的动作执行完才进入下一个then\r\nnamePathMapping.map(md => fetch(md.name).then(resp => resp.text()).then(text => {\r\n  let result = {\r\n    name: md.name,\r\n    mdContent: text,\r\n  };\r\n  // console.log(result)\r\n  return result;\r\n}));\r\n\r\nclass Main extends React.PureComponent {\r\n  state = {\r\n    hash: window.location.hash,\r\n  };\r\n\r\n  componentDidMount() {\r\n    // 注册 pushState 处理器\r\n    window.addEventListener('pushState', () => {\r\n      this.setState({\r\n        hash: window.location.hash,\r\n      });\r\n    });\r\n    // 注册 navigation 处理器\r\n    window.addEventListener('popstate', () => {\r\n      this.setState({\r\n        hash: window.location.hash,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // Current content, default to article catalog\r\n    let Current = () => (\r\n        <div className={css.table}>\r\n          {Object.keys(articleRouteMap).map((name, index) => (\r\n              <div key={index} className={css.item}>\r\n                <Link to={`#/mds/${name}`}>\r\n                  {name}\r\n                </Link>\r\n              </div>\r\n          ))}\r\n        </div>\r\n    );\r\n\r\n    let hash = this.state.hash;\r\n    let articleHash = hash.replace(/#\\/mds\\//g, target => '');\r\n    if (articleHash !== '') {\r\n      const Article = articleRouteMap[articleHash];\r\n      Current = () => (\r\n          <MdxContent>\r\n            <Article/>\r\n          </MdxContent>\r\n      );\r\n    }\r\n    let itemHash = hash.replace(/#\\/items\\//g, target => '');\r\n    if (itemHash === 'me') {\r\n      Current = About;\r\n    } else if (itemHash === 'books') {\r\n      Current = Book;\r\n    } else if (itemHash === 'movies') {\r\n      Current = Movie;\r\n    } else if (itemHash === 'musics') {\r\n      Current = Music;\r\n    } else if (itemHash === 'tools') {\r\n      Current = Tool;\r\n    }\r\n\r\n    return (\r\n        <div className={css.main}>\r\n          <Header />\r\n          <Current/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Sider from \"./comp/Sider\";\nimport Main from \"./comp/Main\";\n\nconst App = () => {\n  return (\n      <div className=\"app\">\n        {/*<Sider/>*/}\n        <Main/>\n      </div>\n  );\n};\n\n// let readMarkdownPromise = new Promise(((resolve, reject) => {\n//\n// }));\n// readMarkdownPromise.then()\n\n// 自定义 pushState/replaceState\n// ref: https://stackoverflow.com/questions/4570093/how-to-get-notified-about-changes-of-the-history-via-history-pushstate\n(function () {\n  let _wr = function (type) {\n    let orig = window.history[type];\n    return function () {\n      let rv = orig.apply(this, arguments);\n      let e = new Event(type);\n      e.arguments = arguments;\n      window.dispatchEvent(e);\n      return rv;\n    };\n  };\n\n  window.history.pushState = _wr('pushState');\n  window.history.replaceState = _wr('replaceState');\n})();\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}